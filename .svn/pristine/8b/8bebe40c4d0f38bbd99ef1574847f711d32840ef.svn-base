#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RealEstate.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="REDB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBlackListItem(BlackListItem instance);
    partial void UpdateBlackListItem(BlackListItem instance);
    partial void DeleteBlackListItem(BlackListItem instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBlackListNumber(BlackListNumber instance);
    partial void UpdateBlackListNumber(BlackListNumber instance);
    partial void DeleteBlackListNumber(BlackListNumber instance);
    partial void InsertBrokerEstateType(BrokerEstateType instance);
    partial void UpdateBrokerEstateType(BrokerEstateType instance);
    partial void DeleteBrokerEstateType(BrokerEstateType instance);
    partial void InsertBrokerOrderType(BrokerOrderType instance);
    partial void UpdateBrokerOrderType(BrokerOrderType instance);
    partial void DeleteBrokerOrderType(BrokerOrderType instance);
    partial void InsertBrokersRegion(BrokersRegion instance);
    partial void UpdateBrokersRegion(BrokersRegion instance);
    partial void DeleteBrokersRegion(BrokersRegion instance);
    partial void InsertBrokerState(BrokerState instance);
    partial void UpdateBrokerState(BrokerState instance);
    partial void DeleteBrokerState(BrokerState instance);
    partial void InsertBuildingType(BuildingType instance);
    partial void UpdateBuildingType(BuildingType instance);
    partial void DeleteBuildingType(BuildingType instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertClientSuggestedEstate(ClientSuggestedEstate instance);
    partial void UpdateClientSuggestedEstate(ClientSuggestedEstate instance);
    partial void DeleteClientSuggestedEstate(ClientSuggestedEstate instance);
    partial void InsertCommercialPlaceLevel(CommercialPlaceLevel instance);
    partial void UpdateCommercialPlaceLevel(CommercialPlaceLevel instance);
    partial void DeleteCommercialPlaceLevel(CommercialPlaceLevel instance);
    partial void InsertConvenient(Convenient instance);
    partial void UpdateConvenient(Convenient instance);
    partial void DeleteConvenient(Convenient instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertEstateConvenient(EstateConvenient instance);
    partial void UpdateEstateConvenient(EstateConvenient instance);
    partial void DeleteEstateConvenient(EstateConvenient instance);
    partial void InsertEstateImage(EstateImage instance);
    partial void UpdateEstateImage(EstateImage instance);
    partial void DeleteEstateImage(EstateImage instance);
    partial void InsertEstate(Estate instance);
    partial void UpdateEstate(Estate instance);
    partial void DeleteEstate(Estate instance);
    partial void InsertEstatesAndDemand(EstatesAndDemand instance);
    partial void UpdateEstatesAndDemand(EstatesAndDemand instance);
    partial void DeleteEstatesAndDemand(EstatesAndDemand instance);
    partial void InsertEstateType(EstateType instance);
    partial void UpdateEstateType(EstateType instance);
    partial void DeleteEstateType(EstateType instance);
    partial void InsertEstateVideo(EstateVideo instance);
    partial void UpdateEstateVideo(EstateVideo instance);
    partial void DeleteEstateVideo(EstateVideo instance);
    partial void InsertFavoriteClient(FavoriteClient instance);
    partial void UpdateFavoriteClient(FavoriteClient instance);
    partial void DeleteFavoriteClient(FavoriteClient instance);
    partial void InsertFavoriteEstate(FavoriteEstate instance);
    partial void UpdateFavoriteEstate(FavoriteEstate instance);
    partial void DeleteFavoriteEstate(FavoriteEstate instance);
    partial void InsertNeededBuildingType(NeededBuildingType instance);
    partial void UpdateNeededBuildingType(NeededBuildingType instance);
    partial void DeleteNeededBuildingType(NeededBuildingType instance);
    partial void InsertNeededEstate(NeededEstate instance);
    partial void UpdateNeededEstate(NeededEstate instance);
    partial void DeleteNeededEstate(NeededEstate instance);
    partial void InsertNeededEstateType(NeededEstateType instance);
    partial void UpdateNeededEstateType(NeededEstateType instance);
    partial void DeleteNeededEstateType(NeededEstateType instance);
    partial void InsertNeededProject(NeededProject instance);
    partial void UpdateNeededProject(NeededProject instance);
    partial void DeleteNeededProject(NeededProject instance);
    partial void InsertNeededRegion(NeededRegion instance);
    partial void UpdateNeededRegion(NeededRegion instance);
    partial void DeleteNeededRegion(NeededRegion instance);
    partial void InsertNeededRemont(NeededRemont instance);
    partial void UpdateNeededRemont(NeededRemont instance);
    partial void DeleteNeededRemont(NeededRemont instance);
    partial void InsertOldPrice(OldPrice instance);
    partial void UpdateOldPrice(OldPrice instance);
    partial void DeleteOldPrice(OldPrice instance);
    partial void InsertOperationalSignificance(OperationalSignificance instance);
    partial void UpdateOperationalSignificance(OperationalSignificance instance);
    partial void DeleteOperationalSignificance(OperationalSignificance instance);
    partial void InsertOrderType(OrderType instance);
    partial void UpdateOrderType(OrderType instance);
    partial void DeleteOrderType(OrderType instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertRealtorSetting(RealtorSetting instance);
    partial void UpdateRealtorSetting(RealtorSetting instance);
    partial void DeleteRealtorSetting(RealtorSetting instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertRemont(Remont instance);
    partial void UpdateRemont(Remont instance);
    partial void DeleteRemont(Remont instance);
    partial void InsertRentedEstate(RentedEstate instance);
    partial void UpdateRentedEstate(RentedEstate instance);
    partial void DeleteRentedEstate(RentedEstate instance);
    partial void InsertRoofing(Roofing instance);
    partial void UpdateRoofing(Roofing instance);
    partial void DeleteRoofing(Roofing instance);
    partial void InsertSelledEstate(SelledEstate instance);
    partial void UpdateSelledEstate(SelledEstate instance);
    partial void DeleteSelledEstate(SelledEstate instance);
    partial void InsertSignificanceOfTheUse(SignificanceOfTheUse instance);
    partial void UpdateSignificanceOfTheUse(SignificanceOfTheUse instance);
    partial void DeleteSignificanceOfTheUse(SignificanceOfTheUse instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertStreet(Street instance);
    partial void UpdateStreet(Street instance);
    partial void DeleteStreet(Street instance);
    partial void InsertUserDisplayColumn(UserDisplayColumn instance);
    partial void UpdateUserDisplayColumn(UserDisplayColumn instance);
    partial void DeleteUserDisplayColumn(UserDisplayColumn instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::RealEstate.DataAccess.Properties.Settings.Default.REDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BlackListItem> BlackListItems
		{
			get
			{
				return this.GetTable<BlackListItem>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<BlackListNumber> BlackListNumbers
		{
			get
			{
				return this.GetTable<BlackListNumber>();
			}
		}
		
		public System.Data.Linq.Table<BrokerEstateType> BrokerEstateTypes
		{
			get
			{
				return this.GetTable<BrokerEstateType>();
			}
		}
		
		public System.Data.Linq.Table<BrokerOrderType> BrokerOrderTypes
		{
			get
			{
				return this.GetTable<BrokerOrderType>();
			}
		}
		
		public System.Data.Linq.Table<BrokersRegion> BrokersRegions
		{
			get
			{
				return this.GetTable<BrokersRegion>();
			}
		}
		
		public System.Data.Linq.Table<BrokerState> BrokerStates
		{
			get
			{
				return this.GetTable<BrokerState>();
			}
		}
		
		public System.Data.Linq.Table<BuildingType> BuildingTypes
		{
			get
			{
				return this.GetTable<BuildingType>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ClientSuggestedEstate> ClientSuggestedEstates
		{
			get
			{
				return this.GetTable<ClientSuggestedEstate>();
			}
		}
		
		public System.Data.Linq.Table<CommercialPlaceLevel> CommercialPlaceLevels
		{
			get
			{
				return this.GetTable<CommercialPlaceLevel>();
			}
		}
		
		public System.Data.Linq.Table<Convenient> Convenients
		{
			get
			{
				return this.GetTable<Convenient>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<EstateConvenient> EstateConvenients
		{
			get
			{
				return this.GetTable<EstateConvenient>();
			}
		}
		
		public System.Data.Linq.Table<EstateImage> EstateImages
		{
			get
			{
				return this.GetTable<EstateImage>();
			}
		}
		
		public System.Data.Linq.Table<Estate> Estates
		{
			get
			{
				return this.GetTable<Estate>();
			}
		}
		
		public System.Data.Linq.Table<EstatesAndDemand> EstatesAndDemands
		{
			get
			{
				return this.GetTable<EstatesAndDemand>();
			}
		}
		
		public System.Data.Linq.Table<EstateType> EstateTypes
		{
			get
			{
				return this.GetTable<EstateType>();
			}
		}
		
		public System.Data.Linq.Table<EstateVideo> EstateVideos
		{
			get
			{
				return this.GetTable<EstateVideo>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteClient> FavoriteClients
		{
			get
			{
				return this.GetTable<FavoriteClient>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteEstate> FavoriteEstates
		{
			get
			{
				return this.GetTable<FavoriteEstate>();
			}
		}
		
		public System.Data.Linq.Table<NeededBuildingType> NeededBuildingTypes
		{
			get
			{
				return this.GetTable<NeededBuildingType>();
			}
		}
		
		public System.Data.Linq.Table<NeededEstate> NeededEstates
		{
			get
			{
				return this.GetTable<NeededEstate>();
			}
		}
		
		public System.Data.Linq.Table<NeededEstateType> NeededEstateTypes
		{
			get
			{
				return this.GetTable<NeededEstateType>();
			}
		}
		
		public System.Data.Linq.Table<NeededProject> NeededProjects
		{
			get
			{
				return this.GetTable<NeededProject>();
			}
		}
		
		public System.Data.Linq.Table<NeededRegion> NeededRegions
		{
			get
			{
				return this.GetTable<NeededRegion>();
			}
		}
		
		public System.Data.Linq.Table<NeededRemont> NeededRemonts
		{
			get
			{
				return this.GetTable<NeededRemont>();
			}
		}
		
		public System.Data.Linq.Table<OldPrice> OldPrices
		{
			get
			{
				return this.GetTable<OldPrice>();
			}
		}
		
		public System.Data.Linq.Table<OperationalSignificance> OperationalSignificances
		{
			get
			{
				return this.GetTable<OperationalSignificance>();
			}
		}
		
		public System.Data.Linq.Table<OrderType> OrderTypes
		{
			get
			{
				return this.GetTable<OrderType>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<RealtorSetting> RealtorSettings
		{
			get
			{
				return this.GetTable<RealtorSetting>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Remont> Remonts
		{
			get
			{
				return this.GetTable<Remont>();
			}
		}
		
		public System.Data.Linq.Table<RentedEstate> RentedEstates
		{
			get
			{
				return this.GetTable<RentedEstate>();
			}
		}
		
		public System.Data.Linq.Table<Roofing> Roofings
		{
			get
			{
				return this.GetTable<Roofing>();
			}
		}
		
		public System.Data.Linq.Table<SelledEstate> SelledEstates
		{
			get
			{
				return this.GetTable<SelledEstate>();
			}
		}
		
		public System.Data.Linq.Table<SignificanceOfTheUse> SignificanceOfTheUses
		{
			get
			{
				return this.GetTable<SignificanceOfTheUse>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Street> Streets
		{
			get
			{
				return this.GetTable<Street>();
			}
		}
		
		public System.Data.Linq.Table<UserDisplayColumn> UserDisplayColumns
		{
			get
			{
				return this.GetTable<UserDisplayColumn>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlackListItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlackListItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<BlackListNumber> _BlackListNumbers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public BlackListItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlackListItem_BlackListNumber", Storage="_BlackListNumbers", ThisKey="ID", OtherKey="BlackListItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<BlackListNumber> BlackListNumbers
		{
			get
			{
				if ((this.serializing 
							&& (this._BlackListNumbers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlackListNumbers;
			}
			set
			{
				this._BlackListNumbers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlackListNumbers(BlackListNumber entity)
		{
			this.SendPropertyChanging();
			entity.BlackListItem = this;
		}
		
		private void detach_BlackListNumbers(BlackListNumber entity)
		{
			this.SendPropertyChanging();
			entity.BlackListItem = null;
		}
		
		private void Initialize()
		{
			this._BlackListNumbers = new EntitySet<BlackListNumber>(new Action<BlackListNumber>(this.attach_BlackListNumbers), new Action<BlackListNumber>(this.detach_BlackListNumbers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Family;
		
		private string _Telephone1;
		
		private string _Telephone2;
		
		private string _UserName;
		
		private System.Nullable<int> _RoleID;
		
		private string _Password;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<BrokerEstateType> _BrokerEstateTypes;
		
		private EntitySet<BrokerOrderType> _BrokerOrderTypes;
		
		private EntitySet<BrokersRegion> _BrokersRegions;
		
		private EntitySet<BrokerState> _BrokerStates;
		
		private EntitySet<ClientSuggestedEstate> _ClientSuggestedEstates;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<EstatesAndDemand> _EstatesAndDemands;
		
		private EntitySet<FavoriteClient> _FavoriteClients;
		
		private EntitySet<FavoriteEstate> _FavoriteEstates;
		
		private EntitySet<NeededEstate> _NeededEstates;
		
		private EntitySet<RentedEstate> _RentedEstates;
		
		private EntitySet<SelledEstate> _SelledEstates;
		
		private EntitySet<UserDisplayColumn> _UserDisplayColumns;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnTelephone1Changing(string value);
    partial void OnTelephone1Changed();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Family
		{
			get
			{
				return this._Family;
			}
			set
			{
				if ((this._Family != value))
				{
					this.OnFamilyChanging(value);
					this.SendPropertyChanging();
					this._Family = value;
					this.SendPropertyChanged("Family");
					this.OnFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this.OnTelephone1Changing(value);
					this.SendPropertyChanging();
					this._Telephone1 = value;
					this.SendPropertyChanged("Telephone1");
					this.OnTelephone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerEstateType", Storage="_BrokerEstateTypes", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<BrokerEstateType> BrokerEstateTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerEstateTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerEstateTypes;
			}
			set
			{
				this._BrokerEstateTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerOrderType", Storage="_BrokerOrderTypes", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<BrokerOrderType> BrokerOrderTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerOrderTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerOrderTypes;
			}
			set
			{
				this._BrokerOrderTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokersRegion", Storage="_BrokersRegions", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<BrokersRegion> BrokersRegions
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokersRegions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokersRegions;
			}
			set
			{
				this._BrokersRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerState", Storage="_BrokerStates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<BrokerState> BrokerStates
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerStates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerStates;
			}
			set
			{
				this._BrokerStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClientSuggestedEstate", Storage="_ClientSuggestedEstates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<ClientSuggestedEstate> ClientSuggestedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._ClientSuggestedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClientSuggestedEstates;
			}
			set
			{
				this._ClientSuggestedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Estate", Storage="_Estates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstatesAndDemand", Storage="_EstatesAndDemands", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<EstatesAndDemand> EstatesAndDemands
		{
			get
			{
				if ((this.serializing 
							&& (this._EstatesAndDemands.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstatesAndDemands;
			}
			set
			{
				this._EstatesAndDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteClient", Storage="_FavoriteClients", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<FavoriteClient> FavoriteClients
		{
			get
			{
				if ((this.serializing 
							&& (this._FavoriteClients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FavoriteClients;
			}
			set
			{
				this._FavoriteClients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteEstate", Storage="_FavoriteEstates", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<FavoriteEstate> FavoriteEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._FavoriteEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FavoriteEstates;
			}
			set
			{
				this._FavoriteEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NeededEstate", Storage="_NeededEstates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<NeededEstate> NeededEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededEstates;
			}
			set
			{
				this._NeededEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RentedEstate", Storage="_RentedEstates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<RentedEstate> RentedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._RentedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RentedEstates;
			}
			set
			{
				this._RentedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SelledEstate", Storage="_SelledEstates", ThisKey="ID", OtherKey="BrokerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<SelledEstate> SelledEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._SelledEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SelledEstates;
			}
			set
			{
				this._SelledEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserDisplayColumn", Storage="_UserDisplayColumns", ThisKey="ID", OtherKey="UserID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<UserDisplayColumn> UserDisplayColumns
		{
			get
			{
				if ((this.serializing 
							&& (this._UserDisplayColumns.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserDisplayColumns;
			}
			set
			{
				this._UserDisplayColumns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BrokerEstateTypes(BrokerEstateType entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BrokerEstateTypes(BrokerEstateType entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BrokerOrderTypes(BrokerOrderType entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BrokerOrderTypes(BrokerOrderType entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BrokersRegions(BrokersRegion entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BrokersRegions(BrokersRegion entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BrokerStates(BrokerState entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BrokerStates(BrokerState entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FavoriteClients(FavoriteClient entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FavoriteClients(FavoriteClient entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FavoriteEstates(FavoriteEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FavoriteEstates(FavoriteEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_NeededEstates(NeededEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_NeededEstates(NeededEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserDisplayColumns(UserDisplayColumn entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserDisplayColumns(UserDisplayColumn entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._BrokerEstateTypes = new EntitySet<BrokerEstateType>(new Action<BrokerEstateType>(this.attach_BrokerEstateTypes), new Action<BrokerEstateType>(this.detach_BrokerEstateTypes));
			this._BrokerOrderTypes = new EntitySet<BrokerOrderType>(new Action<BrokerOrderType>(this.attach_BrokerOrderTypes), new Action<BrokerOrderType>(this.detach_BrokerOrderTypes));
			this._BrokersRegions = new EntitySet<BrokersRegion>(new Action<BrokersRegion>(this.attach_BrokersRegions), new Action<BrokersRegion>(this.detach_BrokersRegions));
			this._BrokerStates = new EntitySet<BrokerState>(new Action<BrokerState>(this.attach_BrokerStates), new Action<BrokerState>(this.detach_BrokerStates));
			this._ClientSuggestedEstates = new EntitySet<ClientSuggestedEstate>(new Action<ClientSuggestedEstate>(this.attach_ClientSuggestedEstates), new Action<ClientSuggestedEstate>(this.detach_ClientSuggestedEstates));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._EstatesAndDemands = new EntitySet<EstatesAndDemand>(new Action<EstatesAndDemand>(this.attach_EstatesAndDemands), new Action<EstatesAndDemand>(this.detach_EstatesAndDemands));
			this._FavoriteClients = new EntitySet<FavoriteClient>(new Action<FavoriteClient>(this.attach_FavoriteClients), new Action<FavoriteClient>(this.detach_FavoriteClients));
			this._FavoriteEstates = new EntitySet<FavoriteEstate>(new Action<FavoriteEstate>(this.attach_FavoriteEstates), new Action<FavoriteEstate>(this.detach_FavoriteEstates));
			this._NeededEstates = new EntitySet<NeededEstate>(new Action<NeededEstate>(this.attach_NeededEstates), new Action<NeededEstate>(this.detach_NeededEstates));
			this._RentedEstates = new EntitySet<RentedEstate>(new Action<RentedEstate>(this.attach_RentedEstates), new Action<RentedEstate>(this.detach_RentedEstates));
			this._SelledEstates = new EntitySet<SelledEstate>(new Action<SelledEstate>(this.attach_SelledEstates), new Action<SelledEstate>(this.detach_SelledEstates));
			this._UserDisplayColumns = new EntitySet<UserDisplayColumn>(new Action<UserDisplayColumn>(this.attach_UserDisplayColumns), new Action<UserDisplayColumn>(this.detach_UserDisplayColumns));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlackListNumbers")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlackListNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Phone;
		
		private int _BlackListItemID;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<BlackListItem> _BlackListItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnBlackListItemIDChanging(int value);
    partial void OnBlackListItemIDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public BlackListNumber()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlackListItemID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int BlackListItemID
		{
			get
			{
				return this._BlackListItemID;
			}
			set
			{
				if ((this._BlackListItemID != value))
				{
					if (this._BlackListItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlackListItemIDChanging(value);
					this.SendPropertyChanging();
					this._BlackListItemID = value;
					this.SendPropertyChanged("BlackListItemID");
					this.OnBlackListItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlackListItem_BlackListNumber", Storage="_BlackListItem", ThisKey="BlackListItemID", OtherKey="ID", IsForeignKey=true)]
		public BlackListItem BlackListItem
		{
			get
			{
				return this._BlackListItem.Entity;
			}
			set
			{
				BlackListItem previousValue = this._BlackListItem.Entity;
				if (((previousValue != value) 
							|| (this._BlackListItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlackListItem.Entity = null;
						previousValue.BlackListNumbers.Remove(this);
					}
					this._BlackListItem.Entity = value;
					if ((value != null))
					{
						value.BlackListNumbers.Add(this);
						this._BlackListItemID = value.ID;
					}
					else
					{
						this._BlackListItemID = default(int);
					}
					this.SendPropertyChanged("BlackListItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BlackListItem = default(EntityRef<BlackListItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BrokerEstateTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BrokerEstateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateTypeID;
		
		private int _BrokerID;
		
		private System.Nullable<int> _EstateTypeOriginalID;
		
		private System.Nullable<int> _BrokerOriginalID;
		
		private EntityRef<User> _User;
		
		private EntityRef<EstateType> _EstateType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateTypeIDChanging(int value);
    partial void OnEstateTypeIDChanged();
    partial void OnBrokerIDChanging(int value);
    partial void OnBrokerIDChanged();
    partial void OnEstateTypeOriginalIDChanging(System.Nullable<int> value);
    partial void OnEstateTypeOriginalIDChanged();
    partial void OnBrokerOriginalIDChanging(System.Nullable<int> value);
    partial void OnBrokerOriginalIDChanged();
    #endregion
		
		public BrokerEstateType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateTypeID
		{
			get
			{
				return this._EstateTypeID;
			}
			set
			{
				if ((this._EstateTypeID != value))
				{
					if (this._EstateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeID = value;
					this.SendPropertyChanged("EstateTypeID");
					this.OnEstateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> EstateTypeOriginalID
		{
			get
			{
				return this._EstateTypeOriginalID;
			}
			set
			{
				if ((this._EstateTypeOriginalID != value))
				{
					this.OnEstateTypeOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeOriginalID = value;
					this.SendPropertyChanged("EstateTypeOriginalID");
					this.OnEstateTypeOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BrokerOriginalID
		{
			get
			{
				return this._BrokerOriginalID;
			}
			set
			{
				if ((this._BrokerOriginalID != value))
				{
					this.OnBrokerOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerOriginalID = value;
					this.SendPropertyChanged("BrokerOriginalID");
					this.OnBrokerOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerEstateType", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BrokerEstateTypes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BrokerEstateTypes.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_BrokerEstateType", Storage="_EstateType", ThisKey="EstateTypeID", OtherKey="EstateTypeID", IsForeignKey=true)]
		public EstateType EstateType
		{
			get
			{
				return this._EstateType.Entity;
			}
			set
			{
				EstateType previousValue = this._EstateType.Entity;
				if (((previousValue != value) 
							|| (this._EstateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateType.Entity = null;
						previousValue.BrokerEstateTypes.Remove(this);
					}
					this._EstateType.Entity = value;
					if ((value != null))
					{
						value.BrokerEstateTypes.Add(this);
						this._EstateTypeID = value.EstateTypeID;
					}
					else
					{
						this._EstateTypeID = default(int);
					}
					this.SendPropertyChanged("EstateType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._EstateType = default(EntityRef<EstateType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BrokerOrderTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BrokerOrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrokerID;
		
		private int _OrderTypeID;
		
		private System.Nullable<int> _BrokerOriginalID;
		
		private System.Nullable<int> _OrderTypeOriginalID;
		
		private EntityRef<User> _User;
		
		private EntityRef<OrderType> _OrderType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrokerIDChanging(int value);
    partial void OnBrokerIDChanged();
    partial void OnOrderTypeIDChanging(int value);
    partial void OnOrderTypeIDChanged();
    partial void OnBrokerOriginalIDChanging(System.Nullable<int> value);
    partial void OnBrokerOriginalIDChanged();
    partial void OnOrderTypeOriginalIDChanging(System.Nullable<int> value);
    partial void OnOrderTypeOriginalIDChanged();
    #endregion
		
		public BrokerOrderType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int OrderTypeID
		{
			get
			{
				return this._OrderTypeID;
			}
			set
			{
				if ((this._OrderTypeID != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeID = value;
					this.SendPropertyChanged("OrderTypeID");
					this.OnOrderTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> BrokerOriginalID
		{
			get
			{
				return this._BrokerOriginalID;
			}
			set
			{
				if ((this._BrokerOriginalID != value))
				{
					this.OnBrokerOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerOriginalID = value;
					this.SendPropertyChanged("BrokerOriginalID");
					this.OnBrokerOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> OrderTypeOriginalID
		{
			get
			{
				return this._OrderTypeOriginalID;
			}
			set
			{
				if ((this._OrderTypeOriginalID != value))
				{
					this.OnOrderTypeOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeOriginalID = value;
					this.SendPropertyChanged("OrderTypeOriginalID");
					this.OnOrderTypeOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerOrderType", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BrokerOrderTypes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BrokerOrderTypes.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_BrokerOrderType", Storage="_OrderType", ThisKey="OrderTypeID", OtherKey="OrderTypeID", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.BrokerOrderTypes.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.BrokerOrderTypes.Add(this);
						this._OrderTypeID = value.OrderTypeID;
					}
					else
					{
						this._OrderTypeID = default(int);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._OrderType = default(EntityRef<OrderType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BrokersRegions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BrokersRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrokerID;
		
		private int _RegionID;
		
		private System.Nullable<int> _BrokerOriginalID;
		
		private System.Nullable<int> _RegionOriginalID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrokerIDChanging(int value);
    partial void OnBrokerIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnBrokerOriginalIDChanging(System.Nullable<int> value);
    partial void OnBrokerOriginalIDChanged();
    partial void OnRegionOriginalIDChanging(System.Nullable<int> value);
    partial void OnRegionOriginalIDChanged();
    #endregion
		
		public BrokersRegion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> BrokerOriginalID
		{
			get
			{
				return this._BrokerOriginalID;
			}
			set
			{
				if ((this._BrokerOriginalID != value))
				{
					this.OnBrokerOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerOriginalID = value;
					this.SendPropertyChanged("BrokerOriginalID");
					this.OnBrokerOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RegionOriginalID
		{
			get
			{
				return this._RegionOriginalID;
			}
			set
			{
				if ((this._RegionOriginalID != value))
				{
					this.OnRegionOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._RegionOriginalID = value;
					this.SendPropertyChanged("RegionOriginalID");
					this.OnRegionOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokersRegion", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BrokersRegions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BrokersRegions.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_BrokersRegion", Storage="_Region", ThisKey="RegionID", OtherKey="RegionID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.BrokersRegions.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.BrokersRegions.Add(this);
						this._RegionID = value.RegionID;
					}
					else
					{
						this._RegionID = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BrokerStates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BrokerState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrokerID;
		
		private int _StateID;
		
		private System.Nullable<int> _BrokerOriginalID;
		
		private System.Nullable<int> _StateOriginalID;
		
		private EntityRef<User> _User;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrokerIDChanging(int value);
    partial void OnBrokerIDChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnBrokerOriginalIDChanging(System.Nullable<int> value);
    partial void OnBrokerOriginalIDChanged();
    partial void OnStateOriginalIDChanging(System.Nullable<int> value);
    partial void OnStateOriginalIDChanged();
    #endregion
		
		public BrokerState()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> BrokerOriginalID
		{
			get
			{
				return this._BrokerOriginalID;
			}
			set
			{
				if ((this._BrokerOriginalID != value))
				{
					this.OnBrokerOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerOriginalID = value;
					this.SendPropertyChanged("BrokerOriginalID");
					this.OnBrokerOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> StateOriginalID
		{
			get
			{
				return this._StateOriginalID;
			}
			set
			{
				if ((this._StateOriginalID != value))
				{
					this.OnStateOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._StateOriginalID = value;
					this.SendPropertyChanged("StateOriginalID");
					this.OnStateOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BrokerState", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BrokerStates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BrokerStates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_BrokerState", Storage="_State", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.BrokerStates.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.BrokerStates.Add(this);
						this._StateID = value.ID;
					}
					else
					{
						this._StateID = default(int);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuildingTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BuildingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuildingTypeID;
		
		private string _NameAm;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededBuildingType> _NeededBuildingTypes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuildingTypeIDChanging(int value);
    partial void OnBuildingTypeIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public BuildingType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BuildingTypeID
		{
			get
			{
				return this._BuildingTypeID;
			}
			set
			{
				if ((this._BuildingTypeID != value))
				{
					this.OnBuildingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingTypeID = value;
					this.SendPropertyChanged("BuildingTypeID");
					this.OnBuildingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingType_Estate", Storage="_Estates", ThisKey="BuildingTypeID", OtherKey="BuildingTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingType_NeededBuildingType", Storage="_NeededBuildingTypes", ThisKey="BuildingTypeID", OtherKey="BuildingTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<NeededBuildingType> NeededBuildingTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededBuildingTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededBuildingTypes;
			}
			set
			{
				this._NeededBuildingTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.BuildingType = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.BuildingType = null;
		}
		
		private void attach_NeededBuildingTypes(NeededBuildingType entity)
		{
			this.SendPropertyChanging();
			entity.BuildingType = this;
		}
		
		private void detach_NeededBuildingTypes(NeededBuildingType entity)
		{
			this.SendPropertyChanging();
			entity.BuildingType = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededBuildingTypes = new EntitySet<NeededBuildingType>(new Action<NeededBuildingType>(this.attach_NeededBuildingTypes), new Action<NeededBuildingType>(this.detach_NeededBuildingTypes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _NameAm;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<int> _CountryID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<Region> _Regions;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<State> _State;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public City()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Estate", Storage="_Estates", ThisKey="CityID", OtherKey="CityID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Region", Storage="_Regions", ThisKey="CityID", OtherKey="CityID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Region> Regions
		{
			get
			{
				if ((this.serializing 
							&& (this._Regions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_City", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_State", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._StateID = value.ID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			this._Country = default(EntityRef<Country>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientSuggestedEstates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ClientSuggestedEstate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateID;
		
		private int _ClientID;
		
		private System.DateTime _SuggestDate;
		
		private System.Nullable<int> _BrokerID;
		
		private string _Comment;
		
		private EntityRef<User> _User;
		
		private EntityRef<Estate> _Estate;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnSuggestDateChanging(System.DateTime value);
    partial void OnSuggestDateChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ClientSuggestedEstate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime SuggestDate
		{
			get
			{
				return this._SuggestDate;
			}
			set
			{
				if ((this._SuggestDate != value))
				{
					this.OnSuggestDateChanging(value);
					this.SendPropertyChanging();
					this._SuggestDate = value;
					this.SendPropertyChanged("SuggestDate");
					this.OnSuggestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClientSuggestedEstate", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ClientSuggestedEstates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ClientSuggestedEstates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_ClientSuggestedEstate", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.ClientSuggestedEstates.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.ClientSuggestedEstates.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_ClientSuggestedEstate", Storage="_NeededEstate", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.ClientSuggestedEstates.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.ClientSuggestedEstates.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._Estate = default(EntityRef<Estate>);
			this._NeededEstate = default(EntityRef<NeededEstate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommercialPlaceLevels")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommercialPlaceLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public CommercialPlaceLevel()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Convenients")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Convenient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<EstateConvenient> _EstateConvenients;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Convenient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenient_EstateConvenient", Storage="_EstateConvenients", ThisKey="ID", OtherKey="ConvenientID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<EstateConvenient> EstateConvenients
		{
			get
			{
				if ((this.serializing 
							&& (this._EstateConvenients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstateConvenients;
			}
			set
			{
				this._EstateConvenients.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstateConvenients(EstateConvenient entity)
		{
			this.SendPropertyChanging();
			entity.Convenient = this;
		}
		
		private void detach_EstateConvenients(EstateConvenient entity)
		{
			this.SendPropertyChanging();
			entity.Convenient = null;
		}
		
		private void Initialize()
		{
			this._EstateConvenients = new EntitySet<EstateConvenient>(new Action<EstateConvenient>(this.attach_EstateConvenients), new Action<EstateConvenient>(this.detach_EstateConvenients));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<Estate> _Estates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Country()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_City", Storage="_Cities", ThisKey="ID", OtherKey="CountryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<City> Cities
		{
			get
			{
				if ((this.serializing 
							&& (this._Cities.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Estate", Storage="_Estates", ThisKey="ID", OtherKey="CountryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void Initialize()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currencies")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrencyID;
		
		private string _NameAm;
		
		private int _ValueInAMD;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededEstate> _NeededEstates;
		
		private EntitySet<OldPrice> _OldPrices;
		
		private EntitySet<RentedEstate> _RentedEstates;
		
		private EntitySet<SelledEstate> _SelledEstates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnValueInAMDChanging(int value);
    partial void OnValueInAMDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Currency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueInAMD", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ValueInAMD
		{
			get
			{
				return this._ValueInAMD;
			}
			set
			{
				if ((this._ValueInAMD != value))
				{
					this.OnValueInAMDChanging(value);
					this.SendPropertyChanging();
					this._ValueInAMD = value;
					this.SendPropertyChanged("ValueInAMD");
					this.OnValueInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Estate", Storage="_Estates", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_NeededEstate", Storage="_NeededEstates", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<NeededEstate> NeededEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededEstates;
			}
			set
			{
				this._NeededEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_OldPrice", Storage="_OldPrices", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<OldPrice> OldPrices
		{
			get
			{
				if ((this.serializing 
							&& (this._OldPrices.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OldPrices;
			}
			set
			{
				this._OldPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_RentedEstate", Storage="_RentedEstates", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<RentedEstate> RentedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._RentedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RentedEstates;
			}
			set
			{
				this._RentedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_SelledEstate", Storage="_SelledEstates", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<SelledEstate> SelledEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._SelledEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SelledEstates;
			}
			set
			{
				this._SelledEstates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_NeededEstates(NeededEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_NeededEstates(NeededEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_OldPrices(OldPrice entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_OldPrices(OldPrice entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededEstates = new EntitySet<NeededEstate>(new Action<NeededEstate>(this.attach_NeededEstates), new Action<NeededEstate>(this.detach_NeededEstates));
			this._OldPrices = new EntitySet<OldPrice>(new Action<OldPrice>(this.attach_OldPrices), new Action<OldPrice>(this.detach_OldPrices));
			this._RentedEstates = new EntitySet<RentedEstate>(new Action<RentedEstate>(this.attach_RentedEstates), new Action<RentedEstate>(this.detach_RentedEstates));
			this._SelledEstates = new EntitySet<SelledEstate>(new Action<SelledEstate>(this.attach_SelledEstates), new Action<SelledEstate>(this.detach_SelledEstates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateConvenients")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EstateConvenient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateID;
		
		private int _ConvenientID;
		
		private EntityRef<Convenient> _Convenient;
		
		private EntityRef<Estate> _Estate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnConvenientIDChanging(int value);
    partial void OnConvenientIDChanged();
    #endregion
		
		public EstateConvenient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ConvenientID
		{
			get
			{
				return this._ConvenientID;
			}
			set
			{
				if ((this._ConvenientID != value))
				{
					if (this._Convenient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConvenientIDChanging(value);
					this.SendPropertyChanging();
					this._ConvenientID = value;
					this.SendPropertyChanged("ConvenientID");
					this.OnConvenientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Convenient_EstateConvenient", Storage="_Convenient", ThisKey="ConvenientID", OtherKey="ID", IsForeignKey=true)]
		public Convenient Convenient
		{
			get
			{
				return this._Convenient.Entity;
			}
			set
			{
				Convenient previousValue = this._Convenient.Entity;
				if (((previousValue != value) 
							|| (this._Convenient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Convenient.Entity = null;
						previousValue.EstateConvenients.Remove(this);
					}
					this._Convenient.Entity = value;
					if ((value != null))
					{
						value.EstateConvenients.Add(this);
						this._ConvenientID = value.ID;
					}
					else
					{
						this._ConvenientID = default(int);
					}
					this.SendPropertyChanged("Convenient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateConvenient", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.EstateConvenients.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.EstateConvenients.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Convenient = default(EntityRef<Convenient>);
			this._Estate = default(EntityRef<Estate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateImages")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EstateImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private int _EstateID;
		
		private System.Nullable<int> _ImageTypeID;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private bool _ShowInSite;
		
		private System.Nullable<bool> _IsMain;
		
		private EntityRef<Estate> _Estate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnImageTypeIDChanging(System.Nullable<int> value);
    partial void OnImageTypeIDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnShowInSiteChanging(bool value);
    partial void OnShowInSiteChanged();
    partial void OnIsMainChanging(System.Nullable<bool> value);
    partial void OnIsMainChanged();
    #endregion
		
		public EstateImage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ImageTypeID
		{
			get
			{
				return this._ImageTypeID;
			}
			set
			{
				if ((this._ImageTypeID != value))
				{
					this.OnImageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ImageTypeID = value;
					this.SendPropertyChanged("ImageTypeID");
					this.OnImageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInSite", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool ShowInSite
		{
			get
			{
				return this._ShowInSite;
			}
			set
			{
				if ((this._ShowInSite != value))
				{
					this.OnShowInSiteChanging(value);
					this.SendPropertyChanging();
					this._ShowInSite = value;
					this.SendPropertyChanged("ShowInSite");
					this.OnShowInSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateImage", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.EstateImages.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.EstateImages.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Estate = default(EntityRef<Estate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Estate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateID;
		
		private int _EstateTypeID;
		
		private System.Nullable<int> _RoomCount;
		
		private System.Nullable<int> _BrokerID;
		
		private System.Nullable<float> _TotalSquare;
		
		private System.Nullable<int> _Floor;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<int> _RegionID;
		
		private System.Nullable<int> _RemontID;
		
		private System.Nullable<float> _Height;
		
		private System.Nullable<bool> _HasGarage;
		
		private string _SellerName;
		
		private string _PhonePrimary;
		
		private string _PhoneSecondary;
		
		private string _Email;
		
		private System.Nullable<bool> _HasEuroWindows;
		
		private System.Nullable<int> _AddressID;
		
		private System.Nullable<bool> _IsHasCanalisationPosibility;
		
		private string _AdditionalInformation;
		
		private System.Nullable<bool> _Canalisation;
		
		private System.Nullable<bool> _IsWoterAlways;
		
		private System.Nullable<bool> _IsHasGas;
		
		private System.Nullable<int> _ProjectID;
		
		private System.Nullable<bool> _ExpandingPosibility;
		
		private System.Nullable<int> _BuildingTypeID;
		
		private System.Nullable<int> _OrderTypeID;
		
		private System.Nullable<bool> _HasPadval;
		
		private System.Nullable<int> _BuildingFloorsCount;
		
		private System.Nullable<int> _PadvalSquare;
		
		private System.Nullable<bool> _IsHasGarden;
		
		private System.Nullable<int> _GardenSquare;
		
		private System.Nullable<bool> _IsOutDoorFromSteel;
		
		private System.Nullable<bool> _GasPosibility;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<int> _CityID;
		
		private System.Nullable<int> _StreetID;
		
		private string _HomeNumber;
		
		private string _AptNumber;
		
		private System.Nullable<int> _EarthPlaceTypeID;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _GarageTypeID;
		
		private System.Nullable<int> _PriceTypeID;
		
		private System.Nullable<int> _Rating;
		
		private string _PlaceName;
		
		private System.Nullable<int> _OfficePlaceTypeID;
		
		private System.Nullable<bool> _Electricity;
		
		private System.Nullable<int> _PricePerDay;
		
		private System.Nullable<long> _PriceInAMD;
		
		private System.Nullable<bool> _IsSelledOrOrended;
		
		private System.Nullable<bool> _IsHasDrinkWater;
		
		private System.Nullable<bool> _IsHasVoroqmanJur;
		
		private System.Nullable<bool> _IsHasElectricityPosibility;
		
		private System.Nullable<bool> _IsUploadedToWeb;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _SignificanceOfTheUseID;
		
		private System.Nullable<int> _OperationalSignificanceID;
		
		private string _Code;
		
		private System.Nullable<int> _RoofingID;
		
		private System.Nullable<bool> _IsExchangePossible;
		
		private string _ExchangeWith;
		
		private System.Nullable<bool> _IsInNewBuilding;
		
		private System.Nullable<bool> _IsHasFurniture;
		
		private System.Nullable<bool> _IsHasConditioner;
		
		private System.Nullable<bool> _IsHasWasher;
		
		private string _InformationSource;
		
		private System.Nullable<long> _PricePerDayInAMD;
		
		private System.Nullable<bool> _IsHasWarmingSystem;
		
		private System.Nullable<bool> _IsHasInternet;
		
		private System.Nullable<bool> _IsHasAntena;
		
		private System.Nullable<bool> _IsHasTechnique;
		
		private System.Nullable<bool> _OpenBalcony;
		
		private System.Nullable<bool> _ClosedBalcony;
		
		private System.Nullable<bool> _Nisha;
		
		private System.Nullable<bool> _FrontBalcony;
		
		private System.Nullable<bool> _Arevkox;
		
		private System.Nullable<bool> _Xordanoc;
		
		private System.Nullable<bool> _IsEmpty;
		
		private System.Nullable<bool> _IsHasTV;
		
		private System.Nullable<bool> _IsHasDVD;
		
		private System.Nullable<bool> _IsHasJakuzi;
		
		private System.Nullable<bool> _IsHasRefrigerator;
		
		private System.Nullable<bool> _IsHasAriston;
		
		private System.Nullable<bool> _IsHasGeyser;
		
		private System.Nullable<bool> _IsHasWaterContainer;
		
		private System.Nullable<bool> _IsHasPool;
		
		private System.Nullable<bool> _IsHasGasHeater;
		
		private System.Nullable<bool> _IsHasOfficeRoom;
		
		private System.Nullable<bool> _IsHasShowerCab;
		
		private System.Nullable<bool> _IsHasBed;
		
		private System.Nullable<bool> _IsHasGate;
		
		private System.Nullable<bool> _IsHasTrees;
		
		private System.Nullable<bool> _IsHasPlayRoom;
		
		private System.Nullable<bool> _IsHasService;
		
		private System.Nullable<bool> _IsHasHeatedFloors;
		
		private System.Nullable<bool> _IsHasLodgeBalcony;
		
		private System.Nullable<bool> _IsHasIntercome;
		
		private System.Nullable<bool> _IsInElitarBuilding;
		
		private System.Nullable<bool> _IsHasSecuritySystem;
		
		private System.Nullable<bool> _IsHasParking;
		
		private System.Nullable<bool> _IsHasKitchen;
		
		private System.Nullable<bool> _InFirstLine;
		
		private System.Nullable<bool> _InNullableFloor;
		
		private System.Nullable<bool> _IsHasWC;
		
		private System.Nullable<bool> _IsHasThreePhaseElectricity;
		
		private System.Nullable<bool> _IsHasFencing;
		
		private string _AdditionalConvenients;
		
		private string _Lat;
		
		private string _Lng;
		
		private System.Nullable<bool> _EuroDesign;
		
		private System.Nullable<bool> _Dishwasher;
		
		private System.Nullable<bool> _Tile;
		
		private System.Nullable<bool> _Metlax;
		
		private System.Nullable<bool> _LodgeBalcony;
		
		private System.Nullable<bool> _Domophone;
		
		private System.Nullable<bool> _Lift;
		
		private System.Nullable<bool> _NotPopulated;
		
		private System.Nullable<bool> _SeparateRooms;
		
		private System.Nullable<float> _Square;
		
		private string _Status;
		
		private System.Nullable<int> _MakedRooms;
		
		private System.Nullable<double> _LandFront;
		
		private System.Nullable<int> _FloorAdditional;
		
		private string _LandNumber;
		
		private System.Nullable<bool> _IsElectricityCablesChanged;
		
		private System.Nullable<bool> _IsPipesChanged;
		
		private System.Nullable<bool> _IsCeilingRepaired;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsHasSauna;
		
		private System.Nullable<bool> _IsHasSomething;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _AdditionalDetailsSite;
		
		private string _PlaceNameSite;
		
		private System.Nullable<bool> _WaterHeater;
		
		private System.Nullable<int> _CountryID;
		
		private string _Address;
		
		private System.Nullable<bool> _IsOverseas;
		
		private System.Nullable<System.DateTime> _ChangeToBrokerDate;
		
		private EntitySet<ClientSuggestedEstate> _ClientSuggestedEstates;
		
		private EntitySet<EstateConvenient> _EstateConvenients;
		
		private EntitySet<EstateImage> _EstateImages;
		
		private EntitySet<EstatesAndDemand> _EstatesAndDemands;
		
		private EntitySet<EstateVideo> _EstateVideos;
		
		private EntitySet<FavoriteEstate> _FavoriteEstates;
		
		private EntitySet<OldPrice> _OldPrices;
		
		private EntitySet<RentedEstate> _RentedEstates;
		
		private EntitySet<SelledEstate> _SelledEstates;
		
		private EntityRef<BuildingType> _BuildingType;
		
		private EntityRef<City> _City;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<User> _User;
		
		private EntityRef<EstateType> _EstateType;
		
		private EntityRef<OperationalSignificance> _OperationalSignificance;
		
		private EntityRef<OrderType> _OrderType;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Region> _Region;
		
		private EntityRef<Remont> _Remont;
		
		private EntityRef<Roofing> _Roofing;
		
		private EntityRef<SignificanceOfTheUse> _SignificanceOfTheUse;
		
		private EntityRef<State> _State;
		
		private EntityRef<Street> _Street;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnEstateTypeIDChanging(int value);
    partial void OnEstateTypeIDChanged();
    partial void OnRoomCountChanging(System.Nullable<int> value);
    partial void OnRoomCountChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnTotalSquareChanging(System.Nullable<float> value);
    partial void OnTotalSquareChanged();
    partial void OnFloorChanging(System.Nullable<int> value);
    partial void OnFloorChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnRemontIDChanging(System.Nullable<int> value);
    partial void OnRemontIDChanged();
    partial void OnHeightChanging(System.Nullable<float> value);
    partial void OnHeightChanged();
    partial void OnHasGarageChanging(System.Nullable<bool> value);
    partial void OnHasGarageChanged();
    partial void OnSellerNameChanging(string value);
    partial void OnSellerNameChanged();
    partial void OnPhonePrimaryChanging(string value);
    partial void OnPhonePrimaryChanged();
    partial void OnPhoneSecondaryChanging(string value);
    partial void OnPhoneSecondaryChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHasEuroWindowsChanging(System.Nullable<bool> value);
    partial void OnHasEuroWindowsChanged();
    partial void OnAddressIDChanging(System.Nullable<int> value);
    partial void OnAddressIDChanged();
    partial void OnIsHasCanalisationPosibilityChanging(System.Nullable<bool> value);
    partial void OnIsHasCanalisationPosibilityChanged();
    partial void OnAdditionalInformationChanging(string value);
    partial void OnAdditionalInformationChanged();
    partial void OnCanalisationChanging(System.Nullable<bool> value);
    partial void OnCanalisationChanged();
    partial void OnIsWoterAlwaysChanging(System.Nullable<bool> value);
    partial void OnIsWoterAlwaysChanged();
    partial void OnIsHasGasChanging(System.Nullable<bool> value);
    partial void OnIsHasGasChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    partial void OnExpandingPosibilityChanging(System.Nullable<bool> value);
    partial void OnExpandingPosibilityChanged();
    partial void OnBuildingTypeIDChanging(System.Nullable<int> value);
    partial void OnBuildingTypeIDChanged();
    partial void OnOrderTypeIDChanging(System.Nullable<int> value);
    partial void OnOrderTypeIDChanged();
    partial void OnHasPadvalChanging(System.Nullable<bool> value);
    partial void OnHasPadvalChanged();
    partial void OnBuildingFloorsCountChanging(System.Nullable<int> value);
    partial void OnBuildingFloorsCountChanged();
    partial void OnPadvalSquareChanging(System.Nullable<int> value);
    partial void OnPadvalSquareChanged();
    partial void OnIsHasGardenChanging(System.Nullable<bool> value);
    partial void OnIsHasGardenChanged();
    partial void OnGardenSquareChanging(System.Nullable<int> value);
    partial void OnGardenSquareChanged();
    partial void OnIsOutDoorFromSteelChanging(System.Nullable<bool> value);
    partial void OnIsOutDoorFromSteelChanged();
    partial void OnGasPosibilityChanging(System.Nullable<bool> value);
    partial void OnGasPosibilityChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    partial void OnStreetIDChanging(System.Nullable<int> value);
    partial void OnStreetIDChanged();
    partial void OnHomeNumberChanging(string value);
    partial void OnHomeNumberChanged();
    partial void OnAptNumberChanging(string value);
    partial void OnAptNumberChanged();
    partial void OnEarthPlaceTypeIDChanging(System.Nullable<int> value);
    partial void OnEarthPlaceTypeIDChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnGarageTypeIDChanging(System.Nullable<int> value);
    partial void OnGarageTypeIDChanged();
    partial void OnPriceTypeIDChanging(System.Nullable<int> value);
    partial void OnPriceTypeIDChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnPlaceNameChanging(string value);
    partial void OnPlaceNameChanged();
    partial void OnOfficePlaceTypeIDChanging(System.Nullable<int> value);
    partial void OnOfficePlaceTypeIDChanged();
    partial void OnElectricityChanging(System.Nullable<bool> value);
    partial void OnElectricityChanged();
    partial void OnPricePerDayChanging(System.Nullable<int> value);
    partial void OnPricePerDayChanged();
    partial void OnPriceInAMDChanging(System.Nullable<long> value);
    partial void OnPriceInAMDChanged();
    partial void OnIsSelledOrOrendedChanging(System.Nullable<bool> value);
    partial void OnIsSelledOrOrendedChanged();
    partial void OnIsHasDrinkWaterChanging(System.Nullable<bool> value);
    partial void OnIsHasDrinkWaterChanged();
    partial void OnIsHasVoroqmanJurChanging(System.Nullable<bool> value);
    partial void OnIsHasVoroqmanJurChanged();
    partial void OnIsHasElectricityPosibilityChanging(System.Nullable<bool> value);
    partial void OnIsHasElectricityPosibilityChanged();
    partial void OnIsUploadedToWebChanging(System.Nullable<bool> value);
    partial void OnIsUploadedToWebChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnSignificanceOfTheUseIDChanging(System.Nullable<int> value);
    partial void OnSignificanceOfTheUseIDChanged();
    partial void OnOperationalSignificanceIDChanging(System.Nullable<int> value);
    partial void OnOperationalSignificanceIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnRoofingIDChanging(System.Nullable<int> value);
    partial void OnRoofingIDChanged();
    partial void OnIsExchangePossibleChanging(System.Nullable<bool> value);
    partial void OnIsExchangePossibleChanged();
    partial void OnExchangeWithChanging(string value);
    partial void OnExchangeWithChanged();
    partial void OnIsInNewBuildingChanging(System.Nullable<bool> value);
    partial void OnIsInNewBuildingChanged();
    partial void OnIsHasFurnitureChanging(System.Nullable<bool> value);
    partial void OnIsHasFurnitureChanged();
    partial void OnIsHasConditionerChanging(System.Nullable<bool> value);
    partial void OnIsHasConditionerChanged();
    partial void OnIsHasWasherChanging(System.Nullable<bool> value);
    partial void OnIsHasWasherChanged();
    partial void OnInformationSourceChanging(string value);
    partial void OnInformationSourceChanged();
    partial void OnPricePerDayInAMDChanging(System.Nullable<long> value);
    partial void OnPricePerDayInAMDChanged();
    partial void OnIsHasWarmingSystemChanging(System.Nullable<bool> value);
    partial void OnIsHasWarmingSystemChanged();
    partial void OnIsHasInternetChanging(System.Nullable<bool> value);
    partial void OnIsHasInternetChanged();
    partial void OnIsHasAntenaChanging(System.Nullable<bool> value);
    partial void OnIsHasAntenaChanged();
    partial void OnIsHasTechniqueChanging(System.Nullable<bool> value);
    partial void OnIsHasTechniqueChanged();
    partial void OnOpenBalconyChanging(System.Nullable<bool> value);
    partial void OnOpenBalconyChanged();
    partial void OnClosedBalconyChanging(System.Nullable<bool> value);
    partial void OnClosedBalconyChanged();
    partial void OnNishaChanging(System.Nullable<bool> value);
    partial void OnNishaChanged();
    partial void OnFrontBalconyChanging(System.Nullable<bool> value);
    partial void OnFrontBalconyChanged();
    partial void OnArevkoxChanging(System.Nullable<bool> value);
    partial void OnArevkoxChanged();
    partial void OnXordanocChanging(System.Nullable<bool> value);
    partial void OnXordanocChanged();
    partial void OnIsEmptyChanging(System.Nullable<bool> value);
    partial void OnIsEmptyChanged();
    partial void OnIsHasTVChanging(System.Nullable<bool> value);
    partial void OnIsHasTVChanged();
    partial void OnIsHasDVDChanging(System.Nullable<bool> value);
    partial void OnIsHasDVDChanged();
    partial void OnIsHasJakuziChanging(System.Nullable<bool> value);
    partial void OnIsHasJakuziChanged();
    partial void OnIsHasRefrigeratorChanging(System.Nullable<bool> value);
    partial void OnIsHasRefrigeratorChanged();
    partial void OnIsHasAristonChanging(System.Nullable<bool> value);
    partial void OnIsHasAristonChanged();
    partial void OnIsHasGeyserChanging(System.Nullable<bool> value);
    partial void OnIsHasGeyserChanged();
    partial void OnIsHasWaterContainerChanging(System.Nullable<bool> value);
    partial void OnIsHasWaterContainerChanged();
    partial void OnIsHasPoolChanging(System.Nullable<bool> value);
    partial void OnIsHasPoolChanged();
    partial void OnIsHasGasHeaterChanging(System.Nullable<bool> value);
    partial void OnIsHasGasHeaterChanged();
    partial void OnIsHasOfficeRoomChanging(System.Nullable<bool> value);
    partial void OnIsHasOfficeRoomChanged();
    partial void OnIsHasShowerCabChanging(System.Nullable<bool> value);
    partial void OnIsHasShowerCabChanged();
    partial void OnIsHasBedChanging(System.Nullable<bool> value);
    partial void OnIsHasBedChanged();
    partial void OnIsHasGateChanging(System.Nullable<bool> value);
    partial void OnIsHasGateChanged();
    partial void OnIsHasTreesChanging(System.Nullable<bool> value);
    partial void OnIsHasTreesChanged();
    partial void OnIsHasPlayRoomChanging(System.Nullable<bool> value);
    partial void OnIsHasPlayRoomChanged();
    partial void OnIsHasServiceChanging(System.Nullable<bool> value);
    partial void OnIsHasServiceChanged();
    partial void OnIsHasHeatedFloorsChanging(System.Nullable<bool> value);
    partial void OnIsHasHeatedFloorsChanged();
    partial void OnIsHasLodgeBalconyChanging(System.Nullable<bool> value);
    partial void OnIsHasLodgeBalconyChanged();
    partial void OnIsHasIntercomeChanging(System.Nullable<bool> value);
    partial void OnIsHasIntercomeChanged();
    partial void OnIsInElitarBuildingChanging(System.Nullable<bool> value);
    partial void OnIsInElitarBuildingChanged();
    partial void OnIsHasSecuritySystemChanging(System.Nullable<bool> value);
    partial void OnIsHasSecuritySystemChanged();
    partial void OnIsHasParkingChanging(System.Nullable<bool> value);
    partial void OnIsHasParkingChanged();
    partial void OnIsHasKitchenChanging(System.Nullable<bool> value);
    partial void OnIsHasKitchenChanged();
    partial void OnInFirstLineChanging(System.Nullable<bool> value);
    partial void OnInFirstLineChanged();
    partial void OnInNullableFloorChanging(System.Nullable<bool> value);
    partial void OnInNullableFloorChanged();
    partial void OnIsHasWCChanging(System.Nullable<bool> value);
    partial void OnIsHasWCChanged();
    partial void OnIsHasThreePhaseElectricityChanging(System.Nullable<bool> value);
    partial void OnIsHasThreePhaseElectricityChanged();
    partial void OnIsHasFencingChanging(System.Nullable<bool> value);
    partial void OnIsHasFencingChanged();
    partial void OnAdditionalConvenientsChanging(string value);
    partial void OnAdditionalConvenientsChanged();
    partial void OnLatChanging(string value);
    partial void OnLatChanged();
    partial void OnLngChanging(string value);
    partial void OnLngChanged();
    partial void OnEuroDesignChanging(System.Nullable<bool> value);
    partial void OnEuroDesignChanged();
    partial void OnDishwasherChanging(System.Nullable<bool> value);
    partial void OnDishwasherChanged();
    partial void OnTileChanging(System.Nullable<bool> value);
    partial void OnTileChanged();
    partial void OnMetlaxChanging(System.Nullable<bool> value);
    partial void OnMetlaxChanged();
    partial void OnLodgeBalconyChanging(System.Nullable<bool> value);
    partial void OnLodgeBalconyChanged();
    partial void OnDomophoneChanging(System.Nullable<bool> value);
    partial void OnDomophoneChanged();
    partial void OnLiftChanging(System.Nullable<bool> value);
    partial void OnLiftChanged();
    partial void OnNotPopulatedChanging(System.Nullable<bool> value);
    partial void OnNotPopulatedChanged();
    partial void OnSeparateRoomsChanging(System.Nullable<bool> value);
    partial void OnSeparateRoomsChanged();
    partial void OnSquareChanging(System.Nullable<float> value);
    partial void OnSquareChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnMakedRoomsChanging(System.Nullable<int> value);
    partial void OnMakedRoomsChanged();
    partial void OnLandFrontChanging(System.Nullable<double> value);
    partial void OnLandFrontChanged();
    partial void OnFloorAdditionalChanging(System.Nullable<int> value);
    partial void OnFloorAdditionalChanged();
    partial void OnLandNumberChanging(string value);
    partial void OnLandNumberChanged();
    partial void OnIsElectricityCablesChangedChanging(System.Nullable<bool> value);
    partial void OnIsElectricityCablesChangedChanged();
    partial void OnIsPipesChangedChanging(System.Nullable<bool> value);
    partial void OnIsPipesChangedChanged();
    partial void OnIsCeilingRepairedChanging(System.Nullable<bool> value);
    partial void OnIsCeilingRepairedChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsHasSaunaChanging(System.Nullable<bool> value);
    partial void OnIsHasSaunaChanged();
    partial void OnIsHasSomethingChanging(System.Nullable<bool> value);
    partial void OnIsHasSomethingChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnAdditionalDetailsSiteChanging(string value);
    partial void OnAdditionalDetailsSiteChanged();
    partial void OnPlaceNameSiteChanging(string value);
    partial void OnPlaceNameSiteChanged();
    partial void OnWaterHeaterChanging(System.Nullable<bool> value);
    partial void OnWaterHeaterChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsOverseasChanging(System.Nullable<bool> value);
    partial void OnIsOverseasChanged();
    partial void OnChangeToBrokerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeToBrokerDateChanged();
    #endregion
		
		public Estate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateTypeID
		{
			get
			{
				return this._EstateTypeID;
			}
			set
			{
				if ((this._EstateTypeID != value))
				{
					if (this._EstateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeID = value;
					this.SendPropertyChanged("EstateTypeID");
					this.OnEstateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RoomCount
		{
			get
			{
				return this._RoomCount;
			}
			set
			{
				if ((this._RoomCount != value))
				{
					this.OnRoomCountChanging(value);
					this.SendPropertyChanging();
					this._RoomCount = value;
					this.SendPropertyChanged("RoomCount");
					this.OnRoomCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSquare", DbType="Real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<float> TotalSquare
		{
			get
			{
				return this._TotalSquare;
			}
			set
			{
				if ((this._TotalSquare != value))
				{
					this.OnTotalSquareChanging(value);
					this.SendPropertyChanging();
					this._TotalSquare = value;
					this.SendPropertyChanged("TotalSquare");
					this.OnTotalSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemontID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> RemontID
		{
			get
			{
				return this._RemontID;
			}
			set
			{
				if ((this._RemontID != value))
				{
					if (this._Remont.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemontIDChanging(value);
					this.SendPropertyChanging();
					this._RemontID = value;
					this.SendPropertyChanged("RemontID");
					this.OnRemontIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<float> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasGarage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> HasGarage
		{
			get
			{
				return this._HasGarage;
			}
			set
			{
				if ((this._HasGarage != value))
				{
					this.OnHasGarageChanging(value);
					this.SendPropertyChanging();
					this._HasGarage = value;
					this.SendPropertyChanged("HasGarage");
					this.OnHasGarageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerName", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string SellerName
		{
			get
			{
				return this._SellerName;
			}
			set
			{
				if ((this._SellerName != value))
				{
					this.OnSellerNameChanging(value);
					this.SendPropertyChanging();
					this._SellerName = value;
					this.SendPropertyChanged("SellerName");
					this.OnSellerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhonePrimary", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string PhonePrimary
		{
			get
			{
				return this._PhonePrimary;
			}
			set
			{
				if ((this._PhonePrimary != value))
				{
					this.OnPhonePrimaryChanging(value);
					this.SendPropertyChanging();
					this._PhonePrimary = value;
					this.SendPropertyChanged("PhonePrimary");
					this.OnPhonePrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneSecondary", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string PhoneSecondary
		{
			get
			{
				return this._PhoneSecondary;
			}
			set
			{
				if ((this._PhoneSecondary != value))
				{
					this.OnPhoneSecondaryChanging(value);
					this.SendPropertyChanging();
					this._PhoneSecondary = value;
					this.SendPropertyChanged("PhoneSecondary");
					this.OnPhoneSecondaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEuroWindows", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> HasEuroWindows
		{
			get
			{
				return this._HasEuroWindows;
			}
			set
			{
				if ((this._HasEuroWindows != value))
				{
					this.OnHasEuroWindowsChanging(value);
					this.SendPropertyChanging();
					this._HasEuroWindows = value;
					this.SendPropertyChanged("HasEuroWindows");
					this.OnHasEuroWindowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasCanalisationPosibility", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> IsHasCanalisationPosibility
		{
			get
			{
				return this._IsHasCanalisationPosibility;
			}
			set
			{
				if ((this._IsHasCanalisationPosibility != value))
				{
					this.OnIsHasCanalisationPosibilityChanging(value);
					this.SendPropertyChanging();
					this._IsHasCanalisationPosibility = value;
					this.SendPropertyChanged("IsHasCanalisationPosibility");
					this.OnIsHasCanalisationPosibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInformation", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string AdditionalInformation
		{
			get
			{
				return this._AdditionalInformation;
			}
			set
			{
				if ((this._AdditionalInformation != value))
				{
					this.OnAdditionalInformationChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInformation = value;
					this.SendPropertyChanged("AdditionalInformation");
					this.OnAdditionalInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Canalisation", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> Canalisation
		{
			get
			{
				return this._Canalisation;
			}
			set
			{
				if ((this._Canalisation != value))
				{
					this.OnCanalisationChanging(value);
					this.SendPropertyChanging();
					this._Canalisation = value;
					this.SendPropertyChanged("Canalisation");
					this.OnCanalisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWoterAlways", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<bool> IsWoterAlways
		{
			get
			{
				return this._IsWoterAlways;
			}
			set
			{
				if ((this._IsWoterAlways != value))
				{
					this.OnIsWoterAlwaysChanging(value);
					this.SendPropertyChanging();
					this._IsWoterAlways = value;
					this.SendPropertyChanged("IsWoterAlways");
					this.OnIsWoterAlwaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGas", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> IsHasGas
		{
			get
			{
				return this._IsHasGas;
			}
			set
			{
				if ((this._IsHasGas != value))
				{
					this.OnIsHasGasChanging(value);
					this.SendPropertyChanging();
					this._IsHasGas = value;
					this.SendPropertyChanged("IsHasGas");
					this.OnIsHasGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpandingPosibility", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> ExpandingPosibility
		{
			get
			{
				return this._ExpandingPosibility;
			}
			set
			{
				if ((this._ExpandingPosibility != value))
				{
					this.OnExpandingPosibilityChanging(value);
					this.SendPropertyChanging();
					this._ExpandingPosibility = value;
					this.SendPropertyChanged("ExpandingPosibility");
					this.OnExpandingPosibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<int> BuildingTypeID
		{
			get
			{
				return this._BuildingTypeID;
			}
			set
			{
				if ((this._BuildingTypeID != value))
				{
					if (this._BuildingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingTypeID = value;
					this.SendPropertyChanged("BuildingTypeID");
					this.OnBuildingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> OrderTypeID
		{
			get
			{
				return this._OrderTypeID;
			}
			set
			{
				if ((this._OrderTypeID != value))
				{
					if (this._OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeID = value;
					this.SendPropertyChanged("OrderTypeID");
					this.OnOrderTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPadval", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<bool> HasPadval
		{
			get
			{
				return this._HasPadval;
			}
			set
			{
				if ((this._HasPadval != value))
				{
					this.OnHasPadvalChanging(value);
					this.SendPropertyChanging();
					this._HasPadval = value;
					this.SendPropertyChanged("HasPadval");
					this.OnHasPadvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingFloorsCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<int> BuildingFloorsCount
		{
			get
			{
				return this._BuildingFloorsCount;
			}
			set
			{
				if ((this._BuildingFloorsCount != value))
				{
					this.OnBuildingFloorsCountChanging(value);
					this.SendPropertyChanging();
					this._BuildingFloorsCount = value;
					this.SendPropertyChanged("BuildingFloorsCount");
					this.OnBuildingFloorsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PadvalSquare", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<int> PadvalSquare
		{
			get
			{
				return this._PadvalSquare;
			}
			set
			{
				if ((this._PadvalSquare != value))
				{
					this.OnPadvalSquareChanging(value);
					this.SendPropertyChanging();
					this._PadvalSquare = value;
					this.SendPropertyChanged("PadvalSquare");
					this.OnPadvalSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGarden", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<bool> IsHasGarden
		{
			get
			{
				return this._IsHasGarden;
			}
			set
			{
				if ((this._IsHasGarden != value))
				{
					this.OnIsHasGardenChanging(value);
					this.SendPropertyChanging();
					this._IsHasGarden = value;
					this.SendPropertyChanged("IsHasGarden");
					this.OnIsHasGardenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GardenSquare", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<int> GardenSquare
		{
			get
			{
				return this._GardenSquare;
			}
			set
			{
				if ((this._GardenSquare != value))
				{
					this.OnGardenSquareChanging(value);
					this.SendPropertyChanging();
					this._GardenSquare = value;
					this.SendPropertyChanged("GardenSquare");
					this.OnGardenSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutDoorFromSteel", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<bool> IsOutDoorFromSteel
		{
			get
			{
				return this._IsOutDoorFromSteel;
			}
			set
			{
				if ((this._IsOutDoorFromSteel != value))
				{
					this.OnIsOutDoorFromSteelChanging(value);
					this.SendPropertyChanging();
					this._IsOutDoorFromSteel = value;
					this.SendPropertyChanged("IsOutDoorFromSteel");
					this.OnIsOutDoorFromSteelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasPosibility", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<bool> GasPosibility
		{
			get
			{
				return this._GasPosibility;
			}
			set
			{
				if ((this._GasPosibility != value))
				{
					this.OnGasPosibilityChanging(value);
					this.SendPropertyChanging();
					this._GasPosibility = value;
					this.SendPropertyChanged("GasPosibility");
					this.OnGasPosibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<int> StreetID
		{
			get
			{
				return this._StreetID;
			}
			set
			{
				if ((this._StreetID != value))
				{
					if (this._Street.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIDChanging(value);
					this.SendPropertyChanging();
					this._StreetID = value;
					this.SendPropertyChanged("StreetID");
					this.OnStreetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeNumber", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public string HomeNumber
		{
			get
			{
				return this._HomeNumber;
			}
			set
			{
				if ((this._HomeNumber != value))
				{
					this.OnHomeNumberChanging(value);
					this.SendPropertyChanging();
					this._HomeNumber = value;
					this.SendPropertyChanged("HomeNumber");
					this.OnHomeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AptNumber", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public string AptNumber
		{
			get
			{
				return this._AptNumber;
			}
			set
			{
				if ((this._AptNumber != value))
				{
					this.OnAptNumberChanging(value);
					this.SendPropertyChanging();
					this._AptNumber = value;
					this.SendPropertyChanged("AptNumber");
					this.OnAptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarthPlaceTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public System.Nullable<int> EarthPlaceTypeID
		{
			get
			{
				return this._EarthPlaceTypeID;
			}
			set
			{
				if ((this._EarthPlaceTypeID != value))
				{
					this.OnEarthPlaceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EarthPlaceTypeID = value;
					this.SendPropertyChanged("EarthPlaceTypeID");
					this.OnEarthPlaceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GarageTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public System.Nullable<int> GarageTypeID
		{
			get
			{
				return this._GarageTypeID;
			}
			set
			{
				if ((this._GarageTypeID != value))
				{
					this.OnGarageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GarageTypeID = value;
					this.SendPropertyChanged("GarageTypeID");
					this.OnGarageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public System.Nullable<int> PriceTypeID
		{
			get
			{
				return this._PriceTypeID;
			}
			set
			{
				if ((this._PriceTypeID != value))
				{
					this.OnPriceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PriceTypeID = value;
					this.SendPropertyChanged("PriceTypeID");
					this.OnPriceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceName", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public string PlaceName
		{
			get
			{
				return this._PlaceName;
			}
			set
			{
				if ((this._PlaceName != value))
				{
					this.OnPlaceNameChanging(value);
					this.SendPropertyChanging();
					this._PlaceName = value;
					this.SendPropertyChanged("PlaceName");
					this.OnPlaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePlaceTypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public System.Nullable<int> OfficePlaceTypeID
		{
			get
			{
				return this._OfficePlaceTypeID;
			}
			set
			{
				if ((this._OfficePlaceTypeID != value))
				{
					this.OnOfficePlaceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OfficePlaceTypeID = value;
					this.SendPropertyChanged("OfficePlaceTypeID");
					this.OnOfficePlaceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricity", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47)]
		public System.Nullable<bool> Electricity
		{
			get
			{
				return this._Electricity;
			}
			set
			{
				if ((this._Electricity != value))
				{
					this.OnElectricityChanging(value);
					this.SendPropertyChanging();
					this._Electricity = value;
					this.SendPropertyChanged("Electricity");
					this.OnElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerDay", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48)]
		public System.Nullable<int> PricePerDay
		{
			get
			{
				return this._PricePerDay;
			}
			set
			{
				if ((this._PricePerDay != value))
				{
					this.OnPricePerDayChanging(value);
					this.SendPropertyChanging();
					this._PricePerDay = value;
					this.SendPropertyChanged("PricePerDay");
					this.OnPricePerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49)]
		public System.Nullable<long> PriceInAMD
		{
			get
			{
				return this._PriceInAMD;
			}
			set
			{
				if ((this._PriceInAMD != value))
				{
					this.OnPriceInAMDChanging(value);
					this.SendPropertyChanging();
					this._PriceInAMD = value;
					this.SendPropertyChanged("PriceInAMD");
					this.OnPriceInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelledOrOrended", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50)]
		public System.Nullable<bool> IsSelledOrOrended
		{
			get
			{
				return this._IsSelledOrOrended;
			}
			set
			{
				if ((this._IsSelledOrOrended != value))
				{
					this.OnIsSelledOrOrendedChanging(value);
					this.SendPropertyChanging();
					this._IsSelledOrOrended = value;
					this.SendPropertyChanged("IsSelledOrOrended");
					this.OnIsSelledOrOrendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasDrinkWater", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51)]
		public System.Nullable<bool> IsHasDrinkWater
		{
			get
			{
				return this._IsHasDrinkWater;
			}
			set
			{
				if ((this._IsHasDrinkWater != value))
				{
					this.OnIsHasDrinkWaterChanging(value);
					this.SendPropertyChanging();
					this._IsHasDrinkWater = value;
					this.SendPropertyChanged("IsHasDrinkWater");
					this.OnIsHasDrinkWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasVoroqmanJur", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52)]
		public System.Nullable<bool> IsHasVoroqmanJur
		{
			get
			{
				return this._IsHasVoroqmanJur;
			}
			set
			{
				if ((this._IsHasVoroqmanJur != value))
				{
					this.OnIsHasVoroqmanJurChanging(value);
					this.SendPropertyChanging();
					this._IsHasVoroqmanJur = value;
					this.SendPropertyChanged("IsHasVoroqmanJur");
					this.OnIsHasVoroqmanJurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasElectricityPosibility", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53)]
		public System.Nullable<bool> IsHasElectricityPosibility
		{
			get
			{
				return this._IsHasElectricityPosibility;
			}
			set
			{
				if ((this._IsHasElectricityPosibility != value))
				{
					this.OnIsHasElectricityPosibilityChanging(value);
					this.SendPropertyChanging();
					this._IsHasElectricityPosibility = value;
					this.SendPropertyChanged("IsHasElectricityPosibility");
					this.OnIsHasElectricityPosibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUploadedToWeb", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54)]
		public System.Nullable<bool> IsUploadedToWeb
		{
			get
			{
				return this._IsUploadedToWeb;
			}
			set
			{
				if ((this._IsUploadedToWeb != value))
				{
					this.OnIsUploadedToWebChanging(value);
					this.SendPropertyChanging();
					this._IsUploadedToWeb = value;
					this.SendPropertyChanged("IsUploadedToWeb");
					this.OnIsUploadedToWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignificanceOfTheUseID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56)]
		public System.Nullable<int> SignificanceOfTheUseID
		{
			get
			{
				return this._SignificanceOfTheUseID;
			}
			set
			{
				if ((this._SignificanceOfTheUseID != value))
				{
					if (this._SignificanceOfTheUse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSignificanceOfTheUseIDChanging(value);
					this.SendPropertyChanging();
					this._SignificanceOfTheUseID = value;
					this.SendPropertyChanged("SignificanceOfTheUseID");
					this.OnSignificanceOfTheUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationalSignificanceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57)]
		public System.Nullable<int> OperationalSignificanceID
		{
			get
			{
				return this._OperationalSignificanceID;
			}
			set
			{
				if ((this._OperationalSignificanceID != value))
				{
					if (this._OperationalSignificance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperationalSignificanceIDChanging(value);
					this.SendPropertyChanging();
					this._OperationalSignificanceID = value;
					this.SendPropertyChanged("OperationalSignificanceID");
					this.OnOperationalSignificanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoofingID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59)]
		public System.Nullable<int> RoofingID
		{
			get
			{
				return this._RoofingID;
			}
			set
			{
				if ((this._RoofingID != value))
				{
					if (this._Roofing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoofingIDChanging(value);
					this.SendPropertyChanging();
					this._RoofingID = value;
					this.SendPropertyChanged("RoofingID");
					this.OnRoofingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExchangePossible", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60)]
		public System.Nullable<bool> IsExchangePossible
		{
			get
			{
				return this._IsExchangePossible;
			}
			set
			{
				if ((this._IsExchangePossible != value))
				{
					this.OnIsExchangePossibleChanging(value);
					this.SendPropertyChanging();
					this._IsExchangePossible = value;
					this.SendPropertyChanged("IsExchangePossible");
					this.OnIsExchangePossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeWith", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=61)]
		public string ExchangeWith
		{
			get
			{
				return this._ExchangeWith;
			}
			set
			{
				if ((this._ExchangeWith != value))
				{
					this.OnExchangeWithChanging(value);
					this.SendPropertyChanging();
					this._ExchangeWith = value;
					this.SendPropertyChanged("ExchangeWith");
					this.OnExchangeWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInNewBuilding", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=62)]
		public System.Nullable<bool> IsInNewBuilding
		{
			get
			{
				return this._IsInNewBuilding;
			}
			set
			{
				if ((this._IsInNewBuilding != value))
				{
					this.OnIsInNewBuildingChanging(value);
					this.SendPropertyChanging();
					this._IsInNewBuilding = value;
					this.SendPropertyChanged("IsInNewBuilding");
					this.OnIsInNewBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasFurniture", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=63)]
		public System.Nullable<bool> IsHasFurniture
		{
			get
			{
				return this._IsHasFurniture;
			}
			set
			{
				if ((this._IsHasFurniture != value))
				{
					this.OnIsHasFurnitureChanging(value);
					this.SendPropertyChanging();
					this._IsHasFurniture = value;
					this.SendPropertyChanged("IsHasFurniture");
					this.OnIsHasFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasConditioner", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=64)]
		public System.Nullable<bool> IsHasConditioner
		{
			get
			{
				return this._IsHasConditioner;
			}
			set
			{
				if ((this._IsHasConditioner != value))
				{
					this.OnIsHasConditionerChanging(value);
					this.SendPropertyChanging();
					this._IsHasConditioner = value;
					this.SendPropertyChanged("IsHasConditioner");
					this.OnIsHasConditionerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasWasher", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=65)]
		public System.Nullable<bool> IsHasWasher
		{
			get
			{
				return this._IsHasWasher;
			}
			set
			{
				if ((this._IsHasWasher != value))
				{
					this.OnIsHasWasherChanging(value);
					this.SendPropertyChanging();
					this._IsHasWasher = value;
					this.SendPropertyChanged("IsHasWasher");
					this.OnIsHasWasherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InformationSource", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=66)]
		public string InformationSource
		{
			get
			{
				return this._InformationSource;
			}
			set
			{
				if ((this._InformationSource != value))
				{
					this.OnInformationSourceChanging(value);
					this.SendPropertyChanging();
					this._InformationSource = value;
					this.SendPropertyChanged("InformationSource");
					this.OnInformationSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerDayInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=67)]
		public System.Nullable<long> PricePerDayInAMD
		{
			get
			{
				return this._PricePerDayInAMD;
			}
			set
			{
				if ((this._PricePerDayInAMD != value))
				{
					this.OnPricePerDayInAMDChanging(value);
					this.SendPropertyChanging();
					this._PricePerDayInAMD = value;
					this.SendPropertyChanged("PricePerDayInAMD");
					this.OnPricePerDayInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasWarmingSystem", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=68)]
		public System.Nullable<bool> IsHasWarmingSystem
		{
			get
			{
				return this._IsHasWarmingSystem;
			}
			set
			{
				if ((this._IsHasWarmingSystem != value))
				{
					this.OnIsHasWarmingSystemChanging(value);
					this.SendPropertyChanging();
					this._IsHasWarmingSystem = value;
					this.SendPropertyChanged("IsHasWarmingSystem");
					this.OnIsHasWarmingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasInternet", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=69)]
		public System.Nullable<bool> IsHasInternet
		{
			get
			{
				return this._IsHasInternet;
			}
			set
			{
				if ((this._IsHasInternet != value))
				{
					this.OnIsHasInternetChanging(value);
					this.SendPropertyChanging();
					this._IsHasInternet = value;
					this.SendPropertyChanged("IsHasInternet");
					this.OnIsHasInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasAntena", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=70)]
		public System.Nullable<bool> IsHasAntena
		{
			get
			{
				return this._IsHasAntena;
			}
			set
			{
				if ((this._IsHasAntena != value))
				{
					this.OnIsHasAntenaChanging(value);
					this.SendPropertyChanging();
					this._IsHasAntena = value;
					this.SendPropertyChanged("IsHasAntena");
					this.OnIsHasAntenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasTechnique", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=71)]
		public System.Nullable<bool> IsHasTechnique
		{
			get
			{
				return this._IsHasTechnique;
			}
			set
			{
				if ((this._IsHasTechnique != value))
				{
					this.OnIsHasTechniqueChanging(value);
					this.SendPropertyChanging();
					this._IsHasTechnique = value;
					this.SendPropertyChanged("IsHasTechnique");
					this.OnIsHasTechniqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenBalcony", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=72)]
		public System.Nullable<bool> OpenBalcony
		{
			get
			{
				return this._OpenBalcony;
			}
			set
			{
				if ((this._OpenBalcony != value))
				{
					this.OnOpenBalconyChanging(value);
					this.SendPropertyChanging();
					this._OpenBalcony = value;
					this.SendPropertyChanged("OpenBalcony");
					this.OnOpenBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBalcony", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=73)]
		public System.Nullable<bool> ClosedBalcony
		{
			get
			{
				return this._ClosedBalcony;
			}
			set
			{
				if ((this._ClosedBalcony != value))
				{
					this.OnClosedBalconyChanging(value);
					this.SendPropertyChanging();
					this._ClosedBalcony = value;
					this.SendPropertyChanged("ClosedBalcony");
					this.OnClosedBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nisha", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=74)]
		public System.Nullable<bool> Nisha
		{
			get
			{
				return this._Nisha;
			}
			set
			{
				if ((this._Nisha != value))
				{
					this.OnNishaChanging(value);
					this.SendPropertyChanging();
					this._Nisha = value;
					this.SendPropertyChanged("Nisha");
					this.OnNishaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontBalcony", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=75)]
		public System.Nullable<bool> FrontBalcony
		{
			get
			{
				return this._FrontBalcony;
			}
			set
			{
				if ((this._FrontBalcony != value))
				{
					this.OnFrontBalconyChanging(value);
					this.SendPropertyChanging();
					this._FrontBalcony = value;
					this.SendPropertyChanged("FrontBalcony");
					this.OnFrontBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arevkox", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=76)]
		public System.Nullable<bool> Arevkox
		{
			get
			{
				return this._Arevkox;
			}
			set
			{
				if ((this._Arevkox != value))
				{
					this.OnArevkoxChanging(value);
					this.SendPropertyChanging();
					this._Arevkox = value;
					this.SendPropertyChanged("Arevkox");
					this.OnArevkoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xordanoc", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=77)]
		public System.Nullable<bool> Xordanoc
		{
			get
			{
				return this._Xordanoc;
			}
			set
			{
				if ((this._Xordanoc != value))
				{
					this.OnXordanocChanging(value);
					this.SendPropertyChanging();
					this._Xordanoc = value;
					this.SendPropertyChanged("Xordanoc");
					this.OnXordanocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmpty", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=78)]
		public System.Nullable<bool> IsEmpty
		{
			get
			{
				return this._IsEmpty;
			}
			set
			{
				if ((this._IsEmpty != value))
				{
					this.OnIsEmptyChanging(value);
					this.SendPropertyChanging();
					this._IsEmpty = value;
					this.SendPropertyChanged("IsEmpty");
					this.OnIsEmptyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasTV", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=79)]
		public System.Nullable<bool> IsHasTV
		{
			get
			{
				return this._IsHasTV;
			}
			set
			{
				if ((this._IsHasTV != value))
				{
					this.OnIsHasTVChanging(value);
					this.SendPropertyChanging();
					this._IsHasTV = value;
					this.SendPropertyChanged("IsHasTV");
					this.OnIsHasTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasDVD", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=80)]
		public System.Nullable<bool> IsHasDVD
		{
			get
			{
				return this._IsHasDVD;
			}
			set
			{
				if ((this._IsHasDVD != value))
				{
					this.OnIsHasDVDChanging(value);
					this.SendPropertyChanging();
					this._IsHasDVD = value;
					this.SendPropertyChanged("IsHasDVD");
					this.OnIsHasDVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasJakuzi", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=81)]
		public System.Nullable<bool> IsHasJakuzi
		{
			get
			{
				return this._IsHasJakuzi;
			}
			set
			{
				if ((this._IsHasJakuzi != value))
				{
					this.OnIsHasJakuziChanging(value);
					this.SendPropertyChanging();
					this._IsHasJakuzi = value;
					this.SendPropertyChanged("IsHasJakuzi");
					this.OnIsHasJakuziChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasRefrigerator", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=82)]
		public System.Nullable<bool> IsHasRefrigerator
		{
			get
			{
				return this._IsHasRefrigerator;
			}
			set
			{
				if ((this._IsHasRefrigerator != value))
				{
					this.OnIsHasRefrigeratorChanging(value);
					this.SendPropertyChanging();
					this._IsHasRefrigerator = value;
					this.SendPropertyChanged("IsHasRefrigerator");
					this.OnIsHasRefrigeratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasAriston", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=83)]
		public System.Nullable<bool> IsHasAriston
		{
			get
			{
				return this._IsHasAriston;
			}
			set
			{
				if ((this._IsHasAriston != value))
				{
					this.OnIsHasAristonChanging(value);
					this.SendPropertyChanging();
					this._IsHasAriston = value;
					this.SendPropertyChanged("IsHasAriston");
					this.OnIsHasAristonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGeyser", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=84)]
		public System.Nullable<bool> IsHasGeyser
		{
			get
			{
				return this._IsHasGeyser;
			}
			set
			{
				if ((this._IsHasGeyser != value))
				{
					this.OnIsHasGeyserChanging(value);
					this.SendPropertyChanging();
					this._IsHasGeyser = value;
					this.SendPropertyChanged("IsHasGeyser");
					this.OnIsHasGeyserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasWaterContainer", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=85)]
		public System.Nullable<bool> IsHasWaterContainer
		{
			get
			{
				return this._IsHasWaterContainer;
			}
			set
			{
				if ((this._IsHasWaterContainer != value))
				{
					this.OnIsHasWaterContainerChanging(value);
					this.SendPropertyChanging();
					this._IsHasWaterContainer = value;
					this.SendPropertyChanged("IsHasWaterContainer");
					this.OnIsHasWaterContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasPool", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=86)]
		public System.Nullable<bool> IsHasPool
		{
			get
			{
				return this._IsHasPool;
			}
			set
			{
				if ((this._IsHasPool != value))
				{
					this.OnIsHasPoolChanging(value);
					this.SendPropertyChanging();
					this._IsHasPool = value;
					this.SendPropertyChanged("IsHasPool");
					this.OnIsHasPoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGasHeater", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=87)]
		public System.Nullable<bool> IsHasGasHeater
		{
			get
			{
				return this._IsHasGasHeater;
			}
			set
			{
				if ((this._IsHasGasHeater != value))
				{
					this.OnIsHasGasHeaterChanging(value);
					this.SendPropertyChanging();
					this._IsHasGasHeater = value;
					this.SendPropertyChanged("IsHasGasHeater");
					this.OnIsHasGasHeaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasOfficeRoom", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=88)]
		public System.Nullable<bool> IsHasOfficeRoom
		{
			get
			{
				return this._IsHasOfficeRoom;
			}
			set
			{
				if ((this._IsHasOfficeRoom != value))
				{
					this.OnIsHasOfficeRoomChanging(value);
					this.SendPropertyChanging();
					this._IsHasOfficeRoom = value;
					this.SendPropertyChanged("IsHasOfficeRoom");
					this.OnIsHasOfficeRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasShowerCab", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=89)]
		public System.Nullable<bool> IsHasShowerCab
		{
			get
			{
				return this._IsHasShowerCab;
			}
			set
			{
				if ((this._IsHasShowerCab != value))
				{
					this.OnIsHasShowerCabChanging(value);
					this.SendPropertyChanging();
					this._IsHasShowerCab = value;
					this.SendPropertyChanged("IsHasShowerCab");
					this.OnIsHasShowerCabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasBed", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=90)]
		public System.Nullable<bool> IsHasBed
		{
			get
			{
				return this._IsHasBed;
			}
			set
			{
				if ((this._IsHasBed != value))
				{
					this.OnIsHasBedChanging(value);
					this.SendPropertyChanging();
					this._IsHasBed = value;
					this.SendPropertyChanged("IsHasBed");
					this.OnIsHasBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGate", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=91)]
		public System.Nullable<bool> IsHasGate
		{
			get
			{
				return this._IsHasGate;
			}
			set
			{
				if ((this._IsHasGate != value))
				{
					this.OnIsHasGateChanging(value);
					this.SendPropertyChanging();
					this._IsHasGate = value;
					this.SendPropertyChanged("IsHasGate");
					this.OnIsHasGateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasTrees", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=92)]
		public System.Nullable<bool> IsHasTrees
		{
			get
			{
				return this._IsHasTrees;
			}
			set
			{
				if ((this._IsHasTrees != value))
				{
					this.OnIsHasTreesChanging(value);
					this.SendPropertyChanging();
					this._IsHasTrees = value;
					this.SendPropertyChanged("IsHasTrees");
					this.OnIsHasTreesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasPlayRoom", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=93)]
		public System.Nullable<bool> IsHasPlayRoom
		{
			get
			{
				return this._IsHasPlayRoom;
			}
			set
			{
				if ((this._IsHasPlayRoom != value))
				{
					this.OnIsHasPlayRoomChanging(value);
					this.SendPropertyChanging();
					this._IsHasPlayRoom = value;
					this.SendPropertyChanged("IsHasPlayRoom");
					this.OnIsHasPlayRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasService", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=94)]
		public System.Nullable<bool> IsHasService
		{
			get
			{
				return this._IsHasService;
			}
			set
			{
				if ((this._IsHasService != value))
				{
					this.OnIsHasServiceChanging(value);
					this.SendPropertyChanging();
					this._IsHasService = value;
					this.SendPropertyChanged("IsHasService");
					this.OnIsHasServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasHeatedFloors", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=95)]
		public System.Nullable<bool> IsHasHeatedFloors
		{
			get
			{
				return this._IsHasHeatedFloors;
			}
			set
			{
				if ((this._IsHasHeatedFloors != value))
				{
					this.OnIsHasHeatedFloorsChanging(value);
					this.SendPropertyChanging();
					this._IsHasHeatedFloors = value;
					this.SendPropertyChanged("IsHasHeatedFloors");
					this.OnIsHasHeatedFloorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasLodgeBalcony", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=96)]
		public System.Nullable<bool> IsHasLodgeBalcony
		{
			get
			{
				return this._IsHasLodgeBalcony;
			}
			set
			{
				if ((this._IsHasLodgeBalcony != value))
				{
					this.OnIsHasLodgeBalconyChanging(value);
					this.SendPropertyChanging();
					this._IsHasLodgeBalcony = value;
					this.SendPropertyChanged("IsHasLodgeBalcony");
					this.OnIsHasLodgeBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasIntercome", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=97)]
		public System.Nullable<bool> IsHasIntercome
		{
			get
			{
				return this._IsHasIntercome;
			}
			set
			{
				if ((this._IsHasIntercome != value))
				{
					this.OnIsHasIntercomeChanging(value);
					this.SendPropertyChanging();
					this._IsHasIntercome = value;
					this.SendPropertyChanged("IsHasIntercome");
					this.OnIsHasIntercomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInElitarBuilding", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=98)]
		public System.Nullable<bool> IsInElitarBuilding
		{
			get
			{
				return this._IsInElitarBuilding;
			}
			set
			{
				if ((this._IsInElitarBuilding != value))
				{
					this.OnIsInElitarBuildingChanging(value);
					this.SendPropertyChanging();
					this._IsInElitarBuilding = value;
					this.SendPropertyChanged("IsInElitarBuilding");
					this.OnIsInElitarBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasSecuritySystem", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=99)]
		public System.Nullable<bool> IsHasSecuritySystem
		{
			get
			{
				return this._IsHasSecuritySystem;
			}
			set
			{
				if ((this._IsHasSecuritySystem != value))
				{
					this.OnIsHasSecuritySystemChanging(value);
					this.SendPropertyChanging();
					this._IsHasSecuritySystem = value;
					this.SendPropertyChanged("IsHasSecuritySystem");
					this.OnIsHasSecuritySystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasParking", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=100)]
		public System.Nullable<bool> IsHasParking
		{
			get
			{
				return this._IsHasParking;
			}
			set
			{
				if ((this._IsHasParking != value))
				{
					this.OnIsHasParkingChanging(value);
					this.SendPropertyChanging();
					this._IsHasParking = value;
					this.SendPropertyChanged("IsHasParking");
					this.OnIsHasParkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasKitchen", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=101)]
		public System.Nullable<bool> IsHasKitchen
		{
			get
			{
				return this._IsHasKitchen;
			}
			set
			{
				if ((this._IsHasKitchen != value))
				{
					this.OnIsHasKitchenChanging(value);
					this.SendPropertyChanging();
					this._IsHasKitchen = value;
					this.SendPropertyChanged("IsHasKitchen");
					this.OnIsHasKitchenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InFirstLine", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=102)]
		public System.Nullable<bool> InFirstLine
		{
			get
			{
				return this._InFirstLine;
			}
			set
			{
				if ((this._InFirstLine != value))
				{
					this.OnInFirstLineChanging(value);
					this.SendPropertyChanging();
					this._InFirstLine = value;
					this.SendPropertyChanged("InFirstLine");
					this.OnInFirstLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InNullableFloor", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=103)]
		public System.Nullable<bool> InNullableFloor
		{
			get
			{
				return this._InNullableFloor;
			}
			set
			{
				if ((this._InNullableFloor != value))
				{
					this.OnInNullableFloorChanging(value);
					this.SendPropertyChanging();
					this._InNullableFloor = value;
					this.SendPropertyChanged("InNullableFloor");
					this.OnInNullableFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasWC", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=104)]
		public System.Nullable<bool> IsHasWC
		{
			get
			{
				return this._IsHasWC;
			}
			set
			{
				if ((this._IsHasWC != value))
				{
					this.OnIsHasWCChanging(value);
					this.SendPropertyChanging();
					this._IsHasWC = value;
					this.SendPropertyChanged("IsHasWC");
					this.OnIsHasWCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasThreePhaseElectricity", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=105)]
		public System.Nullable<bool> IsHasThreePhaseElectricity
		{
			get
			{
				return this._IsHasThreePhaseElectricity;
			}
			set
			{
				if ((this._IsHasThreePhaseElectricity != value))
				{
					this.OnIsHasThreePhaseElectricityChanging(value);
					this.SendPropertyChanging();
					this._IsHasThreePhaseElectricity = value;
					this.SendPropertyChanged("IsHasThreePhaseElectricity");
					this.OnIsHasThreePhaseElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasFencing", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=106)]
		public System.Nullable<bool> IsHasFencing
		{
			get
			{
				return this._IsHasFencing;
			}
			set
			{
				if ((this._IsHasFencing != value))
				{
					this.OnIsHasFencingChanging(value);
					this.SendPropertyChanging();
					this._IsHasFencing = value;
					this.SendPropertyChanged("IsHasFencing");
					this.OnIsHasFencingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalConvenients", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=107)]
		public string AdditionalConvenients
		{
			get
			{
				return this._AdditionalConvenients;
			}
			set
			{
				if ((this._AdditionalConvenients != value))
				{
					this.OnAdditionalConvenientsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalConvenients = value;
					this.SendPropertyChanged("AdditionalConvenients");
					this.OnAdditionalConvenientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=108)]
		public string Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lng", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=109)]
		public string Lng
		{
			get
			{
				return this._Lng;
			}
			set
			{
				if ((this._Lng != value))
				{
					this.OnLngChanging(value);
					this.SendPropertyChanging();
					this._Lng = value;
					this.SendPropertyChanged("Lng");
					this.OnLngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EuroDesign", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=110)]
		public System.Nullable<bool> EuroDesign
		{
			get
			{
				return this._EuroDesign;
			}
			set
			{
				if ((this._EuroDesign != value))
				{
					this.OnEuroDesignChanging(value);
					this.SendPropertyChanging();
					this._EuroDesign = value;
					this.SendPropertyChanged("EuroDesign");
					this.OnEuroDesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dishwasher", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=111)]
		public System.Nullable<bool> Dishwasher
		{
			get
			{
				return this._Dishwasher;
			}
			set
			{
				if ((this._Dishwasher != value))
				{
					this.OnDishwasherChanging(value);
					this.SendPropertyChanging();
					this._Dishwasher = value;
					this.SendPropertyChanged("Dishwasher");
					this.OnDishwasherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tile", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=112)]
		public System.Nullable<bool> Tile
		{
			get
			{
				return this._Tile;
			}
			set
			{
				if ((this._Tile != value))
				{
					this.OnTileChanging(value);
					this.SendPropertyChanging();
					this._Tile = value;
					this.SendPropertyChanged("Tile");
					this.OnTileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metlax", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=113)]
		public System.Nullable<bool> Metlax
		{
			get
			{
				return this._Metlax;
			}
			set
			{
				if ((this._Metlax != value))
				{
					this.OnMetlaxChanging(value);
					this.SendPropertyChanging();
					this._Metlax = value;
					this.SendPropertyChanged("Metlax");
					this.OnMetlaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LodgeBalcony", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=114)]
		public System.Nullable<bool> LodgeBalcony
		{
			get
			{
				return this._LodgeBalcony;
			}
			set
			{
				if ((this._LodgeBalcony != value))
				{
					this.OnLodgeBalconyChanging(value);
					this.SendPropertyChanging();
					this._LodgeBalcony = value;
					this.SendPropertyChanged("LodgeBalcony");
					this.OnLodgeBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Domophone", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=115)]
		public System.Nullable<bool> Domophone
		{
			get
			{
				return this._Domophone;
			}
			set
			{
				if ((this._Domophone != value))
				{
					this.OnDomophoneChanging(value);
					this.SendPropertyChanging();
					this._Domophone = value;
					this.SendPropertyChanged("Domophone");
					this.OnDomophoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lift", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=116)]
		public System.Nullable<bool> Lift
		{
			get
			{
				return this._Lift;
			}
			set
			{
				if ((this._Lift != value))
				{
					this.OnLiftChanging(value);
					this.SendPropertyChanging();
					this._Lift = value;
					this.SendPropertyChanged("Lift");
					this.OnLiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotPopulated", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=117)]
		public System.Nullable<bool> NotPopulated
		{
			get
			{
				return this._NotPopulated;
			}
			set
			{
				if ((this._NotPopulated != value))
				{
					this.OnNotPopulatedChanging(value);
					this.SendPropertyChanging();
					this._NotPopulated = value;
					this.SendPropertyChanged("NotPopulated");
					this.OnNotPopulatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeparateRooms", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=118)]
		public System.Nullable<bool> SeparateRooms
		{
			get
			{
				return this._SeparateRooms;
			}
			set
			{
				if ((this._SeparateRooms != value))
				{
					this.OnSeparateRoomsChanging(value);
					this.SendPropertyChanging();
					this._SeparateRooms = value;
					this.SendPropertyChanged("SeparateRooms");
					this.OnSeparateRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Square", DbType="Real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=119)]
		public System.Nullable<float> Square
		{
			get
			{
				return this._Square;
			}
			set
			{
				if ((this._Square != value))
				{
					this.OnSquareChanging(value);
					this.SendPropertyChanging();
					this._Square = value;
					this.SendPropertyChanged("Square");
					this.OnSquareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=120)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakedRooms", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=121)]
		public System.Nullable<int> MakedRooms
		{
			get
			{
				return this._MakedRooms;
			}
			set
			{
				if ((this._MakedRooms != value))
				{
					this.OnMakedRoomsChanging(value);
					this.SendPropertyChanging();
					this._MakedRooms = value;
					this.SendPropertyChanged("MakedRooms");
					this.OnMakedRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandFront", DbType="Float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=122)]
		public System.Nullable<double> LandFront
		{
			get
			{
				return this._LandFront;
			}
			set
			{
				if ((this._LandFront != value))
				{
					this.OnLandFrontChanging(value);
					this.SendPropertyChanging();
					this._LandFront = value;
					this.SendPropertyChanged("LandFront");
					this.OnLandFrontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorAdditional", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=123)]
		public System.Nullable<int> FloorAdditional
		{
			get
			{
				return this._FloorAdditional;
			}
			set
			{
				if ((this._FloorAdditional != value))
				{
					this.OnFloorAdditionalChanging(value);
					this.SendPropertyChanging();
					this._FloorAdditional = value;
					this.SendPropertyChanged("FloorAdditional");
					this.OnFloorAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandNumber", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=124)]
		public string LandNumber
		{
			get
			{
				return this._LandNumber;
			}
			set
			{
				if ((this._LandNumber != value))
				{
					this.OnLandNumberChanging(value);
					this.SendPropertyChanging();
					this._LandNumber = value;
					this.SendPropertyChanged("LandNumber");
					this.OnLandNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsElectricityCablesChanged", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=125)]
		public System.Nullable<bool> IsElectricityCablesChanged
		{
			get
			{
				return this._IsElectricityCablesChanged;
			}
			set
			{
				if ((this._IsElectricityCablesChanged != value))
				{
					this.OnIsElectricityCablesChangedChanging(value);
					this.SendPropertyChanging();
					this._IsElectricityCablesChanged = value;
					this.SendPropertyChanged("IsElectricityCablesChanged");
					this.OnIsElectricityCablesChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPipesChanged", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=126)]
		public System.Nullable<bool> IsPipesChanged
		{
			get
			{
				return this._IsPipesChanged;
			}
			set
			{
				if ((this._IsPipesChanged != value))
				{
					this.OnIsPipesChangedChanging(value);
					this.SendPropertyChanging();
					this._IsPipesChanged = value;
					this.SendPropertyChanged("IsPipesChanged");
					this.OnIsPipesChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCeilingRepaired", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=127)]
		public System.Nullable<bool> IsCeilingRepaired
		{
			get
			{
				return this._IsCeilingRepaired;
			}
			set
			{
				if ((this._IsCeilingRepaired != value))
				{
					this.OnIsCeilingRepairedChanging(value);
					this.SendPropertyChanging();
					this._IsCeilingRepaired = value;
					this.SendPropertyChanged("IsCeilingRepaired");
					this.OnIsCeilingRepairedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=128)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasSauna", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=129)]
		public System.Nullable<bool> IsHasSauna
		{
			get
			{
				return this._IsHasSauna;
			}
			set
			{
				if ((this._IsHasSauna != value))
				{
					this.OnIsHasSaunaChanging(value);
					this.SendPropertyChanging();
					this._IsHasSauna = value;
					this.SendPropertyChanged("IsHasSauna");
					this.OnIsHasSaunaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasSomething", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=130)]
		public System.Nullable<bool> IsHasSomething
		{
			get
			{
				return this._IsHasSomething;
			}
			set
			{
				if ((this._IsHasSomething != value))
				{
					this.OnIsHasSomethingChanging(value);
					this.SendPropertyChanging();
					this._IsHasSomething = value;
					this.SendPropertyChanged("IsHasSomething");
					this.OnIsHasSomethingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=131)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalDetailsSite", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=132)]
		public string AdditionalDetailsSite
		{
			get
			{
				return this._AdditionalDetailsSite;
			}
			set
			{
				if ((this._AdditionalDetailsSite != value))
				{
					this.OnAdditionalDetailsSiteChanging(value);
					this.SendPropertyChanging();
					this._AdditionalDetailsSite = value;
					this.SendPropertyChanged("AdditionalDetailsSite");
					this.OnAdditionalDetailsSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceNameSite", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=133)]
		public string PlaceNameSite
		{
			get
			{
				return this._PlaceNameSite;
			}
			set
			{
				if ((this._PlaceNameSite != value))
				{
					this.OnPlaceNameSiteChanging(value);
					this.SendPropertyChanging();
					this._PlaceNameSite = value;
					this.SendPropertyChanged("PlaceNameSite");
					this.OnPlaceNameSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterHeater", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=134)]
		public System.Nullable<bool> WaterHeater
		{
			get
			{
				return this._WaterHeater;
			}
			set
			{
				if ((this._WaterHeater != value))
				{
					this.OnWaterHeaterChanging(value);
					this.SendPropertyChanging();
					this._WaterHeater = value;
					this.SendPropertyChanged("WaterHeater");
					this.OnWaterHeaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=135)]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=136)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOverseas", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=137)]
		public System.Nullable<bool> IsOverseas
		{
			get
			{
				return this._IsOverseas;
			}
			set
			{
				if ((this._IsOverseas != value))
				{
					this.OnIsOverseasChanging(value);
					this.SendPropertyChanging();
					this._IsOverseas = value;
					this.SendPropertyChanged("IsOverseas");
					this.OnIsOverseasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeToBrokerDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=138)]
		public System.Nullable<System.DateTime> ChangeToBrokerDate
		{
			get
			{
				return this._ChangeToBrokerDate;
			}
			set
			{
				if ((this._ChangeToBrokerDate != value))
				{
					this.OnChangeToBrokerDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeToBrokerDate = value;
					this.SendPropertyChanged("ChangeToBrokerDate");
					this.OnChangeToBrokerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_ClientSuggestedEstate", Storage="_ClientSuggestedEstates", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=139, EmitDefaultValue=false)]
		public EntitySet<ClientSuggestedEstate> ClientSuggestedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._ClientSuggestedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClientSuggestedEstates;
			}
			set
			{
				this._ClientSuggestedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateConvenient", Storage="_EstateConvenients", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=140, EmitDefaultValue=false)]
		public EntitySet<EstateConvenient> EstateConvenients
		{
			get
			{
				if ((this.serializing 
							&& (this._EstateConvenients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstateConvenients;
			}
			set
			{
				this._EstateConvenients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateImage", Storage="_EstateImages", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=141, EmitDefaultValue=false)]
		public EntitySet<EstateImage> EstateImages
		{
			get
			{
				if ((this.serializing 
							&& (this._EstateImages.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstateImages;
			}
			set
			{
				this._EstateImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstatesAndDemand", Storage="_EstatesAndDemands", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=142, EmitDefaultValue=false)]
		public EntitySet<EstatesAndDemand> EstatesAndDemands
		{
			get
			{
				if ((this.serializing 
							&& (this._EstatesAndDemands.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstatesAndDemands;
			}
			set
			{
				this._EstatesAndDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateVideo", Storage="_EstateVideos", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=143, EmitDefaultValue=false)]
		public EntitySet<EstateVideo> EstateVideos
		{
			get
			{
				if ((this.serializing 
							&& (this._EstateVideos.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstateVideos;
			}
			set
			{
				this._EstateVideos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_FavoriteEstate", Storage="_FavoriteEstates", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=144, EmitDefaultValue=false)]
		public EntitySet<FavoriteEstate> FavoriteEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._FavoriteEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FavoriteEstates;
			}
			set
			{
				this._FavoriteEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_OldPrice", Storage="_OldPrices", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=145, EmitDefaultValue=false)]
		public EntitySet<OldPrice> OldPrices
		{
			get
			{
				if ((this.serializing 
							&& (this._OldPrices.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OldPrices;
			}
			set
			{
				this._OldPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_RentedEstate", Storage="_RentedEstates", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=146, EmitDefaultValue=false)]
		public EntitySet<RentedEstate> RentedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._RentedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RentedEstates;
			}
			set
			{
				this._RentedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_SelledEstate", Storage="_SelledEstates", ThisKey="EstateID", OtherKey="EstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=147, EmitDefaultValue=false)]
		public EntitySet<SelledEstate> SelledEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._SelledEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SelledEstates;
			}
			set
			{
				this._SelledEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingType_Estate", Storage="_BuildingType", ThisKey="BuildingTypeID", OtherKey="BuildingTypeID", IsForeignKey=true)]
		public BuildingType BuildingType
		{
			get
			{
				return this._BuildingType.Entity;
			}
			set
			{
				BuildingType previousValue = this._BuildingType.Entity;
				if (((previousValue != value) 
							|| (this._BuildingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuildingType.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._BuildingType.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._BuildingTypeID = value.BuildingTypeID;
					}
					else
					{
						this._BuildingTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BuildingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Estate", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Estate", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Estate", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Estate", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_Estate", Storage="_EstateType", ThisKey="EstateTypeID", OtherKey="EstateTypeID", IsForeignKey=true)]
		public EstateType EstateType
		{
			get
			{
				return this._EstateType.Entity;
			}
			set
			{
				EstateType previousValue = this._EstateType.Entity;
				if (((previousValue != value) 
							|| (this._EstateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateType.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._EstateType.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._EstateTypeID = value.EstateTypeID;
					}
					else
					{
						this._EstateTypeID = default(int);
					}
					this.SendPropertyChanged("EstateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationalSignificance_Estate", Storage="_OperationalSignificance", ThisKey="OperationalSignificanceID", OtherKey="ID", IsForeignKey=true)]
		public OperationalSignificance OperationalSignificance
		{
			get
			{
				return this._OperationalSignificance.Entity;
			}
			set
			{
				OperationalSignificance previousValue = this._OperationalSignificance.Entity;
				if (((previousValue != value) 
							|| (this._OperationalSignificance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationalSignificance.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._OperationalSignificance.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._OperationalSignificanceID = value.ID;
					}
					else
					{
						this._OperationalSignificanceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OperationalSignificance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Estate", Storage="_OrderType", ThisKey="OrderTypeID", OtherKey="OrderTypeID", IsForeignKey=true)]
		public OrderType OrderType
		{
			get
			{
				return this._OrderType.Entity;
			}
			set
			{
				OrderType previousValue = this._OrderType.Entity;
				if (((previousValue != value) 
							|| (this._OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderType.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._OrderType.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._OrderTypeID = value.OrderTypeID;
					}
					else
					{
						this._OrderTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Estate", Storage="_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Estate", Storage="_Region", ThisKey="RegionID", OtherKey="RegionID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._RegionID = value.RegionID;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Remont_Estate", Storage="_Remont", ThisKey="RemontID", OtherKey="RemontID", IsForeignKey=true)]
		public Remont Remont
		{
			get
			{
				return this._Remont.Entity;
			}
			set
			{
				Remont previousValue = this._Remont.Entity;
				if (((previousValue != value) 
							|| (this._Remont.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Remont.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Remont.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._RemontID = value.RemontID;
					}
					else
					{
						this._RemontID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Remont");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roofing_Estate", Storage="_Roofing", ThisKey="RoofingID", OtherKey="ID", IsForeignKey=true)]
		public Roofing Roofing
		{
			get
			{
				return this._Roofing.Entity;
			}
			set
			{
				Roofing previousValue = this._Roofing.Entity;
				if (((previousValue != value) 
							|| (this._Roofing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roofing.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Roofing.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._RoofingID = value.ID;
					}
					else
					{
						this._RoofingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roofing");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SignificanceOfTheUse_Estate", Storage="_SignificanceOfTheUse", ThisKey="SignificanceOfTheUseID", OtherKey="ID", IsForeignKey=true)]
		public SignificanceOfTheUse SignificanceOfTheUse
		{
			get
			{
				return this._SignificanceOfTheUse.Entity;
			}
			set
			{
				SignificanceOfTheUse previousValue = this._SignificanceOfTheUse.Entity;
				if (((previousValue != value) 
							|| (this._SignificanceOfTheUse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SignificanceOfTheUse.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._SignificanceOfTheUse.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._SignificanceOfTheUseID = value.ID;
					}
					else
					{
						this._SignificanceOfTheUseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SignificanceOfTheUse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Estate", Storage="_State", ThisKey="StateID", OtherKey="ID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._StateID = value.ID;
					}
					else
					{
						this._StateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Estate", Storage="_Street", ThisKey="StreetID", OtherKey="StreetID", IsForeignKey=true)]
		public Street Street
		{
			get
			{
				return this._Street.Entity;
			}
			set
			{
				Street previousValue = this._Street.Entity;
				if (((previousValue != value) 
							|| (this._Street.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Street.Entity = null;
						previousValue.Estates.Remove(this);
					}
					this._Street.Entity = value;
					if ((value != null))
					{
						value.Estates.Add(this);
						this._StreetID = value.StreetID;
					}
					else
					{
						this._StreetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Street");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_EstateConvenients(EstateConvenient entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_EstateConvenients(EstateConvenient entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_EstateImages(EstateImage entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_EstateImages(EstateImage entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_EstateVideos(EstateVideo entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_EstateVideos(EstateVideo entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_FavoriteEstates(FavoriteEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_FavoriteEstates(FavoriteEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_OldPrices(OldPrice entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_OldPrices(OldPrice entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_RentedEstates(RentedEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void attach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = this;
		}
		
		private void detach_SelledEstates(SelledEstate entity)
		{
			this.SendPropertyChanging();
			entity.Estate = null;
		}
		
		private void Initialize()
		{
			this._ClientSuggestedEstates = new EntitySet<ClientSuggestedEstate>(new Action<ClientSuggestedEstate>(this.attach_ClientSuggestedEstates), new Action<ClientSuggestedEstate>(this.detach_ClientSuggestedEstates));
			this._EstateConvenients = new EntitySet<EstateConvenient>(new Action<EstateConvenient>(this.attach_EstateConvenients), new Action<EstateConvenient>(this.detach_EstateConvenients));
			this._EstateImages = new EntitySet<EstateImage>(new Action<EstateImage>(this.attach_EstateImages), new Action<EstateImage>(this.detach_EstateImages));
			this._EstatesAndDemands = new EntitySet<EstatesAndDemand>(new Action<EstatesAndDemand>(this.attach_EstatesAndDemands), new Action<EstatesAndDemand>(this.detach_EstatesAndDemands));
			this._EstateVideos = new EntitySet<EstateVideo>(new Action<EstateVideo>(this.attach_EstateVideos), new Action<EstateVideo>(this.detach_EstateVideos));
			this._FavoriteEstates = new EntitySet<FavoriteEstate>(new Action<FavoriteEstate>(this.attach_FavoriteEstates), new Action<FavoriteEstate>(this.detach_FavoriteEstates));
			this._OldPrices = new EntitySet<OldPrice>(new Action<OldPrice>(this.attach_OldPrices), new Action<OldPrice>(this.detach_OldPrices));
			this._RentedEstates = new EntitySet<RentedEstate>(new Action<RentedEstate>(this.attach_RentedEstates), new Action<RentedEstate>(this.detach_RentedEstates));
			this._SelledEstates = new EntitySet<SelledEstate>(new Action<SelledEstate>(this.attach_SelledEstates), new Action<SelledEstate>(this.detach_SelledEstates));
			this._BuildingType = default(EntityRef<BuildingType>);
			this._City = default(EntityRef<City>);
			this._Country = default(EntityRef<Country>);
			this._Currency = default(EntityRef<Currency>);
			this._User = default(EntityRef<User>);
			this._EstateType = default(EntityRef<EstateType>);
			this._OperationalSignificance = default(EntityRef<OperationalSignificance>);
			this._OrderType = default(EntityRef<OrderType>);
			this._Project = default(EntityRef<Project>);
			this._Region = default(EntityRef<Region>);
			this._Remont = default(EntityRef<Remont>);
			this._Roofing = default(EntityRef<Roofing>);
			this._SignificanceOfTheUse = default(EntityRef<SignificanceOfTheUse>);
			this._State = default(EntityRef<State>);
			this._Street = default(EntityRef<Street>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstatesAndDemands")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EstatesAndDemand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateID;
		
		private int _DemandID;
		
		private System.Nullable<System.DateTime> _ShowDate;
		
		private System.Nullable<int> _BrokerID;
		
		private System.Nullable<int> _EstateOriginalID;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _Comment;
		
		private EntityRef<Estate> _Estate;
		
		private EntityRef<User> _User;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnDemandIDChanging(int value);
    partial void OnDemandIDChanged();
    partial void OnShowDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShowDateChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnEstateOriginalIDChanging(System.Nullable<int> value);
    partial void OnEstateOriginalIDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public EstatesAndDemand()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DemandID
		{
			get
			{
				return this._DemandID;
			}
			set
			{
				if ((this._DemandID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIDChanging(value);
					this.SendPropertyChanging();
					this._DemandID = value;
					this.SendPropertyChanged("DemandID");
					this.OnDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> ShowDate
		{
			get
			{
				return this._ShowDate;
			}
			set
			{
				if ((this._ShowDate != value))
				{
					this.OnShowDateChanging(value);
					this.SendPropertyChanging();
					this._ShowDate = value;
					this.SendPropertyChanged("ShowDate");
					this.OnShowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> EstateOriginalID
		{
			get
			{
				return this._EstateOriginalID;
			}
			set
			{
				if ((this._EstateOriginalID != value))
				{
					this.OnEstateOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._EstateOriginalID = value;
					this.SendPropertyChanged("EstateOriginalID");
					this.OnEstateOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstatesAndDemand", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.EstatesAndDemands.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.EstatesAndDemands.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstatesAndDemand", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EstatesAndDemands.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EstatesAndDemands.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_EstatesAndDemand", Storage="_NeededEstate", ThisKey="DemandID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.EstatesAndDemands.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.EstatesAndDemands.Add(this);
						this._DemandID = value.ID;
					}
					else
					{
						this._DemandID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Estate = default(EntityRef<Estate>);
			this._User = default(EntityRef<User>);
			this._NeededEstate = default(EntityRef<NeededEstate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EstateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstateTypeID;
		
		private string _TypeNameAm;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _TypeNameEn;
		
		private string _TypeNameRu;
		
		private string _TypeNameCz;
		
		private string _TypeNameKz;
		
		private EntitySet<BrokerEstateType> _BrokerEstateTypes;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededEstateType> _NeededEstateTypes;
		
		private EntitySet<SignificanceOfTheUse> _SignificanceOfTheUses;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstateTypeIDChanging(int value);
    partial void OnEstateTypeIDChanged();
    partial void OnTypeNameAmChanging(string value);
    partial void OnTypeNameAmChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnTypeNameEnChanging(string value);
    partial void OnTypeNameEnChanged();
    partial void OnTypeNameRuChanging(string value);
    partial void OnTypeNameRuChanged();
    partial void OnTypeNameCzChanging(string value);
    partial void OnTypeNameCzChanged();
    partial void OnTypeNameKzChanging(string value);
    partial void OnTypeNameKzChanged();
    #endregion
		
		public EstateType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EstateTypeID
		{
			get
			{
				return this._EstateTypeID;
			}
			set
			{
				if ((this._EstateTypeID != value))
				{
					this.OnEstateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeID = value;
					this.SendPropertyChanged("EstateTypeID");
					this.OnEstateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNameAm", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeNameAm
		{
			get
			{
				return this._TypeNameAm;
			}
			set
			{
				if ((this._TypeNameAm != value))
				{
					this.OnTypeNameAmChanging(value);
					this.SendPropertyChanging();
					this._TypeNameAm = value;
					this.SendPropertyChanged("TypeNameAm");
					this.OnTypeNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string TypeNameEn
		{
			get
			{
				return this._TypeNameEn;
			}
			set
			{
				if ((this._TypeNameEn != value))
				{
					this.OnTypeNameEnChanging(value);
					this.SendPropertyChanging();
					this._TypeNameEn = value;
					this.SendPropertyChanged("TypeNameEn");
					this.OnTypeNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string TypeNameRu
		{
			get
			{
				return this._TypeNameRu;
			}
			set
			{
				if ((this._TypeNameRu != value))
				{
					this.OnTypeNameRuChanging(value);
					this.SendPropertyChanging();
					this._TypeNameRu = value;
					this.SendPropertyChanged("TypeNameRu");
					this.OnTypeNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string TypeNameCz
		{
			get
			{
				return this._TypeNameCz;
			}
			set
			{
				if ((this._TypeNameCz != value))
				{
					this.OnTypeNameCzChanging(value);
					this.SendPropertyChanging();
					this._TypeNameCz = value;
					this.SendPropertyChanged("TypeNameCz");
					this.OnTypeNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeNameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string TypeNameKz
		{
			get
			{
				return this._TypeNameKz;
			}
			set
			{
				if ((this._TypeNameKz != value))
				{
					this.OnTypeNameKzChanging(value);
					this.SendPropertyChanging();
					this._TypeNameKz = value;
					this.SendPropertyChanged("TypeNameKz");
					this.OnTypeNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_BrokerEstateType", Storage="_BrokerEstateTypes", ThisKey="EstateTypeID", OtherKey="EstateTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<BrokerEstateType> BrokerEstateTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerEstateTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerEstateTypes;
			}
			set
			{
				this._BrokerEstateTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_Estate", Storage="_Estates", ThisKey="EstateTypeID", OtherKey="EstateTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_NeededEstateType", Storage="_NeededEstateTypes", ThisKey="EstateTypeID", OtherKey="EstateTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<NeededEstateType> NeededEstateTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededEstateTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededEstateTypes;
			}
			set
			{
				this._NeededEstateTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_SignificanceOfTheUse", Storage="_SignificanceOfTheUses", ThisKey="EstateTypeID", OtherKey="EstateTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<SignificanceOfTheUse> SignificanceOfTheUses
		{
			get
			{
				if ((this.serializing 
							&& (this._SignificanceOfTheUses.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SignificanceOfTheUses;
			}
			set
			{
				this._SignificanceOfTheUses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BrokerEstateTypes(BrokerEstateType entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = this;
		}
		
		private void detach_BrokerEstateTypes(BrokerEstateType entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = null;
		}
		
		private void attach_NeededEstateTypes(NeededEstateType entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = this;
		}
		
		private void detach_NeededEstateTypes(NeededEstateType entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = null;
		}
		
		private void attach_SignificanceOfTheUses(SignificanceOfTheUse entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = this;
		}
		
		private void detach_SignificanceOfTheUses(SignificanceOfTheUse entity)
		{
			this.SendPropertyChanging();
			entity.EstateType = null;
		}
		
		private void Initialize()
		{
			this._BrokerEstateTypes = new EntitySet<BrokerEstateType>(new Action<BrokerEstateType>(this.attach_BrokerEstateTypes), new Action<BrokerEstateType>(this.detach_BrokerEstateTypes));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededEstateTypes = new EntitySet<NeededEstateType>(new Action<NeededEstateType>(this.attach_NeededEstateTypes), new Action<NeededEstateType>(this.detach_NeededEstateTypes));
			this._SignificanceOfTheUses = new EntitySet<SignificanceOfTheUse>(new Action<SignificanceOfTheUse>(this.attach_SignificanceOfTheUses), new Action<SignificanceOfTheUse>(this.detach_SignificanceOfTheUses));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateVideos")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EstateVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EstateID;
		
		private string _FileExtension;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<Estate> _Estate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public EstateVideo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExtension", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string FileExtension
		{
			get
			{
				return this._FileExtension;
			}
			set
			{
				if ((this._FileExtension != value))
				{
					this.OnFileExtensionChanging(value);
					this.SendPropertyChanging();
					this._FileExtension = value;
					this.SendPropertyChanged("FileExtension");
					this.OnFileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_EstateVideo", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.EstateVideos.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.EstateVideos.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Estate = default(EntityRef<Estate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteClients")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FavoriteClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _ClientID;
		
		private EntityRef<User> _User;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    #endregion
		
		public FavoriteClient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteClient", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FavoriteClients.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FavoriteClients.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_FavoriteClient", Storage="_NeededEstate", ThisKey="ClientID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.FavoriteClients.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.FavoriteClients.Add(this);
						this._ClientID = value.ID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			this._NeededEstate = default(EntityRef<NeededEstate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteEstates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FavoriteEstate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _EstateID;
		
		private EntityRef<Estate> _Estate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    #endregion
		
		public FavoriteEstate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_FavoriteEstate", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.FavoriteEstates.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.FavoriteEstates.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteEstate", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FavoriteEstates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FavoriteEstates.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Estate = default(EntityRef<Estate>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededBuildingTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededBuildingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DemandID;
		
		private int _BuildingTypeID;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<int> _BuildingTypeOriginalID;
		
		private EntityRef<BuildingType> _BuildingType;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDemandIDChanging(int value);
    partial void OnDemandIDChanged();
    partial void OnBuildingTypeIDChanging(int value);
    partial void OnBuildingTypeIDChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnBuildingTypeOriginalIDChanging(System.Nullable<int> value);
    partial void OnBuildingTypeOriginalIDChanged();
    #endregion
		
		public NeededBuildingType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DemandID
		{
			get
			{
				return this._DemandID;
			}
			set
			{
				if ((this._DemandID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIDChanging(value);
					this.SendPropertyChanging();
					this._DemandID = value;
					this.SendPropertyChanged("DemandID");
					this.OnDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int BuildingTypeID
		{
			get
			{
				return this._BuildingTypeID;
			}
			set
			{
				if ((this._BuildingTypeID != value))
				{
					if (this._BuildingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuildingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingTypeID = value;
					this.SendPropertyChanged("BuildingTypeID");
					this.OnBuildingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingTypeOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> BuildingTypeOriginalID
		{
			get
			{
				return this._BuildingTypeOriginalID;
			}
			set
			{
				if ((this._BuildingTypeOriginalID != value))
				{
					this.OnBuildingTypeOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._BuildingTypeOriginalID = value;
					this.SendPropertyChanged("BuildingTypeOriginalID");
					this.OnBuildingTypeOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BuildingType_NeededBuildingType", Storage="_BuildingType", ThisKey="BuildingTypeID", OtherKey="BuildingTypeID", IsForeignKey=true)]
		public BuildingType BuildingType
		{
			get
			{
				return this._BuildingType.Entity;
			}
			set
			{
				BuildingType previousValue = this._BuildingType.Entity;
				if (((previousValue != value) 
							|| (this._BuildingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BuildingType.Entity = null;
						previousValue.NeededBuildingTypes.Remove(this);
					}
					this._BuildingType.Entity = value;
					if ((value != null))
					{
						value.NeededBuildingTypes.Add(this);
						this._BuildingTypeID = value.BuildingTypeID;
					}
					else
					{
						this._BuildingTypeID = default(int);
					}
					this.SendPropertyChanged("BuildingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededBuildingType", Storage="_NeededEstate", ThisKey="DemandID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.NeededBuildingTypes.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.NeededBuildingTypes.Add(this);
						this._DemandID = value.ID;
					}
					else
					{
						this._DemandID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BuildingType = default(EntityRef<BuildingType>);
			this._NeededEstate = default(EntityRef<NeededEstate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededEstates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededEstate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RoomCountFrom;
		
		private System.Nullable<int> _RoomCountTo;
		
		private System.Nullable<int> _FloorFrom;
		
		private System.Nullable<int> _FloorTo;
		
		private System.Nullable<long> _PriceFrom;
		
		private System.Nullable<long> _PriceTo;
		
		private System.Nullable<int> _SquareFrom;
		
		private System.Nullable<int> _SquareTo;
		
		private System.Nullable<bool> _IsWoterAlways;
		
		private System.Nullable<bool> _IsHasGas;
		
		private System.Nullable<int> _BrokerID;
		
		private string _SellerName;
		
		private string _Telephone1;
		
		private string _Telephone2;
		
		private string _AdditionalDetails;
		
		private System.Nullable<long> _PriceFromInAMD;
		
		private System.Nullable<long> _PriceToInAMD;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<bool> _IsNeedForRent;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<bool> _IsHasGarage;
		
		private System.Nullable<bool> _IsInNewBuilding;
		
		private System.Nullable<bool> _IsExchangePossible;
		
		private System.Nullable<bool> _IsHasFurniture;
		
		private System.Nullable<bool> _IsEmpty;
		
		private System.Nullable<bool> _IsHasPodval;
		
		private System.Nullable<bool> _IsInNullableFloor;
		
		private System.Nullable<bool> _IsInFirstLine;
		
		private System.Nullable<bool> _IsHasThreePhaseElectricity;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _OriginalID;
		
		private string _Code;
		
		private string _Email;
		
		private EntitySet<ClientSuggestedEstate> _ClientSuggestedEstates;
		
		private EntitySet<EstatesAndDemand> _EstatesAndDemands;
		
		private EntitySet<FavoriteClient> _FavoriteClients;
		
		private EntitySet<NeededBuildingType> _NeededBuildingTypes;
		
		private EntitySet<NeededEstateType> _NeededEstateTypes;
		
		private EntitySet<NeededProject> _NeededProjects;
		
		private EntitySet<NeededRegion> _NeededRegions;
		
		private EntitySet<NeededRemont> _NeededRemonts;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoomCountFromChanging(System.Nullable<int> value);
    partial void OnRoomCountFromChanged();
    partial void OnRoomCountToChanging(System.Nullable<int> value);
    partial void OnRoomCountToChanged();
    partial void OnFloorFromChanging(System.Nullable<int> value);
    partial void OnFloorFromChanged();
    partial void OnFloorToChanging(System.Nullable<int> value);
    partial void OnFloorToChanged();
    partial void OnPriceFromChanging(System.Nullable<long> value);
    partial void OnPriceFromChanged();
    partial void OnPriceToChanging(System.Nullable<long> value);
    partial void OnPriceToChanged();
    partial void OnSquareFromChanging(System.Nullable<int> value);
    partial void OnSquareFromChanged();
    partial void OnSquareToChanging(System.Nullable<int> value);
    partial void OnSquareToChanged();
    partial void OnIsWoterAlwaysChanging(System.Nullable<bool> value);
    partial void OnIsWoterAlwaysChanged();
    partial void OnIsHasGasChanging(System.Nullable<bool> value);
    partial void OnIsHasGasChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnSellerNameChanging(string value);
    partial void OnSellerNameChanged();
    partial void OnTelephone1Changing(string value);
    partial void OnTelephone1Changed();
    partial void OnTelephone2Changing(string value);
    partial void OnTelephone2Changed();
    partial void OnAdditionalDetailsChanging(string value);
    partial void OnAdditionalDetailsChanged();
    partial void OnPriceFromInAMDChanging(System.Nullable<long> value);
    partial void OnPriceFromInAMDChanged();
    partial void OnPriceToInAMDChanging(System.Nullable<long> value);
    partial void OnPriceToInAMDChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnIsNeedForRentChanging(System.Nullable<bool> value);
    partial void OnIsNeedForRentChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnIsHasGarageChanging(System.Nullable<bool> value);
    partial void OnIsHasGarageChanged();
    partial void OnIsInNewBuildingChanging(System.Nullable<bool> value);
    partial void OnIsInNewBuildingChanged();
    partial void OnIsExchangePossibleChanging(System.Nullable<bool> value);
    partial void OnIsExchangePossibleChanged();
    partial void OnIsHasFurnitureChanging(System.Nullable<bool> value);
    partial void OnIsHasFurnitureChanged();
    partial void OnIsEmptyChanging(System.Nullable<bool> value);
    partial void OnIsEmptyChanged();
    partial void OnIsHasPodvalChanging(System.Nullable<bool> value);
    partial void OnIsHasPodvalChanged();
    partial void OnIsInNullableFloorChanging(System.Nullable<bool> value);
    partial void OnIsInNullableFloorChanged();
    partial void OnIsInFirstLineChanging(System.Nullable<bool> value);
    partial void OnIsInFirstLineChanged();
    partial void OnIsHasThreePhaseElectricityChanging(System.Nullable<bool> value);
    partial void OnIsHasThreePhaseElectricityChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NeededEstate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCountFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> RoomCountFrom
		{
			get
			{
				return this._RoomCountFrom;
			}
			set
			{
				if ((this._RoomCountFrom != value))
				{
					this.OnRoomCountFromChanging(value);
					this.SendPropertyChanging();
					this._RoomCountFrom = value;
					this.SendPropertyChanged("RoomCountFrom");
					this.OnRoomCountFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCountTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RoomCountTo
		{
			get
			{
				return this._RoomCountTo;
			}
			set
			{
				if ((this._RoomCountTo != value))
				{
					this.OnRoomCountToChanging(value);
					this.SendPropertyChanging();
					this._RoomCountTo = value;
					this.SendPropertyChanged("RoomCountTo");
					this.OnRoomCountToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> FloorFrom
		{
			get
			{
				return this._FloorFrom;
			}
			set
			{
				if ((this._FloorFrom != value))
				{
					this.OnFloorFromChanging(value);
					this.SendPropertyChanging();
					this._FloorFrom = value;
					this.SendPropertyChanged("FloorFrom");
					this.OnFloorFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> FloorTo
		{
			get
			{
				return this._FloorTo;
			}
			set
			{
				if ((this._FloorTo != value))
				{
					this.OnFloorToChanging(value);
					this.SendPropertyChanging();
					this._FloorTo = value;
					this.SendPropertyChanged("FloorTo");
					this.OnFloorToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFrom", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<long> PriceFrom
		{
			get
			{
				return this._PriceFrom;
			}
			set
			{
				if ((this._PriceFrom != value))
				{
					this.OnPriceFromChanging(value);
					this.SendPropertyChanging();
					this._PriceFrom = value;
					this.SendPropertyChanged("PriceFrom");
					this.OnPriceFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceTo", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<long> PriceTo
		{
			get
			{
				return this._PriceTo;
			}
			set
			{
				if ((this._PriceTo != value))
				{
					this.OnPriceToChanging(value);
					this.SendPropertyChanging();
					this._PriceTo = value;
					this.SendPropertyChanged("PriceTo");
					this.OnPriceToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SquareFrom", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> SquareFrom
		{
			get
			{
				return this._SquareFrom;
			}
			set
			{
				if ((this._SquareFrom != value))
				{
					this.OnSquareFromChanging(value);
					this.SendPropertyChanging();
					this._SquareFrom = value;
					this.SendPropertyChanged("SquareFrom");
					this.OnSquareFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SquareTo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> SquareTo
		{
			get
			{
				return this._SquareTo;
			}
			set
			{
				if ((this._SquareTo != value))
				{
					this.OnSquareToChanging(value);
					this.SendPropertyChanging();
					this._SquareTo = value;
					this.SendPropertyChanged("SquareTo");
					this.OnSquareToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWoterAlways", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsWoterAlways
		{
			get
			{
				return this._IsWoterAlways;
			}
			set
			{
				if ((this._IsWoterAlways != value))
				{
					this.OnIsWoterAlwaysChanging(value);
					this.SendPropertyChanging();
					this._IsWoterAlways = value;
					this.SendPropertyChanged("IsWoterAlways");
					this.OnIsWoterAlwaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGas", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> IsHasGas
		{
			get
			{
				return this._IsHasGas;
			}
			set
			{
				if ((this._IsHasGas != value))
				{
					this.OnIsHasGasChanging(value);
					this.SendPropertyChanging();
					this._IsHasGas = value;
					this.SendPropertyChanged("IsHasGas");
					this.OnIsHasGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerName", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string SellerName
		{
			get
			{
				return this._SellerName;
			}
			set
			{
				if ((this._SellerName != value))
				{
					this.OnSellerNameChanging(value);
					this.SendPropertyChanging();
					this._SellerName = value;
					this.SendPropertyChanged("SellerName");
					this.OnSellerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone1", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Telephone1
		{
			get
			{
				return this._Telephone1;
			}
			set
			{
				if ((this._Telephone1 != value))
				{
					this.OnTelephone1Changing(value);
					this.SendPropertyChanging();
					this._Telephone1 = value;
					this.SendPropertyChanged("Telephone1");
					this.OnTelephone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone2", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string Telephone2
		{
			get
			{
				return this._Telephone2;
			}
			set
			{
				if ((this._Telephone2 != value))
				{
					this.OnTelephone2Changing(value);
					this.SendPropertyChanging();
					this._Telephone2 = value;
					this.SendPropertyChanged("Telephone2");
					this.OnTelephone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalDetails", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string AdditionalDetails
		{
			get
			{
				return this._AdditionalDetails;
			}
			set
			{
				if ((this._AdditionalDetails != value))
				{
					this.OnAdditionalDetailsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalDetails = value;
					this.SendPropertyChanged("AdditionalDetails");
					this.OnAdditionalDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceFromInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<long> PriceFromInAMD
		{
			get
			{
				return this._PriceFromInAMD;
			}
			set
			{
				if ((this._PriceFromInAMD != value))
				{
					this.OnPriceFromInAMDChanging(value);
					this.SendPropertyChanging();
					this._PriceFromInAMD = value;
					this.SendPropertyChanged("PriceFromInAMD");
					this.OnPriceFromInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceToInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<long> PriceToInAMD
		{
			get
			{
				return this._PriceToInAMD;
			}
			set
			{
				if ((this._PriceToInAMD != value))
				{
					this.OnPriceToInAMDChanging(value);
					this.SendPropertyChanging();
					this._PriceToInAMD = value;
					this.SendPropertyChanged("PriceToInAMD");
					this.OnPriceToInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeedForRent", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> IsNeedForRent
		{
			get
			{
				return this._IsNeedForRent;
			}
			set
			{
				if ((this._IsNeedForRent != value))
				{
					this.OnIsNeedForRentChanging(value);
					this.SendPropertyChanging();
					this._IsNeedForRent = value;
					this.SendPropertyChanged("IsNeedForRent");
					this.OnIsNeedForRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasGarage", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> IsHasGarage
		{
			get
			{
				return this._IsHasGarage;
			}
			set
			{
				if ((this._IsHasGarage != value))
				{
					this.OnIsHasGarageChanging(value);
					this.SendPropertyChanging();
					this._IsHasGarage = value;
					this.SendPropertyChanged("IsHasGarage");
					this.OnIsHasGarageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInNewBuilding", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<bool> IsInNewBuilding
		{
			get
			{
				return this._IsInNewBuilding;
			}
			set
			{
				if ((this._IsInNewBuilding != value))
				{
					this.OnIsInNewBuildingChanging(value);
					this.SendPropertyChanging();
					this._IsInNewBuilding = value;
					this.SendPropertyChanged("IsInNewBuilding");
					this.OnIsInNewBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExchangePossible", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<bool> IsExchangePossible
		{
			get
			{
				return this._IsExchangePossible;
			}
			set
			{
				if ((this._IsExchangePossible != value))
				{
					this.OnIsExchangePossibleChanging(value);
					this.SendPropertyChanging();
					this._IsExchangePossible = value;
					this.SendPropertyChanged("IsExchangePossible");
					this.OnIsExchangePossibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasFurniture", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<bool> IsHasFurniture
		{
			get
			{
				return this._IsHasFurniture;
			}
			set
			{
				if ((this._IsHasFurniture != value))
				{
					this.OnIsHasFurnitureChanging(value);
					this.SendPropertyChanging();
					this._IsHasFurniture = value;
					this.SendPropertyChanged("IsHasFurniture");
					this.OnIsHasFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmpty", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<bool> IsEmpty
		{
			get
			{
				return this._IsEmpty;
			}
			set
			{
				if ((this._IsEmpty != value))
				{
					this.OnIsEmptyChanging(value);
					this.SendPropertyChanging();
					this._IsEmpty = value;
					this.SendPropertyChanged("IsEmpty");
					this.OnIsEmptyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasPodval", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<bool> IsHasPodval
		{
			get
			{
				return this._IsHasPodval;
			}
			set
			{
				if ((this._IsHasPodval != value))
				{
					this.OnIsHasPodvalChanging(value);
					this.SendPropertyChanging();
					this._IsHasPodval = value;
					this.SendPropertyChanged("IsHasPodval");
					this.OnIsHasPodvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInNullableFloor", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<bool> IsInNullableFloor
		{
			get
			{
				return this._IsInNullableFloor;
			}
			set
			{
				if ((this._IsInNullableFloor != value))
				{
					this.OnIsInNullableFloorChanging(value);
					this.SendPropertyChanging();
					this._IsInNullableFloor = value;
					this.SendPropertyChanged("IsInNullableFloor");
					this.OnIsInNullableFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInFirstLine", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<bool> IsInFirstLine
		{
			get
			{
				return this._IsInFirstLine;
			}
			set
			{
				if ((this._IsInFirstLine != value))
				{
					this.OnIsInFirstLineChanging(value);
					this.SendPropertyChanging();
					this._IsInFirstLine = value;
					this.SendPropertyChanged("IsInFirstLine");
					this.OnIsInFirstLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHasThreePhaseElectricity", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<bool> IsHasThreePhaseElectricity
		{
			get
			{
				return this._IsHasThreePhaseElectricity;
			}
			set
			{
				if ((this._IsHasThreePhaseElectricity != value))
				{
					this.OnIsHasThreePhaseElectricityChanging(value);
					this.SendPropertyChanging();
					this._IsHasThreePhaseElectricity = value;
					this.SendPropertyChanged("IsHasThreePhaseElectricity");
					this.OnIsHasThreePhaseElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_ClientSuggestedEstate", Storage="_ClientSuggestedEstates", ThisKey="ID", OtherKey="ClientID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<ClientSuggestedEstate> ClientSuggestedEstates
		{
			get
			{
				if ((this.serializing 
							&& (this._ClientSuggestedEstates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ClientSuggestedEstates;
			}
			set
			{
				this._ClientSuggestedEstates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_EstatesAndDemand", Storage="_EstatesAndDemands", ThisKey="ID", OtherKey="DemandID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<EstatesAndDemand> EstatesAndDemands
		{
			get
			{
				if ((this.serializing 
							&& (this._EstatesAndDemands.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EstatesAndDemands;
			}
			set
			{
				this._EstatesAndDemands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_FavoriteClient", Storage="_FavoriteClients", ThisKey="ID", OtherKey="ClientID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<FavoriteClient> FavoriteClients
		{
			get
			{
				if ((this.serializing 
							&& (this._FavoriteClients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FavoriteClients;
			}
			set
			{
				this._FavoriteClients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededBuildingType", Storage="_NeededBuildingTypes", ThisKey="ID", OtherKey="DemandID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<NeededBuildingType> NeededBuildingTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededBuildingTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededBuildingTypes;
			}
			set
			{
				this._NeededBuildingTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededEstateType", Storage="_NeededEstateTypes", ThisKey="ID", OtherKey="NeededEstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40, EmitDefaultValue=false)]
		public EntitySet<NeededEstateType> NeededEstateTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededEstateTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededEstateTypes;
			}
			set
			{
				this._NeededEstateTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededProject", Storage="_NeededProjects", ThisKey="ID", OtherKey="DemandID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41, EmitDefaultValue=false)]
		public EntitySet<NeededProject> NeededProjects
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededProjects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededProjects;
			}
			set
			{
				this._NeededProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededRegion", Storage="_NeededRegions", ThisKey="ID", OtherKey="NeededEstateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42, EmitDefaultValue=false)]
		public EntitySet<NeededRegion> NeededRegions
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededRegions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededRegions;
			}
			set
			{
				this._NeededRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededRemont", Storage="_NeededRemonts", ThisKey="ID", OtherKey="DemandID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43, EmitDefaultValue=false)]
		public EntitySet<NeededRemont> NeededRemonts
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededRemonts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededRemonts;
			}
			set
			{
				this._NeededRemonts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_NeededEstate", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.NeededEstates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.NeededEstates.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_NeededEstate", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.NeededEstates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.NeededEstates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_ClientSuggestedEstates(ClientSuggestedEstate entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_EstatesAndDemands(EstatesAndDemand entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_FavoriteClients(FavoriteClient entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_FavoriteClients(FavoriteClient entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_NeededBuildingTypes(NeededBuildingType entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_NeededBuildingTypes(NeededBuildingType entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_NeededEstateTypes(NeededEstateType entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_NeededEstateTypes(NeededEstateType entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_NeededProjects(NeededProject entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_NeededProjects(NeededProject entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_NeededRegions(NeededRegion entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_NeededRegions(NeededRegion entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void attach_NeededRemonts(NeededRemont entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = this;
		}
		
		private void detach_NeededRemonts(NeededRemont entity)
		{
			this.SendPropertyChanging();
			entity.NeededEstate = null;
		}
		
		private void Initialize()
		{
			this._ClientSuggestedEstates = new EntitySet<ClientSuggestedEstate>(new Action<ClientSuggestedEstate>(this.attach_ClientSuggestedEstates), new Action<ClientSuggestedEstate>(this.detach_ClientSuggestedEstates));
			this._EstatesAndDemands = new EntitySet<EstatesAndDemand>(new Action<EstatesAndDemand>(this.attach_EstatesAndDemands), new Action<EstatesAndDemand>(this.detach_EstatesAndDemands));
			this._FavoriteClients = new EntitySet<FavoriteClient>(new Action<FavoriteClient>(this.attach_FavoriteClients), new Action<FavoriteClient>(this.detach_FavoriteClients));
			this._NeededBuildingTypes = new EntitySet<NeededBuildingType>(new Action<NeededBuildingType>(this.attach_NeededBuildingTypes), new Action<NeededBuildingType>(this.detach_NeededBuildingTypes));
			this._NeededEstateTypes = new EntitySet<NeededEstateType>(new Action<NeededEstateType>(this.attach_NeededEstateTypes), new Action<NeededEstateType>(this.detach_NeededEstateTypes));
			this._NeededProjects = new EntitySet<NeededProject>(new Action<NeededProject>(this.attach_NeededProjects), new Action<NeededProject>(this.detach_NeededProjects));
			this._NeededRegions = new EntitySet<NeededRegion>(new Action<NeededRegion>(this.attach_NeededRegions), new Action<NeededRegion>(this.detach_NeededRegions));
			this._NeededRemonts = new EntitySet<NeededRemont>(new Action<NeededRemont>(this.attach_NeededRemonts), new Action<NeededRemont>(this.detach_NeededRemonts));
			this._Currency = default(EntityRef<Currency>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededEstateTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededEstateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NeededEstateID;
		
		private int _EstateTypeID;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<int> _EstateTypeOriginalID;
		
		private EntityRef<EstateType> _EstateType;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNeededEstateIDChanging(int value);
    partial void OnNeededEstateIDChanged();
    partial void OnEstateTypeIDChanging(int value);
    partial void OnEstateTypeIDChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnEstateTypeOriginalIDChanging(System.Nullable<int> value);
    partial void OnEstateTypeOriginalIDChanged();
    #endregion
		
		public NeededEstateType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededEstateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NeededEstateID
		{
			get
			{
				return this._NeededEstateID;
			}
			set
			{
				if ((this._NeededEstateID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNeededEstateIDChanging(value);
					this.SendPropertyChanging();
					this._NeededEstateID = value;
					this.SendPropertyChanged("NeededEstateID");
					this.OnNeededEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateTypeID
		{
			get
			{
				return this._EstateTypeID;
			}
			set
			{
				if ((this._EstateTypeID != value))
				{
					if (this._EstateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeID = value;
					this.SendPropertyChanged("EstateTypeID");
					this.OnEstateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> EstateTypeOriginalID
		{
			get
			{
				return this._EstateTypeOriginalID;
			}
			set
			{
				if ((this._EstateTypeOriginalID != value))
				{
					this.OnEstateTypeOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeOriginalID = value;
					this.SendPropertyChanged("EstateTypeOriginalID");
					this.OnEstateTypeOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_NeededEstateType", Storage="_EstateType", ThisKey="EstateTypeID", OtherKey="EstateTypeID", IsForeignKey=true)]
		public EstateType EstateType
		{
			get
			{
				return this._EstateType.Entity;
			}
			set
			{
				EstateType previousValue = this._EstateType.Entity;
				if (((previousValue != value) 
							|| (this._EstateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateType.Entity = null;
						previousValue.NeededEstateTypes.Remove(this);
					}
					this._EstateType.Entity = value;
					if ((value != null))
					{
						value.NeededEstateTypes.Add(this);
						this._EstateTypeID = value.EstateTypeID;
					}
					else
					{
						this._EstateTypeID = default(int);
					}
					this.SendPropertyChanged("EstateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededEstateType", Storage="_NeededEstate", ThisKey="NeededEstateID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.NeededEstateTypes.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.NeededEstateTypes.Add(this);
						this._NeededEstateID = value.ID;
					}
					else
					{
						this._NeededEstateID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._EstateType = default(EntityRef<EstateType>);
			this._NeededEstate = default(EntityRef<NeededEstate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededProjects")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DemandID;
		
		private int _ProjectID;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<int> _ProjectOriginalID;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDemandIDChanging(int value);
    partial void OnDemandIDChanged();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnProjectOriginalIDChanging(System.Nullable<int> value);
    partial void OnProjectOriginalIDChanged();
    #endregion
		
		public NeededProject()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DemandID
		{
			get
			{
				return this._DemandID;
			}
			set
			{
				if ((this._DemandID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIDChanging(value);
					this.SendPropertyChanging();
					this._DemandID = value;
					this.SendPropertyChanged("DemandID");
					this.OnDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> ProjectOriginalID
		{
			get
			{
				return this._ProjectOriginalID;
			}
			set
			{
				if ((this._ProjectOriginalID != value))
				{
					this.OnProjectOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectOriginalID = value;
					this.SendPropertyChanged("ProjectOriginalID");
					this.OnProjectOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededProject", Storage="_NeededEstate", ThisKey="DemandID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.NeededProjects.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.NeededProjects.Add(this);
						this._DemandID = value.ID;
					}
					else
					{
						this._DemandID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_NeededProject", Storage="_Project", ThisKey="ProjectID", OtherKey="ProjectID", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.NeededProjects.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.NeededProjects.Add(this);
						this._ProjectID = value.ProjectID;
					}
					else
					{
						this._ProjectID = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NeededEstate = default(EntityRef<NeededEstate>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededRegions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NeededEstateID;
		
		private int _RegionID;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<int> _RegionOriginalID;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNeededEstateIDChanging(int value);
    partial void OnNeededEstateIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnRegionOriginalIDChanging(System.Nullable<int> value);
    partial void OnRegionOriginalIDChanged();
    #endregion
		
		public NeededRegion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededEstateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NeededEstateID
		{
			get
			{
				return this._NeededEstateID;
			}
			set
			{
				if ((this._NeededEstateID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNeededEstateIDChanging(value);
					this.SendPropertyChanging();
					this._NeededEstateID = value;
					this.SendPropertyChanged("NeededEstateID");
					this.OnNeededEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RegionOriginalID
		{
			get
			{
				return this._RegionOriginalID;
			}
			set
			{
				if ((this._RegionOriginalID != value))
				{
					this.OnRegionOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._RegionOriginalID = value;
					this.SendPropertyChanged("RegionOriginalID");
					this.OnRegionOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededRegion", Storage="_NeededEstate", ThisKey="NeededEstateID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.NeededRegions.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.NeededRegions.Add(this);
						this._NeededEstateID = value.ID;
					}
					else
					{
						this._NeededEstateID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_NeededRegion", Storage="_Region", ThisKey="RegionID", OtherKey="RegionID", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.NeededRegions.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.NeededRegions.Add(this);
						this._RegionID = value.RegionID;
					}
					else
					{
						this._RegionID = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NeededEstate = default(EntityRef<NeededEstate>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NeededRemonts")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NeededRemont : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DemandID;
		
		private int _NeededRemontID;
		
		private System.Nullable<int> _DemandOriginalID;
		
		private System.Nullable<int> _RemontOriginalID;
		
		private EntityRef<NeededEstate> _NeededEstate;
		
		private EntityRef<Remont> _Remont;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDemandIDChanging(int value);
    partial void OnDemandIDChanged();
    partial void OnNeededRemontIDChanging(int value);
    partial void OnNeededRemontIDChanged();
    partial void OnDemandOriginalIDChanging(System.Nullable<int> value);
    partial void OnDemandOriginalIDChanged();
    partial void OnRemontOriginalIDChanging(System.Nullable<int> value);
    partial void OnRemontOriginalIDChanged();
    #endregion
		
		public NeededRemont()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DemandID
		{
			get
			{
				return this._DemandID;
			}
			set
			{
				if ((this._DemandID != value))
				{
					if (this._NeededEstate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIDChanging(value);
					this.SendPropertyChanging();
					this._DemandID = value;
					this.SendPropertyChanged("DemandID");
					this.OnDemandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededRemontID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int NeededRemontID
		{
			get
			{
				return this._NeededRemontID;
			}
			set
			{
				if ((this._NeededRemontID != value))
				{
					if (this._Remont.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNeededRemontIDChanging(value);
					this.SendPropertyChanging();
					this._NeededRemontID = value;
					this.SendPropertyChanged("NeededRemontID");
					this.OnNeededRemontIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DemandOriginalID
		{
			get
			{
				return this._DemandOriginalID;
			}
			set
			{
				if ((this._DemandOriginalID != value))
				{
					this.OnDemandOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._DemandOriginalID = value;
					this.SendPropertyChanged("DemandOriginalID");
					this.OnDemandOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemontOriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RemontOriginalID
		{
			get
			{
				return this._RemontOriginalID;
			}
			set
			{
				if ((this._RemontOriginalID != value))
				{
					this.OnRemontOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._RemontOriginalID = value;
					this.SendPropertyChanged("RemontOriginalID");
					this.OnRemontOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NeededEstate_NeededRemont", Storage="_NeededEstate", ThisKey="DemandID", OtherKey="ID", IsForeignKey=true)]
		public NeededEstate NeededEstate
		{
			get
			{
				return this._NeededEstate.Entity;
			}
			set
			{
				NeededEstate previousValue = this._NeededEstate.Entity;
				if (((previousValue != value) 
							|| (this._NeededEstate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NeededEstate.Entity = null;
						previousValue.NeededRemonts.Remove(this);
					}
					this._NeededEstate.Entity = value;
					if ((value != null))
					{
						value.NeededRemonts.Add(this);
						this._DemandID = value.ID;
					}
					else
					{
						this._DemandID = default(int);
					}
					this.SendPropertyChanged("NeededEstate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Remont_NeededRemont", Storage="_Remont", ThisKey="NeededRemontID", OtherKey="RemontID", IsForeignKey=true)]
		public Remont Remont
		{
			get
			{
				return this._Remont.Entity;
			}
			set
			{
				Remont previousValue = this._Remont.Entity;
				if (((previousValue != value) 
							|| (this._Remont.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Remont.Entity = null;
						previousValue.NeededRemonts.Remove(this);
					}
					this._Remont.Entity = value;
					if ((value != null))
					{
						value.NeededRemonts.Add(this);
						this._NeededRemontID = value.RemontID;
					}
					else
					{
						this._NeededRemontID = default(int);
					}
					this.SendPropertyChanged("Remont");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._NeededEstate = default(EntityRef<NeededEstate>);
			this._Remont = default(EntityRef<Remont>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OldPrices")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OldPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EstateID;
		
		private System.DateTime _ChangeDate;
		
		private long _OldPrice1;
		
		private int _CurrencyID;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Estate> _Estate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    partial void OnOldPrice1Changing(long value);
    partial void OnOldPrice1Changed();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public OldPrice()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OldPrice", Storage="_OldPrice1", DbType="BigInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public long OldPrice1
		{
			get
			{
				return this._OldPrice1;
			}
			set
			{
				if ((this._OldPrice1 != value))
				{
					this.OnOldPrice1Changing(value);
					this.SendPropertyChanging();
					this._OldPrice1 = value;
					this.SendPropertyChanged("OldPrice1");
					this.OnOldPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_OldPrice", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.OldPrices.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.OldPrices.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(int);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_OldPrice", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.OldPrices.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.OldPrices.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Estate = default(EntityRef<Estate>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperationalSignificances")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OperationalSignificance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private int _SignificanceOfTheUseID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntityRef<SignificanceOfTheUse> _SignificanceOfTheUse;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnSignificanceOfTheUseIDChanging(int value);
    partial void OnSignificanceOfTheUseIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public OperationalSignificance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignificanceOfTheUseID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SignificanceOfTheUseID
		{
			get
			{
				return this._SignificanceOfTheUseID;
			}
			set
			{
				if ((this._SignificanceOfTheUseID != value))
				{
					if (this._SignificanceOfTheUse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSignificanceOfTheUseIDChanging(value);
					this.SendPropertyChanging();
					this._SignificanceOfTheUseID = value;
					this.SendPropertyChanged("SignificanceOfTheUseID");
					this.OnSignificanceOfTheUseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationalSignificance_Estate", Storage="_Estates", ThisKey="ID", OtherKey="OperationalSignificanceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SignificanceOfTheUse_OperationalSignificance", Storage="_SignificanceOfTheUse", ThisKey="SignificanceOfTheUseID", OtherKey="ID", IsForeignKey=true)]
		public SignificanceOfTheUse SignificanceOfTheUse
		{
			get
			{
				return this._SignificanceOfTheUse.Entity;
			}
			set
			{
				SignificanceOfTheUse previousValue = this._SignificanceOfTheUse.Entity;
				if (((previousValue != value) 
							|| (this._SignificanceOfTheUse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SignificanceOfTheUse.Entity = null;
						previousValue.OperationalSignificances.Remove(this);
					}
					this._SignificanceOfTheUse.Entity = value;
					if ((value != null))
					{
						value.OperationalSignificances.Add(this);
						this._SignificanceOfTheUseID = value.ID;
					}
					else
					{
						this._SignificanceOfTheUseID = default(int);
					}
					this.SendPropertyChanged("SignificanceOfTheUse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.OperationalSignificance = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.OperationalSignificance = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._SignificanceOfTheUse = default(EntityRef<SignificanceOfTheUse>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderTypeID;
		
		private string _NameAm;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private EntitySet<BrokerOrderType> _BrokerOrderTypes;
		
		private EntitySet<Estate> _Estates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderTypeIDChanging(int value);
    partial void OnOrderTypeIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    #endregion
		
		public OrderType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OrderTypeID
		{
			get
			{
				return this._OrderTypeID;
			}
			set
			{
				if ((this._OrderTypeID != value))
				{
					this.OnOrderTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeID = value;
					this.SendPropertyChanged("OrderTypeID");
					this.OnOrderTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_BrokerOrderType", Storage="_BrokerOrderTypes", ThisKey="OrderTypeID", OtherKey="OrderTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<BrokerOrderType> BrokerOrderTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerOrderTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerOrderTypes;
			}
			set
			{
				this._BrokerOrderTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderType_Estate", Storage="_Estates", ThisKey="OrderTypeID", OtherKey="OrderTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BrokerOrderTypes(BrokerOrderType entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_BrokerOrderTypes(BrokerOrderType entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.OrderType = null;
		}
		
		private void Initialize()
		{
			this._BrokerOrderTypes = new EntitySet<BrokerOrderType>(new Action<BrokerOrderType>(this.attach_BrokerOrderTypes), new Action<BrokerOrderType>(this.detach_BrokerOrderTypes));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectID;
		
		private string _NameAm;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededProject> _NeededProjects;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIDChanging(int value);
    partial void OnProjectIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Project()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Estate", Storage="_Estates", ThisKey="ProjectID", OtherKey="ProjectID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_NeededProject", Storage="_NeededProjects", ThisKey="ProjectID", OtherKey="ProjectID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<NeededProject> NeededProjects
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededProjects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededProjects;
			}
			set
			{
				this._NeededProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_NeededProjects(NeededProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_NeededProjects(NeededProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededProjects = new EntitySet<NeededProject>(new Action<NeededProject>(this.attach_NeededProjects), new Action<NeededProject>(this.detach_NeededProjects));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RealtorSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RealtorSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RatingFrom;
		
		private int _RatingTo;
		
		private int _DaysBeforeToRentClose;
		
		private bool _AllowBrokersToAddData;
		
		private bool _ShowOpenAddressToBrokers;
		
		private bool _AllowBrokersToPrintEstates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRatingFromChanging(int value);
    partial void OnRatingFromChanged();
    partial void OnRatingToChanging(int value);
    partial void OnRatingToChanged();
    partial void OnDaysBeforeToRentCloseChanging(int value);
    partial void OnDaysBeforeToRentCloseChanged();
    partial void OnAllowBrokersToAddDataChanging(bool value);
    partial void OnAllowBrokersToAddDataChanged();
    partial void OnShowOpenAddressToBrokersChanging(bool value);
    partial void OnShowOpenAddressToBrokersChanged();
    partial void OnAllowBrokersToPrintEstatesChanging(bool value);
    partial void OnAllowBrokersToPrintEstatesChanged();
    #endregion
		
		public RealtorSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingFrom", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RatingFrom
		{
			get
			{
				return this._RatingFrom;
			}
			set
			{
				if ((this._RatingFrom != value))
				{
					this.OnRatingFromChanging(value);
					this.SendPropertyChanging();
					this._RatingFrom = value;
					this.SendPropertyChanged("RatingFrom");
					this.OnRatingFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingTo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int RatingTo
		{
			get
			{
				return this._RatingTo;
			}
			set
			{
				if ((this._RatingTo != value))
				{
					this.OnRatingToChanging(value);
					this.SendPropertyChanging();
					this._RatingTo = value;
					this.SendPropertyChanged("RatingTo");
					this.OnRatingToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysBeforeToRentClose", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int DaysBeforeToRentClose
		{
			get
			{
				return this._DaysBeforeToRentClose;
			}
			set
			{
				if ((this._DaysBeforeToRentClose != value))
				{
					this.OnDaysBeforeToRentCloseChanging(value);
					this.SendPropertyChanging();
					this._DaysBeforeToRentClose = value;
					this.SendPropertyChanged("DaysBeforeToRentClose");
					this.OnDaysBeforeToRentCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBrokersToAddData", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool AllowBrokersToAddData
		{
			get
			{
				return this._AllowBrokersToAddData;
			}
			set
			{
				if ((this._AllowBrokersToAddData != value))
				{
					this.OnAllowBrokersToAddDataChanging(value);
					this.SendPropertyChanging();
					this._AllowBrokersToAddData = value;
					this.SendPropertyChanged("AllowBrokersToAddData");
					this.OnAllowBrokersToAddDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowOpenAddressToBrokers", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool ShowOpenAddressToBrokers
		{
			get
			{
				return this._ShowOpenAddressToBrokers;
			}
			set
			{
				if ((this._ShowOpenAddressToBrokers != value))
				{
					this.OnShowOpenAddressToBrokersChanging(value);
					this.SendPropertyChanging();
					this._ShowOpenAddressToBrokers = value;
					this.SendPropertyChanged("ShowOpenAddressToBrokers");
					this.OnShowOpenAddressToBrokersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBrokersToPrintEstates", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool AllowBrokersToPrintEstates
		{
			get
			{
				return this._AllowBrokersToPrintEstates;
			}
			set
			{
				if ((this._AllowBrokersToPrintEstates != value))
				{
					this.OnAllowBrokersToPrintEstatesChanging(value);
					this.SendPropertyChanging();
					this._AllowBrokersToPrintEstates = value;
					this.SendPropertyChanged("AllowBrokersToPrintEstates");
					this.OnAllowBrokersToPrintEstatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regions")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RegionID;
		
		private string _NameAm;
		
		private int _CityID;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<BrokersRegion> _BrokersRegions;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededRegion> _NeededRegions;
		
		private EntityRef<City> _City;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Region()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_BrokersRegion", Storage="_BrokersRegions", ThisKey="RegionID", OtherKey="RegionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<BrokersRegion> BrokersRegions
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokersRegions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokersRegions;
			}
			set
			{
				this._BrokersRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Estate", Storage="_Estates", ThisKey="RegionID", OtherKey="RegionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_NeededRegion", Storage="_NeededRegions", ThisKey="RegionID", OtherKey="RegionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<NeededRegion> NeededRegions
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededRegions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededRegions;
			}
			set
			{
				this._NeededRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Region", Storage="_City", ThisKey="CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._CityID = value.CityID;
					}
					else
					{
						this._CityID = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BrokersRegions(BrokersRegion entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_BrokersRegions(BrokersRegion entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_NeededRegions(NeededRegion entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_NeededRegions(NeededRegion entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void Initialize()
		{
			this._BrokersRegions = new EntitySet<BrokersRegion>(new Action<BrokersRegion>(this.attach_BrokersRegions), new Action<BrokersRegion>(this.detach_BrokersRegions));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededRegions = new EntitySet<NeededRegion>(new Action<NeededRegion>(this.attach_NeededRegions), new Action<NeededRegion>(this.detach_NeededRegions));
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Remonts")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Remont : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RemontID;
		
		private string _NameAm;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameKz;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<NeededRemont> _NeededRemonts;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRemontIDChanging(int value);
    partial void OnRemontIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Remont()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemontID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RemontID
		{
			get
			{
				return this._RemontID;
			}
			set
			{
				if ((this._RemontID != value))
				{
					this.OnRemontIDChanging(value);
					this.SendPropertyChanging();
					this._RemontID = value;
					this.SendPropertyChanged("RemontID");
					this.OnRemontIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Remont_Estate", Storage="_Estates", ThisKey="RemontID", OtherKey="RemontID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Remont_NeededRemont", Storage="_NeededRemonts", ThisKey="RemontID", OtherKey="NeededRemontID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<NeededRemont> NeededRemonts
		{
			get
			{
				if ((this.serializing 
							&& (this._NeededRemonts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NeededRemonts;
			}
			set
			{
				this._NeededRemonts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Remont = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Remont = null;
		}
		
		private void attach_NeededRemonts(NeededRemont entity)
		{
			this.SendPropertyChanging();
			entity.Remont = this;
		}
		
		private void detach_NeededRemonts(NeededRemont entity)
		{
			this.SendPropertyChanging();
			entity.Remont = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._NeededRemonts = new EntitySet<NeededRemont>(new Action<NeededRemont>(this.attach_NeededRemonts), new Action<NeededRemont>(this.detach_NeededRemonts));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentedEstates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RentedEstate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EstateID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<int> _BrokerID;
		
		private System.Nullable<int> _PricePerDay;
		
		private System.Nullable<long> _PriceInAMD;
		
		private System.Nullable<long> _PricePerDayInAMD;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Estate> _Estate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnPricePerDayChanging(System.Nullable<int> value);
    partial void OnPricePerDayChanged();
    partial void OnPriceInAMDChanging(System.Nullable<long> value);
    partial void OnPriceInAMDChanged();
    partial void OnPricePerDayInAMDChanging(System.Nullable<long> value);
    partial void OnPricePerDayInAMDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public RentedEstate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerDay", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> PricePerDay
		{
			get
			{
				return this._PricePerDay;
			}
			set
			{
				if ((this._PricePerDay != value))
				{
					this.OnPricePerDayChanging(value);
					this.SendPropertyChanging();
					this._PricePerDay = value;
					this.SendPropertyChanged("PricePerDay");
					this.OnPricePerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<long> PriceInAMD
		{
			get
			{
				return this._PriceInAMD;
			}
			set
			{
				if ((this._PriceInAMD != value))
				{
					this.OnPriceInAMDChanging(value);
					this.SendPropertyChanging();
					this._PriceInAMD = value;
					this.SendPropertyChanged("PriceInAMD");
					this.OnPriceInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerDayInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<long> PricePerDayInAMD
		{
			get
			{
				return this._PricePerDayInAMD;
			}
			set
			{
				if ((this._PricePerDayInAMD != value))
				{
					this.OnPricePerDayInAMDChanging(value);
					this.SendPropertyChanging();
					this._PricePerDayInAMD = value;
					this.SendPropertyChanged("PricePerDayInAMD");
					this.OnPricePerDayInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_RentedEstate", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.RentedEstates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.RentedEstates.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_RentedEstate", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.RentedEstates.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.RentedEstates.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RentedEstate", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RentedEstates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RentedEstates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Estate = default(EntityRef<Estate>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roofings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Roofing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Roofing()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roofing_Estate", Storage="_Estates", ThisKey="ID", OtherKey="RoofingID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Roofing = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Roofing = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelledEstates")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SelledEstate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EstateID;
		
		private System.Nullable<long> _Price;
		
		private System.Nullable<System.DateTime> _SellDate;
		
		private System.Nullable<int> _BrokerID;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<long> _PriceInAMD;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Estate> _Estate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstateIDChanging(int value);
    partial void OnEstateIDChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnSellDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSellDateChanged();
    partial void OnBrokerIDChanging(System.Nullable<int> value);
    partial void OnBrokerIDChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnPriceInAMDChanging(System.Nullable<long> value);
    partial void OnPriceInAMDChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public SelledEstate()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int EstateID
		{
			get
			{
				return this._EstateID;
			}
			set
			{
				if ((this._EstateID != value))
				{
					if (this._Estate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateIDChanging(value);
					this.SendPropertyChanging();
					this._EstateID = value;
					this.SendPropertyChanged("EstateID");
					this.OnEstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<long> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> SellDate
		{
			get
			{
				return this._SellDate;
			}
			set
			{
				if ((this._SellDate != value))
				{
					this.OnSellDateChanging(value);
					this.SendPropertyChanging();
					this._SellDate = value;
					this.SendPropertyChanged("SellDate");
					this.OnSellDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrokerIDChanging(value);
					this.SendPropertyChanging();
					this._BrokerID = value;
					this.SendPropertyChanged("BrokerID");
					this.OnBrokerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceInAMD", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<long> PriceInAMD
		{
			get
			{
				return this._PriceInAMD;
			}
			set
			{
				if ((this._PriceInAMD != value))
				{
					this.OnPriceInAMDChanging(value);
					this.SendPropertyChanging();
					this._PriceInAMD = value;
					this.SendPropertyChanged("PriceInAMD");
					this.OnPriceInAMDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_SelledEstate", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.SelledEstates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.SelledEstates.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estate_SelledEstate", Storage="_Estate", ThisKey="EstateID", OtherKey="EstateID", IsForeignKey=true)]
		public Estate Estate
		{
			get
			{
				return this._Estate.Entity;
			}
			set
			{
				Estate previousValue = this._Estate.Entity;
				if (((previousValue != value) 
							|| (this._Estate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estate.Entity = null;
						previousValue.SelledEstates.Remove(this);
					}
					this._Estate.Entity = value;
					if ((value != null))
					{
						value.SelledEstates.Add(this);
						this._EstateID = value.EstateID;
					}
					else
					{
						this._EstateID = default(int);
					}
					this.SendPropertyChanged("Estate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SelledEstate", Storage="_User", ThisKey="BrokerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SelledEstates.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SelledEstates.Add(this);
						this._BrokerID = value.ID;
					}
					else
					{
						this._BrokerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Currency = default(EntityRef<Currency>);
			this._Estate = default(EntityRef<Estate>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SignificanceOfTheUses")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SignificanceOfTheUse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private int _EstateTypeID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private EntitySet<OperationalSignificance> _OperationalSignificances;
		
		private EntityRef<EstateType> _EstateType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnEstateTypeIDChanging(int value);
    partial void OnEstateTypeIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public SignificanceOfTheUse()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateTypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EstateTypeID
		{
			get
			{
				return this._EstateTypeID;
			}
			set
			{
				if ((this._EstateTypeID != value))
				{
					if (this._EstateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EstateTypeID = value;
					this.SendPropertyChanged("EstateTypeID");
					this.OnEstateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(150)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SignificanceOfTheUse_Estate", Storage="_Estates", ThisKey="ID", OtherKey="SignificanceOfTheUseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SignificanceOfTheUse_OperationalSignificance", Storage="_OperationalSignificances", ThisKey="ID", OtherKey="SignificanceOfTheUseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<OperationalSignificance> OperationalSignificances
		{
			get
			{
				if ((this.serializing 
							&& (this._OperationalSignificances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OperationalSignificances;
			}
			set
			{
				this._OperationalSignificances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateType_SignificanceOfTheUse", Storage="_EstateType", ThisKey="EstateTypeID", OtherKey="EstateTypeID", IsForeignKey=true)]
		public EstateType EstateType
		{
			get
			{
				return this._EstateType.Entity;
			}
			set
			{
				EstateType previousValue = this._EstateType.Entity;
				if (((previousValue != value) 
							|| (this._EstateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateType.Entity = null;
						previousValue.SignificanceOfTheUses.Remove(this);
					}
					this._EstateType.Entity = value;
					if ((value != null))
					{
						value.SignificanceOfTheUses.Add(this);
						this._EstateTypeID = value.EstateTypeID;
					}
					else
					{
						this._EstateTypeID = default(int);
					}
					this.SendPropertyChanged("EstateType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.SignificanceOfTheUse = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.SignificanceOfTheUse = null;
		}
		
		private void attach_OperationalSignificances(OperationalSignificance entity)
		{
			this.SendPropertyChanging();
			entity.SignificanceOfTheUse = this;
		}
		
		private void detach_OperationalSignificances(OperationalSignificance entity)
		{
			this.SendPropertyChanging();
			entity.SignificanceOfTheUse = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			this._OperationalSignificances = new EntitySet<OperationalSignificance>(new Action<OperationalSignificance>(this.attach_OperationalSignificances), new Action<OperationalSignificance>(this.detach_OperationalSignificances));
			this._EstateType = default(EntityRef<EstateType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NameAm;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameEn;
		
		private string _NameRu;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<BrokerState> _BrokerStates;
		
		private EntitySet<City> _Cities;
		
		private EntitySet<Estate> _Estates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public State()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_BrokerState", Storage="_BrokerStates", ThisKey="ID", OtherKey="StateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<BrokerState> BrokerStates
		{
			get
			{
				if ((this.serializing 
							&& (this._BrokerStates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BrokerStates;
			}
			set
			{
				this._BrokerStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_City", Storage="_Cities", ThisKey="ID", OtherKey="StateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<City> Cities
		{
			get
			{
				if ((this.serializing 
							&& (this._Cities.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Estate", Storage="_Estates", ThisKey="ID", OtherKey="StateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BrokerStates(BrokerState entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_BrokerStates(BrokerState entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void Initialize()
		{
			this._BrokerStates = new EntitySet<BrokerState>(new Action<BrokerState>(this.attach_BrokerStates), new Action<BrokerState>(this.detach_BrokerStates));
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Streets")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Street : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StreetID;
		
		private string _NameAm;
		
		private System.Nullable<int> _RegionID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _NameRu;
		
		private string _NameEn;
		
		private string _NameCz;
		
		private string _NameKz;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private System.Nullable<int> _OriginalID;
		
		private EntitySet<Estate> _Estates;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStreetIDChanging(int value);
    partial void OnStreetIDChanged();
    partial void OnNameAmChanging(string value);
    partial void OnNameAmChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnNameRuChanging(string value);
    partial void OnNameRuChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnNameCzChanging(string value);
    partial void OnNameCzChanged();
    partial void OnNameKzChanging(string value);
    partial void OnNameKzChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    partial void OnOriginalIDChanging(System.Nullable<int> value);
    partial void OnOriginalIDChanged();
    #endregion
		
		public Street()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StreetID
		{
			get
			{
				return this._StreetID;
			}
			set
			{
				if ((this._StreetID != value))
				{
					this.OnStreetIDChanging(value);
					this.SendPropertyChanging();
					this._StreetID = value;
					this.SendPropertyChanged("StreetID");
					this.OnStreetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAm", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NameAm
		{
			get
			{
				return this._NameAm;
			}
			set
			{
				if ((this._NameAm != value))
				{
					this.OnNameAmChanging(value);
					this.SendPropertyChanging();
					this._NameAm = value;
					this.SendPropertyChanged("NameAm");
					this.OnNameAmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameRu", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NameRu
		{
			get
			{
				return this._NameRu;
			}
			set
			{
				if ((this._NameRu != value))
				{
					this.OnNameRuChanging(value);
					this.SendPropertyChanging();
					this._NameRu = value;
					this.SendPropertyChanged("NameRu");
					this.OnNameRuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameCz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string NameCz
		{
			get
			{
				return this._NameCz;
			}
			set
			{
				if ((this._NameCz != value))
				{
					this.OnNameCzChanging(value);
					this.SendPropertyChanging();
					this._NameCz = value;
					this.SendPropertyChanged("NameCz");
					this.OnNameCzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameKz", DbType="NVarChar(255)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string NameKz
		{
			get
			{
				return this._NameKz;
			}
			set
			{
				if ((this._NameKz != value))
				{
					this.OnNameKzChanging(value);
					this.SendPropertyChanging();
					this._NameKz = value;
					this.SendPropertyChanged("NameKz");
					this.OnNameKzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> OriginalID
		{
			get
			{
				return this._OriginalID;
			}
			set
			{
				if ((this._OriginalID != value))
				{
					this.OnOriginalIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalID = value;
					this.SendPropertyChanged("OriginalID");
					this.OnOriginalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Estate", Storage="_Estates", ThisKey="StreetID", OtherKey="StreetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Estate> Estates
		{
			get
			{
				if ((this.serializing 
							&& (this._Estates.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Estates;
			}
			set
			{
				this._Estates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Street = this;
		}
		
		private void detach_Estates(Estate entity)
		{
			this.SendPropertyChanging();
			entity.Street = null;
		}
		
		private void Initialize()
		{
			this._Estates = new EntitySet<Estate>(new Action<Estate>(this.attach_Estates), new Action<Estate>(this.detach_Estates));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDisplayColumns")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserDisplayColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _ColumnID;
		
		private string _ColumnName;
		
		private bool _Show;
		
		private int _OrderIndex;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnColumnIDChanging(int value);
    partial void OnColumnIDChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnOrderIndexChanging(int value);
    partial void OnOrderIndexChanged();
    #endregion
		
		public UserDisplayColumn()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIndex", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int OrderIndex
		{
			get
			{
				return this._OrderIndex;
			}
			set
			{
				if ((this._OrderIndex != value))
				{
					this.OnOrderIndexChanging(value);
					this.SendPropertyChanging();
					this._OrderIndex = value;
					this.SendPropertyChanged("OrderIndex");
					this.OnOrderIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserDisplayColumn", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserDisplayColumns.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserDisplayColumns.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
