<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit" 
    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives;assembly=WPFToolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:ValidPanel="clr-namespace:CustomControls.ValidPanel;assembly=CustomControls"
    xmlns:Converters="clr-namespace:Shared.Converters;assembly=Shared" >

	<Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
	<Converters:ErrorsArrayToErrorString x:Key="ErrorsArrayToErrorString"/>

	<DataTemplate DataType="{x:Type ValidationError}">
		<TextBlock FontStyle="Italic" Foreground="Red" HorizontalAlignment="Right" Margin="0,1" Text="{Binding Path=ErrorContent}" />
	</DataTemplate>

	<Style TargetType="{x:Type ValidPanel:ValidBorder}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Red" />
		<Setter Property="CornerRadius" Value="2" />
	</Style>

	<LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFA3AEB9" Offset="0"/>
		<GradientStop Color="#FF8399A9" Offset="0.375"/>
		<GradientStop Color="#FF718597" Offset="0.375"/>
		<GradientStop Color="#FF617584" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#CCC" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="GroupBoxBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="Transparent" Offset="0.0"/>
				<GradientStop Color="AliceBlue"  Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#FFF" Offset="0.0"/>
				<GradientStop Color="#AAA" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#BBB" Offset="0.0"/>
				<GradientStop Color="#EEE" Offset="0.1"/>
				<GradientStop Color="#EEE" Offset="0.9"/>
				<GradientStop Color="#FFF" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

	<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

	<!-- Border Brushes -->

	<LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#CCC" Offset="0.0"/>
				<GradientStop Color="#444" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#CCC" Offset="0.0"/>
				<GradientStop Color="#444" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#777" Offset="0.0"/>
				<GradientStop Color="#000" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="#444" Offset="0.0"/>
				<GradientStop Color="#888" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

	<SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

	<!-- Miscellaneous Brushes -->
	<SolidColorBrush x:Key="GlyphBrush" Color="#444" />

	<SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

	<ControlTemplate x:Key="ValidBorderErrorTemplate">
		<ValidPanel:ValidBorder
                Visibility="{Binding ElementName=adorner, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
			<AdornedElementPlaceholder x:Name="adorner" />
		</ValidPanel:ValidBorder>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" Background="{StaticResource NormalBrush}"
                    BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1" />
			<Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1"
                    Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource NormalBorderBrush}"
                    BorderThickness="0,0,1,0" />
			<Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource GlyphBrush}" HorizontalAlignment="Center"
                    VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
				<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
				<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
		<ScrollViewer Focusable="False" Width="{TemplateBinding Width}"
                Background="{TemplateBinding Background}">
			<Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}" />
		</ScrollViewer>
	</ControlTemplate>

	<!--Combo Box-->
	<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="MinWidth" Value="120"/>
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="IsReadOnly" Value="False" />
		<Setter Property="IsEditable" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2" Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
						</ToggleButton>
						<ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3"
                                Width="{TemplateBinding Width}" VerticalAlignment="Center" HorizontalAlignment="Left" />
						<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left"
                                VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent"
                                Visibility="Hidden" Width="{TemplateBinding Width}"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
						<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" Focusable="False" MaxWidth="500" PopupAnimation="Slide">
							<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border x:Name="DropDownBorder" Background="{StaticResource WindowBackgroundBrush}"
                                        BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}" />
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
							<Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidBorderErrorTemplate}" />
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={StaticResource ErrorsArrayToErrorString}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="ComboBoxItem">
		<Setter Property="Foreground" Value="Black" />
	</Style>



	<!--Button-->
	<Style TargetType="Button">
		<Setter Property="Background" Value="#FF1F3B53"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="Padding" Value="5,0,5,0"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#D8FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#8CFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#3FFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
							<Grid Margin="1" Background="{TemplateBinding Background}">
								<Border x:Name="BackgroundAnimation" Opacity="0" Background="#FF448DCA"/>
								<Rectangle x:Name="BackgroundGradient">
									<Rectangle.Fill>
										<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
											<GradientStop Color="#FFFFFFFF" Offset="0"/>
											<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
											<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
											<GradientStop Color="#C6FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
							</Grid>
						</Border>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
						<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" IsHitTestVisible="false" Opacity="0"/>
						<Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="1" IsHitTestVisible="false" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25"/>
			</Grid.RenderTransform>
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="OpenStates">
					<vsm:VisualStateGroup.Transitions>
						<vsm:VisualTransition GeneratedDuration="0"/>
						<vsm:VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</vsm:VisualTransition>
					</vsm:VisualStateGroup.Transitions>
					<vsm:VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
					<vsm:VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
				</vsm:VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
			<Border Margin="4,4,-4,-4" Background="#152A2E31" CornerRadius="4"/>
			<Border Margin="3,3,-3,-3" Background="#252A2E31" CornerRadius="4"/>
			<Border Margin="2,2,-2,-2" Background="#352A2E31" CornerRadius="4"/>
			<Border Margin="1,1,-1,-1" Background="#452A2E31" CornerRadius="4"/>
			<Border Background="#FFDC000C" CornerRadius="4"/>
			<Border CornerRadius="4">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#66FFFFFF"/>
						<GradientStop Color="#66000000" Offset="1"/>
						<GradientStop Color="#00E5E5E5" Offset="0.1"/>
						<GradientStop Color="#00161616" Offset="0.9"/>
					</LinearGradientBrush>
				</Border.Background>
				<TextBlock Margin="8,3,8,4" MaxWidth="250" Foreground="White" Text="{Binding Path=(Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap"/>
			</Border>
		</Grid>
	</ControlTemplate>

	<!--Check Box-->
	<Style TargetType="CheckBox">
		<Setter Property="Background" Value="#FF448DCA"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
								<vsm:VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ValidationStates">
								<vsm:VisualState x:Name="Valid"/>
								<vsm:VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Rectangle x:Name="Background" Fill="#FFFFFFFF" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1" Height="14" Margin="1" Width="14"/>
							<Rectangle x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="14" Margin="1" Width="14" Opacity="0"/>
							<Rectangle x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10"/>
							<Rectangle x:Name="BoxMiddle" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
										<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
										<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
										<GradientStop Color="#EAFFFFFF" Offset="0.603"/>
										<GradientStop Color="#D8FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
								<Rectangle.Stroke>
									<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
										<GradientStop Color="#FFFFFFFF" Offset="1"/>
										<GradientStop Color="#FFFFFFFF" Offset="0"/>
										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
									</LinearGradientBrush>
								</Rectangle.Stroke>
							</Rectangle>
							<Rectangle x:Name="BoxMiddleLine" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Height="10" Width="10" Opacity=".2"/>
							<Path x:Name="CheckIcon" Fill="#FF333333" Stretch="Fill" Height="10" Margin="1,1,0,1.5" Width="10.5" Opacity="0" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"/>
							<Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Width="6" Opacity="0"/>
							<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="1" RadiusY="1" Height="14" Width="14" Opacity="0"/>
							<Rectangle x:Name="ContentFocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" Height="16" Width="16" IsHitTestVisible="false" Opacity="0"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--GridSplitter-->
	<Style TargetType="GridSplitter">
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="IsTabStop" Value="true"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="PreviewStyle">
			<Setter.Value>
				<Style TargetType="Control">
					<Setter Property="Background" Value="#FF868686"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="Control">
								<Grid x:Name="Root" Opacity=".5">
									<Rectangle Fill="{TemplateBinding Background}"/>
									<Grid x:Name="HorizontalTemplate" Height="6"/>
									<Grid x:Name="VerticalTemplate" Width="6" Visibility="Collapsed"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridSplitter">
					<Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Unfocused"/>
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0"/>
						<Grid x:Name="HorizontalTemplate" Height="10">
							<StackPanel Height="6" VerticalAlignment="Center">
								<Rectangle Fill="#FF868686" StrokeThickness="0" Height="1" Margin="1" Width="10"/>
								<Rectangle Fill="#FF868686" StrokeThickness="0" Height="1" Margin="1" Width="10"/>
							</StackPanel>
						</Grid>
						<Grid x:Name="VerticalTemplate" Width="10" Visibility="Collapsed">
							<StackPanel VerticalAlignment="Center" Width="6" Orientation="Horizontal">
								<Rectangle Fill="#FF868686" StrokeThickness="0" Height="10" Margin="1" Width="1"/>
								<Rectangle Fill="#FF868686" StrokeThickness="0" Height="10" Margin="1" Width="1"/>
							</StackPanel>
						</Grid>
						<Rectangle x:Name="FocusVisual" Stroke="#FF6DBDD1" StrokeThickness="1" IsHitTestVisible="false" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--List Box-->
	<Style TargetType="ListBox">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="ValidationStates">
								<vsm:VisualState x:Name="Valid"/>
								<vsm:VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<ScrollViewer x:Name="ScrollViewer" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" Padding="{TemplateBinding Padding}">
								<!--<VirtualizingStackPanel VirtualizationMode="Standard" IsItemsHost="True" />-->
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10" Background="Transparent">
								<Path Fill="#FFDC000C" Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"/>
								<Path Fill="#ffffff" Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--Radio Button-->
	<Style TargetType="RadioButton">
		<Setter Property="Background" Value="#FF448DCA"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ValidationStates">
								<vsm:VisualState x:Name="Valid"/>
								<vsm:VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<Ellipse x:Name="Background" Fill="#FFFFFFFF" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Height="14" Margin="1" Width="14"/>
							<Ellipse x:Name="BackgroundOverlay" Fill="#FFC4DBEE" Stroke="#00000000" StrokeThickness="1" Height="14" Margin="1" Width="14" Opacity="0"/>
							<Ellipse x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1" Height="10" Width="10"/>
							<Ellipse x:Name="BoxMiddle" StrokeThickness="1" Height="10" Width="10">
								<Ellipse.Fill>
									<LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
										<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
										<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
										<GradientStop Color="#EAFFFFFF" Offset="0.603"/>
										<GradientStop Color="#D8FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Fill>
								<Ellipse.Stroke>
									<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
										<GradientStop Color="#FFFFFFFF" Offset="1"/>
										<GradientStop Color="#FFFFFFFF" Offset="0"/>
										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
										<GradientStop Color="#FFFFFFFF" Offset="0.375"/>
									</LinearGradientBrush>
								</Ellipse.Stroke>
							</Ellipse>
							<Ellipse x:Name="BoxMiddleLine" Stroke="#FF333333" StrokeThickness="1" Height="10" Width="10" Opacity=".2"/>
							<Ellipse x:Name="CheckIcon" Fill="#FF333333" Height="4" Width="4" Opacity="0"/>
							<Ellipse x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Width="14" Opacity="0"/>
							<Ellipse x:Name="ContentFocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Height="16" Width="16" IsHitTestVisible="false" Opacity="0"/>
							<Grid x:Name="ValidationErrorElement" Visibility="Collapsed" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
								<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<System:Boolean>true</System:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>
								<Ellipse Stroke="#FFDB000C" StrokeThickness="1" Height="14" Width="14"/>
								<Ellipse Fill="#FFDB000C" Height="4" HorizontalAlignment="Right" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
								<Ellipse Fill="Transparent" Height="10" HorizontalAlignment="Right" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
							</Grid>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Scroll Bar-->
	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
						<Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border 
          CornerRadius="2" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid >
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="18"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="18"/>
			</Grid.RowDefinitions>
			<Border
              Grid.RowSpan="3"
              CornerRadius="2" 
              Background="#F0F0F0" />
			<RepeatButton 
              Grid.Row="0"                           
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineUpCommand"
              Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track 
                  Name="PART_Track"
                  Grid.Row="1"
                  IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb 
                      Style="{StaticResource ScrollBarThumb}" 
                      Margin="1,0,1,0"  
                      Background="{StaticResource HorizontalNormalBrush}"
                      BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton 
              Grid.Row="3" 
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineDownCommand"
              Content="M 0 0 L 4 4 L 8 0 Z"/>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid >
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18"/>
				<ColumnDefinition Width="0.00001*"/>
				<ColumnDefinition MaxWidth="18"/>
			</Grid.ColumnDefinitions>
			<Border
                  Grid.ColumnSpan="3"
                  CornerRadius="2" 
                  Background="#F0F0F0" />
			<RepeatButton 
                  Grid.Column="0"                           
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
			<Track 
                  Name="PART_Track"
                  Grid.Column="1"
                  IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton 
                      Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb 
                      Style="{StaticResource ScrollBarThumb}" 
                      Margin="0,1,0,1"  
                      Background="{StaticResource NormalBrush}"
                      BorderBrush="{StaticResource NormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
		</Grid>
	</ControlTemplate>

	<!--Scroll Bar-->
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="18" />
				<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Slider-->
	<Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Height" Value="14" />
		<Setter Property="Width" Value="14" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Ellipse Name="Ellipse" Fill="{StaticResource NormalBrush}"
                            Stroke="{StaticResource NormalBorderBrush}" StrokeThickness="1" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DarkBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Ellipse" Property="Fill"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TickBar Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Fill="{StaticResource GlyphBrush}"
                    Height="4" Visibility="Collapsed" />
			<Border Name="TrackBackground" Margin="0" CornerRadius="2" Height="4" Grid.Row="1"
                    Background="{StaticResource LightBrush}" BorderBrush="{StaticResource NormalBorderBrush}"
                    BorderThickness="1" />
			<Track Grid.Row="1" Name="PART_Track">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource SliderThumbStyle}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
				</Track.IncreaseRepeatButton>
			</Track>
			<TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="{TemplateBinding Foreground}"
                    Placement="Bottom" Height="4" Visibility="Collapsed" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TickBar Name="TopTick" SnapsToDevicePixels="True" Placement="Left" Fill="{StaticResource GlyphBrush}"
                    Width="4" Visibility="Collapsed" />
			<Border Name="TrackBackground" Margin="0" CornerRadius="2" Width="4" Grid.Column="1"
                    Background="{StaticResource HorizontalLightBrush}"
                    BorderBrush="{StaticResource HorizontalNormalBorderBrush}" BorderThickness="1" />
			<Track Grid.Column="1" Name="PART_Track">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource SliderThumbStyle}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
				</Track.IncreaseRepeatButton>
			</Track>
			<TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Column="2" Fill="{TemplateBinding Foreground}"
                    Placement="Right" Width="4" Visibility="Collapsed" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type Slider}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="MinWidth" Value="104" />
				<Setter Property="MinHeight" Value="21" />
				<Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="MinWidth" Value="21" />
				<Setter Property="MinHeight" Value="104" />
				<Setter Property="Template" Value="{StaticResource VerticalSlider}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--TabControl-->
	<Style TargetType="TabControl" >
		<Setter Property="Padding" Value="5"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel
                     Panel.ZIndex="100"
                     Margin="5,0,0,0"
                     IsItemsHost="True"
                     Background="Transparent" />
						<Border Background="Transparent" Grid.Row="1">
							<ContentPresenter ContentSource="SelectedContent" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TabItem}">
		<Setter Property="MinHeight" Value="20"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border
                     Name="Border"
                     BorderThickness="1"
                     CornerRadius="5,5,0,0" 
                     Background="{StaticResource DarkBrush}">
							<ContentPresenter x:Name="ContentSite"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       ContentSource="Header"
                       Margin="2" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabItem.IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
						</Trigger>
						<Trigger Property="TabItem.IsSelected" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Text Box-->
	<Style TargetType="TextBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid >
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1"
                                        To="MouseOver"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1"
                                        To="ReadOnly"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1"
                                        To="Disabled"/>
									<vsm:VisualTransition From="Normal"
                                        GeneratedDuration="00:00:00.3000000"
                                        To="MouseOver"/>
									<vsm:VisualTransition From="MouseOver"
                                        GeneratedDuration="00:00:00.5000000"
                                        To="Normal"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="HoverBorder"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00"
                                            Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement"
                                                   Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0"
                                            Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement"
                                                   Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0"
                                            Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="Border"
                    Opacity="1"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2,2,2,2">
							<Grid>
								<Border x:Name="ReadOnlyVisualElement"
                        Opacity="0"
                        Background="#72F7F7F7"/>
								<Border BorderThickness="1"
                        CornerRadius="1,1,1,1">
									<Border.BorderBrush>
										<SolidColorBrush Color="Transparent"
                                     x:Name="MouseOverColor"/>
									</Border.BorderBrush>
									<ScrollViewer BorderThickness="0"
                                IsTabStop="False"
                                Padding="{TemplateBinding Padding}"
                                x:Name="PART_ContentHost"/>
								</Border>
							</Grid>
						</Border>
						<Border x:Name="HoverBorder"
                    Opacity="0"
                    BorderBrush="{StaticResource NormalBrush}"
                    BorderThickness="2,2,2,2"
                    CornerRadius="2,2,2,2"/>
						<Border x:Name="DisabledVisualElement"
                    IsHitTestVisible="False"
                    Opacity="0"
                    Background="#FFFFFFFF"
                    BorderBrush="#A5F7F7F7"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2,2,2,2"/>
						<Border Margin="1"
                    x:Name="FocusVisualElement"
                    IsHitTestVisible="False"
                    Opacity="0"
                    BorderBrush="{StaticResource NormalBrush}"
                    BorderThickness="2.1,2.1,2.1,2.1"
                    CornerRadius="0.2,0.2,0.2,0.2"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidBorderErrorTemplate}" />
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={StaticResource ErrorsArrayToErrorString}}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Tree View -->
	<Style TargetType="TreeView">
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Cursor" Value="Arrow"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeView">
					<Grid x:Name="Root">
						<Grid.Resources>
							<SolidColorBrush x:Key="BorderBrush" Color="#FF000000"/>
						</Grid.Resources>
						<Border x:Name="Border" BorderBrush="{StaticResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<Border Margin="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
								<ScrollViewer x:Name="ScrollViewer" Background="{x:Null}" BorderBrush="Transparent" BorderThickness="0" IsTabStop="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
									<ItemsPresenter x:Name="TreeItems" Margin="5"/>
								</ScrollViewer>
							</Border>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--TreeViewItem-->
	<Style TargetType="TreeViewItem">
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Cursor" Value="Arrow"/>
		<Setter Property="IsTabStop" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeViewItem">
					<Grid Background="{x:Null}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="15"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="#FF999999"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualState x:Name="Unselected"/>
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="select" Storyboard.TargetProperty="Opacity" To=".75"/>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="SelectedInactive">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="inactive" Storyboard.TargetProperty="Opacity" To=".2"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="HasItemsStates">
								<vsm:VisualState x:Name="HasItems"/>
								<vsm:VisualState x:Name="NoItems">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ExpansionStates">
								<vsm:VisualState x:Name="Collapsed"/>
								<vsm:VisualState x:Name="Expanded">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False" >
							<ToggleButton.Template>
								<ControlTemplate TargetType="ToggleButton">
									<Grid x:Name="Root" Background="Transparent">
										<vsm:VisualStateManager.VisualStateGroups>
											<vsm:VisualStateGroup x:Name="CommonStates">
												<vsm:VisualState x:Name="Normal"/>
												<vsm:VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Path.Stroke).Color" To="#FF1BBBFA"/>
													</Storyboard>
												</vsm:VisualState>
												<vsm:VisualState x:Name="Disabled">
													<Storyboard>
														<DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7"/>
													</Storyboard>
												</vsm:VisualState>
											</vsm:VisualStateGroup>
											<vsm:VisualStateGroup x:Name="CheckStates">
												<vsm:VisualState x:Name="Unchecked"/>
												<vsm:VisualState x:Name="Checked">
													<Storyboard>
														<DoubleAnimation Duration="0" Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0"/>
														<DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
													</Storyboard>
												</vsm:VisualState>
											</vsm:VisualStateGroup>
										</vsm:VisualStateManager.VisualStateGroups>
										<Grid HorizontalAlignment="Right" Margin="2 2 5 2">
											<Path x:Name="UncheckedVisual" Fill="#FFFFFFFF" Stroke="#FF989898" StrokeLineJoin="Miter" StrokeThickness="1" Height="9" HorizontalAlignment="Right" VerticalAlignment="Center" Width="6" Data="M 0,0 L 0,9 L 5,4.5 Z"/>
											<Path x:Name="CheckedVisual" Fill="#FF262626" StrokeLineJoin="Miter" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Opacity="0" Data="M 6,0 L 6,6 L 0,6 Z"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<Rectangle x:Name="select" Fill="#FFBADDE9" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" Grid.Column="1"/>
						<Rectangle x:Name="inactive" Fill="#FF999999" Stroke="#FF333333" StrokeThickness="1" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0" Grid.Column="1"/>
						<Button x:Name="Header" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Grid.Column="1" ClickMode="Hover" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}">
							<Button.Template>
								<ControlTemplate TargetType="Button">
									<Grid Background="{TemplateBinding Background}">
										<vsm:VisualStateManager.VisualStateGroups>
											<vsm:VisualStateGroup x:Name="CommonStates">
												<vsm:VisualState x:Name="Normal"/>
												<vsm:VisualState x:Name="Pressed">
													<Storyboard>
														<DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To=".5"/>
													</Storyboard>
												</vsm:VisualState>
												<vsm:VisualState x:Name="Disabled">
													<Storyboard>
														<DoubleAnimation Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To=".55"/>
													</Storyboard>
												</vsm:VisualState>
											</vsm:VisualStateGroup>
										</vsm:VisualStateManager.VisualStateGroups>
										<Rectangle x:Name="hover" Fill="#FFBADDE9" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" IsHitTestVisible="False" Opacity="0"/>
										<ContentPresenter x:Name="content" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
									</Grid>
								</ControlTemplate>
							</Button.Template>
						</Button>
						<ItemsPresenter x:Name="ItemsHost" Visibility="Collapsed" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--List View-->
	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
       TargetType="ScrollViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top"
              HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden"
              Focusable="false">
								<GridViewHeaderRowPresenter Margin="2,0,2,0"
                Columns="{Binding Path=TemplatedParent.View.Columns,
                          RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContainerStyle="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplate="{Binding
                             Path=TemplatedParent.View.ColumnHeaderTemplate,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplateSelector="{Binding 
                             Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                             RelativeSource={RelativeSource TemplatedParent}}"
                AllowsColumnReorder="{Binding
                             Path=TemplatedParent.View.AllowsColumnReorder,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContextMenu="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContextMenu,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderToolTip="{Binding
                             Path=TemplatedParent.View.ColumnHeaderToolTip,
                             RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>

							<ScrollContentPresenter Name="PART_ScrollContentPresenter"
              KeyboardNavigation.DirectionalNavigation="Local"
              CanContentScroll="True" CanHorizontallyScroll="False" 
              CanVerticallyScroll="False"/>
						</DockPanel>

						<ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Value="{TemplateBinding HorizontalOffset}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

						<ScrollBar Name="PART_VerticalScrollBar"
            Grid.Column="1"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Value="{TemplateBinding VerticalOffset}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
		<Setter Property="Background" Value="{StaticResource NormalBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}"
          Background="Transparent">
						<Rectangle HorizontalAlignment="Center"
            Width="1"
            Fill="{TemplateBinding Background}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type GridViewColumnHeader}"
       TargetType="GridViewColumnHeader">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GridViewColumnHeader">
					<Grid>
						<Border Name="HeaderBorder"
            BorderThickness="0"
            BorderBrush="{StaticResource NormalBorderBrush}"
            Background="{StaticResource LightBrush}"
            Padding="2,0,2,0">
							<ContentPresenter Name="HeaderContent"
              Margin="0,0,0,1"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<Thumb x:Name="PART_HeaderGripper"
            HorizontalAlignment="Right"
            Style="{StaticResource GridViewColumnHeaderGripper}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="HeaderBorder"
                    Property="Background" Value="{StaticResource NormalBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="HeaderBorder"
                    Property="Background" Value="{StaticResource PressedBrush}"/>
							<Setter TargetName="HeaderContent"
                    Property="Margin" Value="1,1,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Role" Value="Floating">
				<Setter Property="Opacity" Value="0.7"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Canvas Name="PART_FloatingHeaderCanvas">
								<Rectangle Fill="#60000000"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"/>
							</Canvas>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="Padding">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="GridViewColumnHeader">
							<Border Name="HeaderBorder"
              BorderThickness="0"
              BorderBrush="{StaticResource NormalBorderBrush}"
              Background="{StaticResource LightBrush}"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="{x:Type ListView}" TargetType="ListView">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border" CornerRadius="5"
          BorderThickness="{TemplateBinding BorderThickness}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          Background="{StaticResource WindowBackgroundBrush}">
						<ScrollViewer Style="{DynamicResource
                        {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<VirtualizingStackPanel IsItemsHost="True" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping"
                   Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
                    Value="false"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                   Value="false">
							<Setter TargetName="Border"
                    Property="Background"
                    Value="{StaticResource DisabledBorderBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListViewNoVirtualization" TargetType="ListView">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border" CornerRadius="5"
          BorderThickness="{TemplateBinding BorderThickness}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          Background="{StaticResource WindowBackgroundBrush}">
						<ScrollViewer Style="{DynamicResource
                        {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping"
                   Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
                    Value="false"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                   Value="false">
							<Setter TargetName="Border"
                    Property="Background"
                    Value="{StaticResource DisabledBorderBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="#ccd5e0" />
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="Background" Value="#b1c0d0" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="#b1c0d0" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--CalendarDayButton-->
	<Style x:Key="CalendarDayButtonRedBlackout" TargetType="primitives:CalendarDayButton">
		<Setter Property="Background" Value="#FFBADDE9"/>
		<Setter Property="MinWidth" Value="5"/>
		<Setter Property="MinHeight" Value="5"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="primitives:CalendarDayButton">
					<Grid>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0:0:0.1" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
										<DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity" To=".35" Duration="0" />
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Unselected" />
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To=".75" Duration="0" />
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CalendarButtonFocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="CalendarButtonFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="CalendarButtonUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ActiveStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Active" />
								<vsm:VisualState x:Name="Inactive">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FF777777"></ColorAnimation>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="DayStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="RegularDay" />
								<vsm:VisualState x:Name="Today">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
										<ColorAnimation Duration="0" Storyboard.TargetName="selectedText" Storyboard.TargetProperty="Color" To="#FFFFFFFF"></ColorAnimation>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="BlackoutDayStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="NormalDay" />
								<vsm:VisualState x:Name="BlackoutDay">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetName="Blackout" Storyboard.TargetProperty="Opacity" To=".2"/>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="TodayBackground" RadiusX="1" RadiusY="1" Opacity="0" Fill="#FFAAAAAA"/>
						<Rectangle x:Name="SelectedBackground" RadiusX="1" RadiusY="1" Opacity="0" Fill="{TemplateBinding Background}"/>
						<Rectangle x:Name="Background" RadiusX="1" RadiusY="1" Opacity="0" Fill="{TemplateBinding Background}"/>
						<ContentPresenter
                                x:Name="NormalText"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="5,1,5,1">
							<TextElement.Foreground>
								<SolidColorBrush x:Name="selectedText" Color="#FF333333"/>
							</TextElement.Foreground>
						</ContentPresenter>
						<Rectangle x:Name="Blackout" RadiusX="1" RadiusY="1" Opacity="0" Fill="Red" />
						<Rectangle x:Name="DayButtonFocusVisual" Visibility="Collapsed" IsHitTestVisible="false"
                                RadiusX="1" RadiusY="1" Stroke="#FF45D6FA" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="HoverBorder" TargetType="Border">
		<Setter Property="Background" Value="AliceBlue" />
		<Setter Property="BorderBrush" Value="LightBlue" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="CornerRadius" Value="1" />
		<Style.Triggers>
			<EventTrigger RoutedEvent="UIElement.MouseMove">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="BorderThickness" To="2" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="BorderThickness" To="1" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.GotFocus">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="BorderThickness" To="2" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.LostFocus">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.05" Storyboard.TargetProperty="BorderThickness" To="1" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.DragEnter">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.02" Storyboard.TargetProperty="Opacity" To="0.5" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="UIElement.DragLeave">
				<BeginStoryboard>
					<Storyboard>
						<ThicknessAnimation BeginTime="00:00:00" Duration="00:00:00.02" Storyboard.TargetProperty="Opacity" To="1" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="GroupBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="GroupBox">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Border Margin="5,0,5,0" Opacity="0.8" 
                Background="{StaticResource GroupBoxBrush}"
                BorderThickness="0" >
							<Border.OpacityMask>
								<LinearGradientBrush EndPoint="1,1" StartPoint="0,1">
									<GradientStop Color="Black" Offset="0.95"/>
									<GradientStop Offset="1"/>
									<GradientStop Color="Black" Offset="0.05"/>
									<GradientStop/>
								</LinearGradientBrush>
							</Border.OpacityMask>
						</Border>
						<ContentPresenter
                  Margin="12,0,0,0" 
                  ContentSource="Header" 
                  RecognizesAccessKey="True" />
						<Border 
                Grid.Row="1" 
                Background="{TemplateBinding Background}"
                BorderBrush="{StaticResource SolidBorderBrush}"
                BorderThickness="1" 
                CornerRadius="5" >
							<ContentPresenter 
                  Margin="5" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="White" Offset="0"/>
		<GradientStop Color="#FFBFBFBF" Offset="0.5"/>
		<GradientStop Color="#FF878787" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF0F8FE" Offset="0"/>
		<GradientStop Color="#FFE0F3FE" Offset="0.3"/>
		<GradientStop Color="#FF6FA7C5" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFDCF0FA" Offset="0"/>
		<GradientStop Color="#FFC5E6F7" Offset="0.2"/>
		<GradientStop Color="#FF5690D0" Offset="1"/>
	</LinearGradientBrush>

	<Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid SnapsToDevicePixels="True" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="20" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="0" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
									<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal" />
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                To="#FF3C7FB1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle"
                                                Storyboard.TargetProperty="(Ellipse.Fill)">
											<DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{StaticResource ExpanderArrowHoverFill}" />
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                To="#222" />
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                To="#FF526C7B" />
										<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                Storyboard.TargetProperty="StrokeThickness" To="1.5" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle"
                                                Storyboard.TargetProperty="(Ellipse.Fill)">
											<DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{StaticResource ExpanderArrowPressedFill}" />
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                To="#FF003366" />
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="20"
                                Height="20" Stroke="DarkGray" />
						<Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                VerticalAlignment="Center" Width="20" Height="20" />
						<Path x:Name="arrow" VerticalAlignment="Center"
                                HorizontalAlignment="Center" Stroke="#666" StrokeThickness="2" Data="M 1,1 L 5,5 L 9,1"
                                RenderTransformOrigin="0.5,0.5" />
						<ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                Grid.RowSpan="2" Margin="3" Name="content" RenderTransformOrigin="0.5,0.5"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,5 L 5,1 L 9,5" />
						</Trigger>
						<Trigger Property="Tag" Value="up">
							<Setter Property="LayoutTransform" TargetName="arrow">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Tag" Value="left">
							<Setter Property="LayoutTransform" TargetName="arrow">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter Property="LayoutTransform" TargetName="content">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="content" Property="Grid.Row" Value="1"/>
							<Setter TargetName="content" Property="Grid.Column" Value="0"/>
							<Setter TargetName="content" Property="Grid.ColumnSpan" Value="2"/>
						</Trigger>
						<Trigger Property="Tag" Value="right">
							<Setter Property="LayoutTransform" TargetName="arrow">
								<Setter.Value>
									<RotateTransform Angle="270" />
								</Setter.Value>
							</Setter>
							<Setter Property="LayoutTransform" TargetName="content">
								<Setter.Value>
									<RotateTransform Angle="90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="content" Property="Grid.Row" Value="1"/>
							<Setter TargetName="content" Property="Grid.Column" Value="0"/>
							<Setter TargetName="content" Property="Grid.ColumnSpan" Value="2"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="#666" />
							<Setter Property="Stroke" TargetName="arrow" Value="#222" />
							<Setter Property="Visibility" TargetName="shadow" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Expander">
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid SnapsToDevicePixels="true" Background="Transparent">
						<Grid.RowDefinitions>
							<RowDefinition Name="rd0" Height="Auto" />
							<RowDefinition Name="rd1" Height="*" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Name="cd0" Width="*" />
							<ColumnDefinition Name="cd1" Width="Auto" />
						</Grid.ColumnDefinitions>
						<Border x:Name="Header" Padding="3,0,3,0">
							<Grid SnapsToDevicePixels="true" Background="Transparent">
								<ToggleButton Name="HeaderToggle" Style="{StaticResource ExpanderToggleButtonStyle}"
                                        HorizontalAlignment="Left" VerticalAlignment="Top"
                                        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}">
								</ToggleButton>
							</Grid>
						</Border>

						<ContentPresenter x:Name="ExpandSite" Panel.ZIndex="99" Visibility="Collapsed" Grid.Row="1"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="Tag" TargetName="HeaderToggle" Value="up" />
							<Setter Property="VerticalAlignment" TargetName="HeaderToggle" Value="Bottom" />
							<Setter Property="Grid.Row" TargetName="ExpandSite" Value="0" />
							<Setter Property="Grid.Row" TargetName="Header" Value="1" />
							<Setter Property="Grid.Column" TargetName="ExpandSite" Value="0" />
							<Setter Property="Grid.Column" TargetName="Header" Value="0" />
							<Setter Property="Height" TargetName="rd0" Value="Auto" />
							<Setter Property="Height" TargetName="rd1" Value="*" />
							<Setter Property="Width" TargetName="cd0" Value="*" />
							<Setter Property="Width" TargetName="cd1" Value="Auto" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="HorizontalAlignment" TargetName="HeaderToggle" Value="Right" />
							<Setter Property="Tag" TargetName="HeaderToggle" Value="left" />
							<Setter Property="Grid.Row" TargetName="ExpandSite" Value="0" />
							<Setter Property="Grid.Row" TargetName="Header" Value="0" />
							<Setter Property="Grid.Column" TargetName="ExpandSite" Value="0" />
							<Setter Property="Grid.Column" TargetName="Header" Value="1" />
							<Setter Property="Height" TargetName="rd0" Value="Auto" />
							<Setter Property="Height" TargetName="rd1" Value="Auto" />
							<Setter Property="Width" TargetName="cd0" Value="*" />
							<Setter Property="Width" TargetName="cd1" Value="Auto" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="Tag" TargetName="HeaderToggle" Value="right" />
							<Setter Property="Grid.Row" TargetName="ExpandSite" Value="0" />
							<Setter Property="Grid.Row" TargetName="Header" Value="0" />
							<Setter Property="Grid.Column" TargetName="ExpandSite" Value="1" />
							<Setter Property="Grid.Column" TargetName="Header" Value="0" />
							<Setter Property="Height" TargetName="rd0" Value="*" />
							<Setter Property="Height" TargetName="rd1" Value="Auto" />
							<Setter Property="Width" TargetName="cd0" Value="Auto" />
							<Setter Property="Width" TargetName="cd1" Value="*" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ExpanderToggleButtonSimpleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border CornerRadius="3"  HorizontalAlignment="Stretch"
                            VerticalAlignment="Top" ClipToBounds="True" 
                            Name="border" BorderThickness="1">
						<Grid SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="20" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="20" />
							</Grid.RowDefinitions>
							<vsm:VisualStateManager.VisualStateGroups>
								<vsm:VisualStateGroup x:Name="CommonStates">
									<vsm:VisualStateGroup.Transitions>
										<vsm:VisualTransition GeneratedDuration="0" />
										<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver" />
										<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed" />
									</vsm:VisualStateGroup.Transitions>
									<vsm:VisualState x:Name="Normal" />
									<vsm:VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                    Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                    To="#FF3C7FB1" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle"
                                                    Storyboard.TargetProperty="(Ellipse.Fill)">
												<DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ExpanderArrowHoverFill}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow"
                                                    Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                    To="#222" />
										</Storyboard>
									</vsm:VisualState>
									<vsm:VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                    Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                    To="#FF526C7B" />
											<DoubleAnimation BeginTime="0" Storyboard.TargetName="circle"
                                                    Storyboard.TargetProperty="StrokeThickness" To="1.5" />
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="circle"
                                                    Storyboard.TargetProperty="(Ellipse.Fill)">
												<DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{StaticResource ExpanderArrowPressedFill}" />
											</ObjectAnimationUsingKeyFrames>
											<ColorAnimation BeginTime="0" Storyboard.TargetName="arrow"
                                                    Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                    To="#FF003366" />
										</Storyboard>
									</vsm:VisualState>
								</vsm:VisualStateGroup>
							</vsm:VisualStateManager.VisualStateGroups>
							<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                                    IsHitTestVisible="True" />
							<Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="20"
                                    Height="20" Stroke="DarkGray" Grid.Column="1" />
							<Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow"
                                    VerticalAlignment="Center" Width="20" Height="20" Grid.Column="1" />
							<Path SnapsToDevicePixels="false" x:Name="arrow" VerticalAlignment="Center"
                                    HorizontalAlignment="Center" Stroke="#666" StrokeThickness="2"
                                    Data="M 1,1 L 5,5 L 9,1" RenderTransformOrigin="0.5,0.5" Grid.Column="1" />
							<ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"
                                 />
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,5 L 5,1 L 9,5" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="#666" />
							<Setter Property="Stroke" TargetName="arrow" Value="#222" />
							<Setter Property="BorderBrush" TargetName="border" Value="#666" />
							<Setter Property="BorderThickness" TargetName="border" Value="1" />
							<Setter Property="Visibility" TargetName="shadow" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Expander" x:Key="HeaderedExpander">
		<Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid SnapsToDevicePixels="true" Background="Transparent">
						<Grid.RowDefinitions>
							<RowDefinition Name="rd0"  Height="Auto" />
							<RowDefinition Name="rd1"  Height="*" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Name="cd0" Width="*"  />
							<ColumnDefinition Name="cd1" Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Border x:Name="Header" CornerRadius="3" Background="{TemplateBinding Background}">
							<Grid SnapsToDevicePixels="true" Background="Transparent">
								<ToggleButton Name="HeaderToggle"
                                        Style="{StaticResource ExpanderToggleButtonSimpleStyle}"
                                        Content="{TemplateBinding Header}" HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								</ToggleButton>
							</Grid>
						</Border>

						<ContentPresenter x:Name="ExpandSite" Panel.ZIndex="99" 
                                          Visibility="Collapsed" Grid.Row="1" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="PasswordBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Border x:Name="Border"
                        Opacity="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2,2,2,2">
						<Grid>
							<Border x:Name="ReadOnlyVisualElement"
                                Opacity="0" VerticalAlignment="Center"
                                Background="#72F7F7F7"/>
							<Border BorderThickness="1"
                                CornerRadius="1,1,1,1">
								<Border.BorderBrush>
									<SolidColorBrush Color="Transparent"
                                 x:Name="MouseOverColor"/>
								</Border.BorderBrush>
								<ScrollViewer BorderThickness="0" VerticalAlignment="Center"
                                    IsTabStop="False"
                                    Padding="{TemplateBinding Padding}"
                                    x:Name="PART_ContentHost"/>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="SMinusButton" >
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Height="24" Width="24" Background="#00FFFFFF">
						<Ellipse Name="Circle" StrokeThickness="1">
							<Ellipse.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#FFFFFFFF" />
										<GradientStop Offset="0.1" Color="#FFCCD4E9" />
										<GradientStop Offset="0.47" Color="#FF4881D2" />
										<GradientStop Offset="0.47" Color="#FF001A5A" />
										<GradientStop Offset="0.7" Color="#FF007BD6" />
										<GradientStop Offset="0.85" Color="#FF54DAFF" />
										<GradientStop Offset="0.95" Color="#FF86FFFF" />
										<GradientStop Offset="1" Color="#FFFFFFFF" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Ellipse.Fill>
							<Ellipse.Stroke>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#FF6C90C4" />
										<GradientStop Offset="0.5" Color="#FF315BB4" />
										<GradientStop Offset="0.5" Color="#FF002091" />
										<GradientStop Offset="1" Color="#FF08377C" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Ellipse.Stroke>
						</Ellipse>
						<Border Margin="4.438,10,4.313,10.063" Name="Arrow" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="#FFFFFFFF"/>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFFFFFFF" />
											<GradientStop Offset="0.5" Color="#FFEBEEF5" />
											<GradientStop Offset="0.5" Color="#FFD8DDEB" />
											<GradientStop Offset="1" Color="#FFDFE2F0" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Stroke" TargetName="Circle">
								<Setter.Value>
									<SolidColorBrush>#FFB5BACE</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Stroke" TargetName="Arrow">
								<Setter.Value>
									<SolidColorBrush>#B0B5BACE</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Fill" TargetName="Arrow">
								<Setter.Value>
									<SolidColorBrush>#D0FFFFFF</SolidColorBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="true">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFFFFFFF" />
											<GradientStop Offset="0.1" Color="#FFDFEDF9" />
											<GradientStop Offset="0.47" Color="#FF3086E1" />
											<GradientStop Offset="0.47" Color="#FF003B91" />
											<GradientStop Offset="0.7" Color="#FF1793EF" />
											<GradientStop Offset="0.85" Color="#FF5AD4FF" />
											<GradientStop Offset="0.95" Color="#FFBDFFFF" />
											<GradientStop Offset="1" Color="#FFFFFFFF" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>

						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFC0D2F5" />
											<GradientStop Offset="0.47" Color="#FF5E7A9C" />
											<GradientStop Offset="0.47" Color="#FF00062D" />
											<GradientStop Offset="0.7" Color="#FF005F9F" />
											<GradientStop Offset="0.85" Color="#FF1FA4E2" />
											<GradientStop Offset="0.95" Color="#FF61DAFF" />
											<GradientStop Offset="1" Color="#FF48CFFF" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="SPlusButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Height="24" Width="24" Background="#00FFFFFF">
						<Ellipse Name="Circle" StrokeThickness="1">
							<Ellipse.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#FFFFFFFF" />
										<GradientStop Offset="0.1" Color="#FFCCD4E9" />
										<GradientStop Offset="0.47" Color="#FF4881D2" />
										<GradientStop Offset="0.47" Color="#FF001A5A" />
										<GradientStop Offset="0.7" Color="#FF007BD6" />
										<GradientStop Offset="0.85" Color="#FF54DAFF" />
										<GradientStop Offset="0.95" Color="#FF86FFFF" />
										<GradientStop Offset="1" Color="#FFFFFFFF" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Ellipse.Fill>
							<Ellipse.Stroke>
								<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
									<LinearGradientBrush.GradientStops>
										<GradientStop Offset="0" Color="#FF6C90C4" />
										<GradientStop Offset="0.5" Color="#FF315BB4" />
										<GradientStop Offset="0.5" Color="#FF002091" />
										<GradientStop Offset="1" Color="#FF08377C" />
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Ellipse.Stroke>
						</Ellipse>
						<Border Margin="4.438,10,4.313,10.063" Name="Arrow" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="#FFFFFFFF">
							<Border Margin="-0.995,-0.931,-1.007,-1.053" x:Name="Arrow_Copy" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="#FFFFFFFF" RenderTransformOrigin="0.5,0.5">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="90"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
						</Border>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="false">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFFFFFFF" />
											<GradientStop Offset="0.5" Color="#FFEBEEF5" />
											<GradientStop Offset="0.5" Color="#FFD8DDEB" />
											<GradientStop Offset="1" Color="#FFDFE2F0" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Stroke" TargetName="Circle">
								<Setter.Value>
									<SolidColorBrush>#FFB5BACE</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Stroke" TargetName="Arrow">
								<Setter.Value>
									<SolidColorBrush>#B0B5BACE</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Shape.Fill" TargetName="Arrow">
								<Setter.Value>
									<SolidColorBrush>#D0FFFFFF</SolidColorBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="UIElement.IsMouseOver" Value="true">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFFFFFFF" />
											<GradientStop Offset="0.1" Color="#FFDFEDF9" />
											<GradientStop Offset="0.47" Color="#FF3086E1" />
											<GradientStop Offset="0.47" Color="#FF003B91" />
											<GradientStop Offset="0.7" Color="#FF1793EF" />
											<GradientStop Offset="0.85" Color="#FF5AD4FF" />
											<GradientStop Offset="0.95" Color="#FFBDFFFF" />
											<GradientStop Offset="1" Color="#FFFFFFFF" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>

						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Setter Property="Shape.Fill" TargetName="Circle">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<LinearGradientBrush.GradientStops>
											<GradientStop Offset="0" Color="#FFC0D2F5" />
											<GradientStop Offset="0.47" Color="#FF5E7A9C" />
											<GradientStop Offset="0.47" Color="#FF00062D" />
											<GradientStop Offset="0.7" Color="#FF005F9F" />
											<GradientStop Offset="0.85" Color="#FF1FA4E2" />
											<GradientStop Offset="0.95" Color="#FF61DAFF" />
											<GradientStop Offset="1" Color="#FF48CFFF" />
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>

						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type primitives:DatePickerTextBox}">
		<Setter Property="Text" Value="Ընտրեք ամսաթիվը" />
	</Style>

	<Style TargetType="{x:Type DatePickerTextBox}">
		<Setter Property="Text" Value="Ընտրեք ամսաթիվը" />
	</Style>

	<Style TargetType="Window">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Window.Loaded">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" FillBehavior="HoldEnd" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontWeight="Bold">
                    <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>